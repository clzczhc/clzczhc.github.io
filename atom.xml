<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>赤蓝紫</title>
  
  <subtitle>赤蓝紫</subtitle>
  <link href="https://www.clzczh.top/atom.xml" rel="self"/>
  
  <link href="https://www.clzczh.top/"/>
  <updated>2025-04-16T03:00:50.160Z</updated>
  <id>https://www.clzczh.top/</id>
  
  <author>
    <name>赤蓝紫</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>工作中的那点事之 组件</title>
    <link href="https://www.clzczh.top/2025/04/09/work-component/"/>
    <id>https://www.clzczh.top/2025/04/09/work-component/</id>
    <published>2025-04-09T21:00:05.000Z</published>
    <updated>2025-04-16T03:00:50.160Z</updated>
    
    <content type="html"><![CDATA[<h1 id="工作中的那点事之-组件"><a href="#工作中的那点事之-组件" class="headerlink" title="工作中的那点事之 组件"></a>工作中的那点事之 组件</h1><blockquote><p>记录一下工作中实现的基础组件的思路。</p></blockquote><h2 id="颜色选择器"><a href="#颜色选择器" class="headerlink" title="颜色选择器"></a>颜色选择器</h2><h3 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h3><p>利用 hsv 色系，将颜色拆分成 hue(色相)、Saturation(饱和度)、Value(亮度)三部分。</p><blockquote><p>也可叫<code>hsb</code>色系。Bright(明度)</p></blockquote><p>其中 <code>Saturation</code> 组件负责<code>saturation</code>、<code>value</code>的变化，<code>Hue</code>组件负责 hue 的变化。</p><p><img src="https://www.clzczh.top/CLZ_img/images/202504092106306.png"><br>上图中，红色是<code>Saturation</code>组件，蓝色则是<code>Hue</code>组件。</p><blockquote><p>Hue 的背景色可以直接使用下面的。算是一个标准。<code>react-color</code>、<code>ant-design</code>都是</p></blockquote><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(<br>  to right,<br>  <span class="hljs-built_in">rgb</span>(<span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>) <span class="hljs-number">0%</span>,<br>  <span class="hljs-built_in">rgb</span>(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0</span>) <span class="hljs-number">17%</span>,<br>  <span class="hljs-built_in">rgb</span>(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0</span>) <span class="hljs-number">33%</span>,<br>  <span class="hljs-built_in">rgb</span>(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>) <span class="hljs-number">50%</span>,<br>  <span class="hljs-built_in">rgb</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">255</span>) <span class="hljs-number">67%</span>,<br>  <span class="hljs-built_in">rgb</span>(<span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">255</span>) <span class="hljs-number">83%</span>,<br>  <span class="hljs-built_in">rgb</span>(<span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>) <span class="hljs-number">100%</span><br>);<br></code></pre></td></tr></tbody></table></figure><p><strong>计算公式</strong>：<br><code>Saturation</code>：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> { width, height, left, top } = container.<span class="hljs-property">target</span>.<span class="hljs-title function_">getBoundingClientRect</span>();<br><span class="hljs-keyword">let</span> x = mouseX - left;<br><span class="hljs-keyword">let</span> y = mouseY - top;<br><br><span class="hljs-keyword">const</span> saturation = x / width;<br><span class="hljs-keyword">const</span> value = <span class="hljs-number">1</span> - y / height;<br></code></pre></td></tr></tbody></table></figure><p><code>Hue</code>：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> hue = (x / width) * <span class="hljs-number">360</span>;<br></code></pre></td></tr></tbody></table></figure><p><strong>公式简解</strong>：<br>色相的取值在 0-360 之间。所以计算出比例后需要乘以 360。而饱和度和亮度的取值在 0-1 之间，可以不做处理。</p><p>亮度需要用<code>1 - y / height</code>，是因为<code>mouseY - top</code>得到的结果是鼠标点距离顶部的距离，而亮度的值应该是鼠标点到底部的距离，所占的比例。</p><h3 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h3><blockquote><p>这里颜色的值采用的是<code>number</code>类型，需要转成 16 进制才能获取到<code>hex</code>字符串。下图中的<code>value</code>就是对应的<code>number</code>类型</p></blockquote><p><img src="https://www.clzczh.top/CLZ_img/images/202504092134287.png"></p><p><code>Saturation</code>、<code>Hue</code>都维护自己的一套数据结构。<br>初始值由父组件<code>ColorPicker</code>的<code>value</code>控制。</p><p>因为<code>Saturation</code>控制饱和度、亮度，<code>Hue</code>控制色相。所以它们的改动会互相影响，所以暴露方法，修改自身的状态。比如<code>Hue</code>控制的色相发生变化了，需要让<code>Saturation</code>修改它的色相值。</p><blockquote><p>每个组件都维护自己的一套数据结构，通过暴露方法来修改自身状态这种方式，不会出现色系转换后的精度丢失问题。导致的问题就是会有抖动现象。因为<code>rgb</code>转换成<code>hsv</code>色系后，可能是无限不循环小数，再转换成<code>rgb</code>，值会有偏差。</p></blockquote><p>颜色转换算法可以参考：<br><a href="https://gist.github.com/mjackson/5311256">https://gist.github.com/mjackson/5311256</a></p><h3 id="有问题版本"><a href="#有问题版本" class="headerlink" title="有问题版本"></a>有问题版本</h3><p><img src="https://www.clzczh.top/CLZ_img/images/202504092149501.png"></p><p>这个版本的数据结构可以比较容易看出色系转换的问题。</p><blockquote><p>这个版本的数据结构由<code>ColorPicker</code>控制，其他组件都是基于<code>value</code>进行一些转换。会出现问题：色相变化时，<code>Hue</code>需要把<code>hsv</code>转换成<code>value</code>，让父组件修改<code>value</code>。同时，父组件修改后的值又反过来修改<code>Hue</code>的值，就会出现抖动问题。</p></blockquote><h2 id="日期选择器（日历）"><a href="#日期选择器（日历）" class="headerlink" title="日期选择器（日历）"></a>日期选择器（日历）</h2><h3 id="核心"><a href="#核心" class="headerlink" title="核心"></a>核心</h3><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 获取该月的第一天是星期几</span><br><span class="hljs-keyword">const</span> firstDayOfMonth = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(year, month, <span class="hljs-number">1</span>).<span class="hljs-title function_">getDay</span>();<br><br><span class="hljs-comment">// 获取该月的总天数</span><br><span class="hljs-keyword">const</span> totalDays = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(year, month + <span class="hljs-number">1</span>, <span class="hljs-number">0</span>).<span class="hljs-title function_">getDate</span>();<br></code></pre></td></tr></tbody></table></figure><p><strong>注意</strong>：</p><ol><li>上面的<code>month</code>是从 0 开始计数的，0-11。</li><li><code>getDay</code>返回值中，0 代表星期天，1 代表星期一，依此类推</li><li><code>getDate</code>可以返回一个指定的日期对象为一个月中的哪一日（从 1–31）。<code>new Date()</code>的第三个参数为 0 时，可以获取上个月的总天数。</li></ol><p>通过上面这两个主要的方法，再拓展一下，就可以实现日期选择器了，包括支持选中范围等功能。</p><p><a href="https://juejin.cn/post/7257441765976506425">整天用 Calendar 日历组件，不如自己手写一个吧！</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;工作中的那点事之-组件&quot;&gt;&lt;a href=&quot;#工作中的那点事之-组件&quot; class=&quot;headerlink&quot; title=&quot;工作中的那点事之 组件&quot;&gt;&lt;/a&gt;工作中的那点事之 组件&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;记录一下工作中实现的基础组件的思路。&lt;/p</summary>
      
    
    
    
    <category term="前端" scheme="https://www.clzczh.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="工作中的那点事" scheme="https://www.clzczh.top/tags/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B/"/>
    
    <category term="组件" scheme="https://www.clzczh.top/tags/%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>工作中的那点事之 杂项</title>
    <link href="https://www.clzczh.top/2025/04/08/work-chaos/"/>
    <id>https://www.clzczh.top/2025/04/08/work-chaos/</id>
    <published>2025-04-08T20:48:05.000Z</published>
    <updated>2025-04-16T03:00:50.160Z</updated>
    
    <content type="html"><![CDATA[<h1 id="工作中的那点事之-杂项"><a href="#工作中的那点事之-杂项" class="headerlink" title="工作中的那点事之 杂项"></a>工作中的那点事之 杂项</h1><h2 id="shell-语法"><a href="#shell-语法" class="headerlink" title="shell 语法"></a>shell 语法</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sh -c 'echo "Hello"; echo "world"'<br></code></pre></td></tr></tbody></table></figure><blockquote><p>-c 表示是命令，分号将每条命令分隔开。</p></blockquote><h3 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h3><p>语法</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">if [条件]; then [命令]; else 命令; fi<br></code></pre></td></tr></tbody></table></figure><p>使用:</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">sh -c '''<br>if [ "$EnvName" = "dev" ];<br>then echo "dev";<br>else echo "pro";<br>fi<br>'''<br></code></pre></td></tr></tbody></table></figure><p><img src="https://www.clzczh.top/CLZ_img/images/202504081954641.png"></p><h2 id="antd-pro-多环境变量"><a href="#antd-pro-多环境变量" class="headerlink" title="antd pro 多环境变量"></a>antd pro 多环境变量</h2><blockquote><p>可以通过<code>define</code>的方式提供自定义环境变量，但是在不同环境的值可能不一样，所以需要添加不同环境的配置文件。但是如果都需要上线，但是上线环境有分 dev 和 pro 的话，需要文件名需要是<code>config.prod.dev.ts</code>和<code>config.prod.prod.ts</code>.</p></blockquote><p><a href="https://pro.ant.design/zh-CN/docs/environment-manage/">环境变量</a></p><p><img src="https://www.clzczh.top/CLZ_img/images/202504081958121.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;工作中的那点事之-杂项&quot;&gt;&lt;a href=&quot;#工作中的那点事之-杂项&quot; class=&quot;headerlink&quot; title=&quot;工作中的那点事之 杂项&quot;&gt;&lt;/a&gt;工作中的那点事之 杂项&lt;/h1&gt;&lt;h2 id=&quot;shell-语法&quot;&gt;&lt;a href=&quot;#shell-语法&quot;</summary>
      
    
    
    
    <category term="前端" scheme="https://www.clzczh.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="工作中的那点事" scheme="https://www.clzczh.top/tags/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B/"/>
    
  </entry>
  
  <entry>
    <title>工作中的那点事之 性能优化</title>
    <link href="https://www.clzczh.top/2025/04/08/work-optimize/"/>
    <id>https://www.clzczh.top/2025/04/08/work-optimize/</id>
    <published>2025-04-08T20:48:05.000Z</published>
    <updated>2025-04-16T03:00:50.160Z</updated>
    
    <content type="html"><![CDATA[<h1 id="工作中的那点事之-性能优化"><a href="#工作中的那点事之-性能优化" class="headerlink" title="工作中的那点事之 性能优化"></a>工作中的那点事之 性能优化</h1><h2 id="无效渲染"><a href="#无效渲染" class="headerlink" title="无效渲染"></a>无效渲染</h2><blockquote><p>一开始想写一下总结的，工作中重构项目用到了一些<strong>无效渲染优化</strong>。但是后面看到下面的文章，已经总结的很好了</p></blockquote><p><a href="https://www.cnblogs.com/echolun/p/17110031.html">react 无效渲染优化–工具篇</a><br><a href="https://zhuanlan.zhihu.com/p/678698481">请删掉 99%的 useMemo</a><br><a href="https://kentcdodds.com/blog/optimize-react-re-renders">One simple trick to optimize React re-renders</a></p><h3 id="memo的第二个参数"><a href="#memo的第二个参数" class="headerlink" title="memo的第二个参数"></a><code>memo</code>的第二个参数</h3><blockquote><p>一般情况下不会用到。使用会有风险，自定义浅比较如果漏掉了相关属性，会导致组件的状态不改变。</p></blockquote><p><code>memo</code>默认情况下，判断需不需要<code>rerender</code>通过<code>shadowEqual</code>来进行浅比较，不过只会比较第一层。数据结构很深，可以通过第二个参数手动进行浅比较。</p><p>如：</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> { memo, useState } <span class="hljs-keyword">from</span> <span class="hljs-string">"react"</span>;<br><br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">ComponentProps</span> {<br>  <span class="hljs-attr">config</span>: {<br>    <span class="hljs-attr">user</span>: {<br>      <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;<br>      <span class="hljs-attr">age</span>: <span class="hljs-built_in">number</span>;<br>      <span class="hljs-attr">other</span>: <span class="hljs-built_in">string</span>;<br>    };<br>  };<br>}<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title class_">Component</span> = <span class="hljs-title function_">memo</span>(<br>  <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">props</span>: <span class="hljs-title class_">ComponentProps</span></span>) =&gt;</span> {<br>    <span class="hljs-keyword">const</span> {<br>      <span class="hljs-attr">config</span>: { user },<br>    } = props;<br><br>    <span class="hljs-keyword">const</span> { name, age } = user;<br><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">"rerender"</span>);<br><br>    <span class="hljs-keyword">return</span> (<br>      <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>{name}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>{age}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/&gt;</span></span><br>    );<br>  },<br>  <span class="hljs-function">(<span class="hljs-params">prevProps, nextProps</span>) =&gt;</span> {<br>    <span class="hljs-keyword">return</span> (<br>      prevProps.<span class="hljs-property">config</span>.<span class="hljs-property">user</span>.<span class="hljs-property">name</span> === nextProps.<span class="hljs-property">config</span>.<span class="hljs-property">user</span>.<span class="hljs-property">name</span> &amp;&amp;<br>      prevProps.<span class="hljs-property">config</span>.<span class="hljs-property">user</span>.<span class="hljs-property">age</span> === nextProps.<span class="hljs-property">config</span>.<span class="hljs-property">user</span>.<span class="hljs-property">age</span><br>    );<br>  }<br>);<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">Home</span>(<span class="hljs-params"></span>) {<br>  <span class="hljs-keyword">const</span> [compProps, setCompProps] = useState&lt;<span class="hljs-title class_">ComponentProps</span>&gt;({<br>    <span class="hljs-attr">config</span>: {<br>      <span class="hljs-attr">user</span>: {<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">"clz"</span>,<br>        <span class="hljs-attr">age</span>: <span class="hljs-number">24</span>,<br>        <span class="hljs-attr">other</span>: <span class="hljs-string">"hello"</span>,<br>      },<br>    },<br>  });<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Component</span> {<span class="hljs-attr">...compProps</span>} /&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>{compProps.config.user.other}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"btn-container"</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">onClick</span>=<span class="hljs-string">{():</span> <span class="hljs-attr">void</span> =&gt;</span> {</span><br><span class="language-xml">            setCompProps({</span><br><span class="language-xml">              config: {</span><br><span class="language-xml">                user: {</span><br><span class="language-xml">                  ...compProps.config.user,</span><br><span class="language-xml">                  name: "ccc",</span><br><span class="language-xml">                },</span><br><span class="language-xml">              },</span><br><span class="language-xml">            });</span><br><span class="language-xml">          }}</span><br><span class="language-xml">        &gt;</span><br><span class="language-xml">          change name</span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">onClick</span>=<span class="hljs-string">{():</span> <span class="hljs-attr">void</span> =&gt;</span> {</span><br><span class="language-xml">            setCompProps({</span><br><span class="language-xml">              config: {</span><br><span class="language-xml">                user: {</span><br><span class="language-xml">                  ...compProps.config.user,</span><br><span class="language-xml">                  other: "hi",</span><br><span class="language-xml">                },</span><br><span class="language-xml">              },</span><br><span class="language-xml">            });</span><br><span class="language-xml">          }}</span><br><span class="language-xml">        &gt;</span><br><span class="language-xml">          change other</span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/&gt;</span></span><br>  );<br>}<br></code></pre></td></tr></tbody></table></figure><p>上面的例子中，父组件改变<code>other</code>的值也不会触发<code>User</code>组件的<code>rerender</code>。如果把<code>memo</code>的第二个参数去掉，则会触发<code>User</code>的<code>rerender</code>。</p><h2 id="组件懒加载"><a href="#组件懒加载" class="headerlink" title="组件懒加载"></a>组件懒加载</h2><p><code>lazy</code>和<code>Suspense</code>联合使用。</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> { lazy, <span class="hljs-title class_">Suspense</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">"react"</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title class_">Home</span> = <span class="hljs-title function_">lazy</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">"./components/Home"</span>));<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">App</span>(<span class="hljs-params"></span>) {<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Suspense</span> <span class="hljs-attr">fallback</span>=<span class="hljs-string">"loading"</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Home</span> /&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">Suspense</span>&gt;</span></span><br>  );<br>}<br></code></pre></td></tr></tbody></table></figure><p>使用<code>Suspense</code>可以在等待加载<code>lazy</code>组件时，显示加载内容，如上面的<code>loading</code>文案。</p><p>还可以封装成一个公共方法。</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> { lazy, <span class="hljs-title class_">ReactElement</span>, <span class="hljs-title class_">Suspense</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">"react"</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title class_">Home</span> = <span class="hljs-title function_">lazy</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">"./components/Home"</span>));<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">withLoadingComponent</span> = (<span class="hljs-params"><span class="hljs-attr">component</span>: <span class="hljs-title class_">ReactElement</span></span>) =&gt; (<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Suspense</span> <span class="hljs-attr">fallback</span>=<span class="hljs-string">"loading"</span>&gt;</span>{component}<span class="hljs-tag">&lt;/<span class="hljs-name">Suspense</span>&gt;</span></span><br>);<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">App</span>(<span class="hljs-params"></span>) {<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">withLoadingComponent</span>(<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Home</span> /&gt;</span></span>);<br>}<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;工作中的那点事之-性能优化&quot;&gt;&lt;a href=&quot;#工作中的那点事之-性能优化&quot; class=&quot;headerlink&quot; title=&quot;工作中的那点事之 性能优化&quot;&gt;&lt;/a&gt;工作中的那点事之 性能优化&lt;/h1&gt;&lt;h2 id=&quot;无效渲染&quot;&gt;&lt;a href=&quot;#无效渲染&quot;</summary>
      
    
    
    
    <category term="前端" scheme="https://www.clzczh.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="工作中的那点事" scheme="https://www.clzczh.top/tags/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B/"/>
    
    <category term="性能优化" scheme="https://www.clzczh.top/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>工作中的那点事之 HTML</title>
    <link href="https://www.clzczh.top/2025/04/02/work-html/"/>
    <id>https://www.clzczh.top/2025/04/02/work-html/</id>
    <published>2025-04-02T23:53:05.000Z</published>
    <updated>2025-04-16T03:00:50.160Z</updated>
    
    <content type="html"><![CDATA[<h1 id="工作中的那点事之-HTML"><a href="#工作中的那点事之-HTML" class="headerlink" title="工作中的那点事之 HTML"></a>工作中的那点事之 HTML</h1><h2 id="SVG"><a href="#SVG" class="headerlink" title="SVG"></a>SVG</h2><h3 id="currentColor"><a href="#currentColor" class="headerlink" title="currentColor"></a>currentColor</h3><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">  <span class="hljs-selector-class">.svg-container</span> {</span><br><span class="language-css">    <span class="hljs-attribute">color</span>: red;</span><br><span class="language-css">  }</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"svg-container"</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">svg</span></span><br><span class="hljs-tag">    <span class="hljs-attr">width</span>=<span class="hljs-string">"16"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">height</span>=<span class="hljs-string">"16"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">viewBox</span>=<span class="hljs-string">"0 0 16 16"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">fill</span>=<span class="hljs-string">"none"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns</span>=<span class="hljs-string">"http://www.w3.org/2000/svg"</span></span><br><span class="hljs-tag">  &gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">circle</span> <span class="hljs-attr">cx</span>=<span class="hljs-string">"8"</span> <span class="hljs-attr">cy</span>=<span class="hljs-string">"8"</span> <span class="hljs-attr">r</span>=<span class="hljs-string">"7.25"</span> <span class="hljs-attr">stroke</span>=<span class="hljs-string">"#000"</span> <span class="hljs-attr">stroke-width</span>=<span class="hljs-string">"1.5"</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">path</span></span><br><span class="hljs-tag">      <span class="hljs-attr">d</span>=<span class="hljs-string">"M8 15.25C7.7649 15.25 7.48181 15.1442 7.15894 14.8321C6.83246 14.5165 6.50419 14.0235 6.21224 13.3562C5.62932 12.0239 5.25 10.1307 5.25 8C5.25 5.86928 5.62932 3.97615 6.21224 2.64376C6.50419 1.97645 6.83246 1.48352 7.15894 1.16789C7.48181 0.855751 7.7649 0.75 8 0.75C8.2351 0.75 8.51819 0.855751 8.84106 1.16789C9.16754 1.48352 9.49581 1.97645 9.78776 2.64376C10.3707 3.97615 10.75 5.86928 10.75 8C10.75 10.1307 10.3707 12.0239 9.78776 13.3562C9.49581 14.0235 9.16754 14.5165 8.84106 14.8321C8.51819 15.1442 8.2351 15.25 8 15.25Z"</span></span><br><span class="hljs-tag">      <span class="hljs-attr">stroke</span>=<span class="hljs-string">"#000"</span></span><br><span class="hljs-tag">      <span class="hljs-attr">stroke-width</span>=<span class="hljs-string">"1.5"</span></span><br><span class="hljs-tag">    /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">line</span> <span class="hljs-attr">x1</span>=<span class="hljs-string">"1"</span> <span class="hljs-attr">y1</span>=<span class="hljs-string">"5.75"</span> <span class="hljs-attr">x2</span>=<span class="hljs-string">"15"</span> <span class="hljs-attr">y2</span>=<span class="hljs-string">"5.75"</span> <span class="hljs-attr">stroke</span>=<span class="hljs-string">"#000"</span> <span class="hljs-attr">stroke-width</span>=<span class="hljs-string">"1.5"</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">line</span></span><br><span class="hljs-tag">      <span class="hljs-attr">x1</span>=<span class="hljs-string">"1"</span></span><br><span class="hljs-tag">      <span class="hljs-attr">y1</span>=<span class="hljs-string">"10.25"</span></span><br><span class="hljs-tag">      <span class="hljs-attr">x2</span>=<span class="hljs-string">"15"</span></span><br><span class="hljs-tag">      <span class="hljs-attr">y2</span>=<span class="hljs-string">"10.25"</span></span><br><span class="hljs-tag">      <span class="hljs-attr">stroke</span>=<span class="hljs-string">"#000"</span></span><br><span class="hljs-tag">      <span class="hljs-attr">stroke-width</span>=<span class="hljs-string">"1.5"</span></span><br><span class="hljs-tag">    /&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></tbody></table></figure><p>上面的代码中，给 svg 的容器以及 svg 添加<code>color</code>样式都无法修改 icon 的颜色。<br>可以通过把由外面容器控制的颜色的值修改为<code>currentColor</code>。上面的例子中，则是把上面的<code>#000</code>都改成<code>currentColor</code>。</p><p>如：（上面的代码截取一小节</p><figure class="highlight svg"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs svg"><span class="hljs-tag">&lt;<span class="hljs-name">circle</span> <span class="hljs-attr">cx</span>=<span class="hljs-string">"8"</span> <span class="hljs-attr">cy</span>=<span class="hljs-string">"8"</span> <span class="hljs-attr">r</span>=<span class="hljs-string">"7.25"</span> <span class="hljs-attr">stroke</span>=<span class="hljs-string">"currentColor"</span> <span class="hljs-attr">stroke-width</span>=<span class="hljs-string">"1.5"</span> /&gt;</span><br></code></pre></td></tr></tbody></table></figure><h3 id="svg-use"><a href="#svg-use" class="headerlink" title="svg use"></a>svg use</h3><blockquote><p><code>use</code> 元素用于引用其他 SVG 元素。<code>xlink:href="#proto-image"</code>表示引用一个 ID 为 proto-image 的 SVG 图像</p></blockquote><h3 id="dom-节点转-svg"><a href="#dom-节点转-svg" class="headerlink" title="dom 节点转 svg"></a>dom 节点转 svg</h3><p><a href="https://www.clzczh.top/2024/04/21/dom-to-svg/">dom 节点转 svg</a></p><h2 id="contenteditable"><a href="#contenteditable" class="headerlink" title="contenteditable"></a><code>contenteditable</code></h2><blockquote><p>给元素添加上该属性后，元素就可以被用户编辑。市面上的部分富文本编辑器就是基于该属性实现的，如<code>Quill</code>。</p></blockquote><p>浅浅尝试：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"box"</span> <span class="hljs-attr">contenteditable</span>&gt;</span>123<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-keyword">const</span> element = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">"div"</span>);</span><br><span class="language-javascript">  element.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">"paste"</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> {</span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> file = e.<span class="hljs-property">clipboardData</span>.<span class="hljs-property">files</span>[<span class="hljs-number">0</span>];</span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">const</span> reader = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileReader</span>();</span><br><span class="language-javascript">    reader.<span class="hljs-property">onload</span> = <span class="hljs-function">() =&gt;</span> {</span><br><span class="language-javascript">      <span class="hljs-keyword">if</span> (reader.<span class="hljs-property">result</span>) {</span><br><span class="language-javascript">        <span class="hljs-keyword">const</span> img = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">"img"</span>);</span><br><span class="language-javascript">        img.<span class="hljs-property">src</span> = reader.<span class="hljs-property">result</span>;</span><br><span class="language-javascript">        img.<span class="hljs-property">width</span> = <span class="hljs-number">200</span>;</span><br><span class="language-javascript">        element.<span class="hljs-title function_">appendChild</span>(img);</span><br><span class="language-javascript">      }</span><br><span class="language-javascript">    };</span><br><span class="language-javascript"></span><br><span class="language-javascript">    reader.<span class="hljs-title function_">readAsDataURL</span>(file);</span><br><span class="language-javascript">  });</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></tbody></table></figure><blockquote><p>添加<code>contenteditable</code>属性后，可以绑定<code>paste</code>监听粘贴操作，然后利用<code>FileReader</code>可以把文件转成 base64。</p></blockquote><p>效果：<br><img src="https://www.clzczh.top/CLZ_img/images/202504082031257.gif"></p><p>更多查看：<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes/contenteditable">contenteditable</a><br><a href="https://zhuanlan.zhihu.com/p/37051858">深入浅出 contenteditable 富文本编辑器</a></p><h3 id="可能会用到的其他方案"><a href="#可能会用到的其他方案" class="headerlink" title="可能会用到的其他方案"></a>可能会用到的其他方案</h3><p><a href="https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326">How to convert uint8 Array to base64 Encoded String?</a></p><h2 id="HTML-标准"><a href="#HTML-标准" class="headerlink" title="HTML 标准"></a><a href="https://html.spec.whatwg.org/">HTML 标准</a></h2><h2 id="黑技术"><a href="#黑技术" class="headerlink" title="黑技术"></a>黑技术</h2><p><a href="http://browserhacks.com/">http://browserhacks.com/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;工作中的那点事之-HTML&quot;&gt;&lt;a href=&quot;#工作中的那点事之-HTML&quot; class=&quot;headerlink&quot; title=&quot;工作中的那点事之 HTML&quot;&gt;&lt;/a&gt;工作中的那点事之 HTML&lt;/h1&gt;&lt;h2 id=&quot;SVG&quot;&gt;&lt;a href=&quot;#SVG&quot; c</summary>
      
    
    
    
    <category term="前端" scheme="https://www.clzczh.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="HTML" scheme="https://www.clzczh.top/tags/HTML/"/>
    
    <category term="工作中的那点事" scheme="https://www.clzczh.top/tags/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B/"/>
    
    <category term="SVG" scheme="https://www.clzczh.top/tags/SVG/"/>
    
  </entry>
  
  <entry>
    <title>工作中的那点事之 JavaScript</title>
    <link href="https://www.clzczh.top/2025/04/02/work-js/"/>
    <id>https://www.clzczh.top/2025/04/02/work-js/</id>
    <published>2025-04-02T23:53:05.000Z</published>
    <updated>2025-04-16T03:00:50.160Z</updated>
    
    <content type="html"><![CDATA[<h1 id="工作中的那点事之-JavaScript"><a href="#工作中的那点事之-JavaScript" class="headerlink" title="工作中的那点事之 JavaScript"></a>工作中的那点事之 JavaScript</h1><h2 id="Navigator-sendBeacon（埋点）"><a href="#Navigator-sendBeacon（埋点）" class="headerlink" title="Navigator.sendBeacon（埋点）"></a>Navigator.sendBeacon（埋点）</h2><p><code>sendBeacon</code>利用浏览器的后台任务队列，可以实现在页面关闭后还可以继续发送数据。有数据大小限制（通常为几十<code>KB</code>），所以适用于发送少量数据，尤其是上报埋点信息这种场景。</p><blockquote><p>返回结果为<code>true/false</code>。<code>true</code>表示请求排队成功，<code>false</code>表示失败（超过大小限制就会失败，所以可以通过判断返回值为<code>false</code>的时候，改用<code>XHR</code>）。数据传一个超长超长的字符串就可以触发。</p></blockquote><p>特点：</p><ol><li>页面关闭还可以继续发送数据</li><li>有数据大小限制</li><li>支持跨域(<a href="https://juejin.cn/post/7071128380170567710">异步请求只知道 ajax？sendBeacon 这个新的请求策略也很香！</a>这篇文章有引用 w3c 文档佐证)</li><li>只支持<code>POST</code>请求</li></ol><h3 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h3><p>html</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"send-btn"</span>&gt;</span>sendBeacon<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"xhr-btn"</span>&gt;</span>xhr get<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br></code></pre></td></tr></tbody></table></figure><p>js</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">sendBeacon</span>(<span class="hljs-params">url, data</span>) {<br>  <span class="hljs-keyword">const</span> result = navigator.<span class="hljs-title function_">sendBeacon</span>(<br>    url,<br>    <span class="hljs-string">`data=<span class="hljs-subst">${btoa(<span class="hljs-built_in">JSON</span>.stringify(data))}</span>`</span><br>  );<br><br>  <span class="hljs-keyword">if</span> (result) {<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">"beacon send success!"</span>);<br>  }<br>}<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">sendXhr</span>(<span class="hljs-params">url, data</span>) {<br>  <span class="hljs-keyword">const</span> xhr = <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMLHttpRequest</span>();<br>  xhr.<span class="hljs-property">onreadystatechange</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) {<br>    <span class="hljs-keyword">if</span> (xhr.<span class="hljs-property">readyState</span> === <span class="hljs-number">4</span> &amp;&amp; xhr.<span class="hljs-property">status</span> === <span class="hljs-number">200</span>) {<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">"xhr send success!"</span>);<br>    }<br>  };<br><br>  xhr.<span class="hljs-title function_">open</span>(<span class="hljs-string">"get"</span>, <span class="hljs-string">`<span class="hljs-subst">${url}</span>?data=<span class="hljs-subst">${btoa(<span class="hljs-built_in">JSON</span>.stringify(data))}</span>`</span>);<br>  xhr.<span class="hljs-title function_">send</span>();<br>}<br><br><span class="hljs-keyword">const</span> url = <span class="hljs-string">"http://localhost:3000/track/v.png"</span>;<br><span class="hljs-keyword">const</span> data = {<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">"clz"</span>,<br>  <span class="hljs-attr">type</span>: <span class="hljs-string">"svip"</span>,<br>};<br><br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">"send-btn"</span>).<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">"click"</span>, <span class="hljs-function">() =&gt;</span> {<br>  <span class="hljs-title function_">sendBeacon</span>(url, data);<br>});<br><br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">"xhr-btn"</span>).<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">"click"</span>, <span class="hljs-function">() =&gt;</span> {<br>  <span class="hljs-title function_">sendXhr</span>(url, data);<br>});<br></code></pre></td></tr></tbody></table></figure><p>服务端 js</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">"express"</span>);<br><br><span class="hljs-keyword">const</span> app = <span class="hljs-title function_">express</span>();<br><br>app.<span class="hljs-title function_">use</span>(express.<span class="hljs-title function_">text</span>());<br><br>app.<span class="hljs-title function_">post</span>(<span class="hljs-string">"/track/v.png"</span>, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> {<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(req.<span class="hljs-property">body</span>);<br>  res.<span class="hljs-title function_">sendStatus</span>(<span class="hljs-number">200</span>);<br>});<br><br>app.<span class="hljs-title function_">get</span>(<span class="hljs-string">"/track/v.png"</span>, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> {<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(req.<span class="hljs-property">query</span>);<br>  res.<span class="hljs-title function_">sendStatus</span>(<span class="hljs-number">200</span>);<br>});<br><br>app.<span class="hljs-title function_">listen</span>(<span class="hljs-number">3000</span>, <span class="hljs-function">() =&gt;</span> {<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">"Server is running on http://localhost:3000"</span>);<br>});<br></code></pre></td></tr></tbody></table></figure><p><img src="https://www.clzczh.top/CLZ_img/images/202504022341617.gif"></p><blockquote><p>从上图中，可以看到<code>sendBeacon</code>的<strong>支持跨域</strong>这个特点</p></blockquote><h2 id="base64-编解码"><a href="#base64-编解码" class="headerlink" title="base64 编解码"></a>base64 编解码</h2><h3 id="btoa、atob"><a href="#btoa、atob" class="headerlink" title="btoa、atob"></a><code>btoa</code>、<code>atob</code></h3><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> encodedData = <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">btoa</span>(<span class="hljs-string">"Hello, world"</span>); <span class="hljs-comment">// 编码</span><br><span class="hljs-keyword">let</span> decodedData = <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">atob</span>(encodedData); <span class="hljs-comment">// 解码</span><br></code></pre></td></tr></tbody></table></figure><h3 id="Buffer"><a href="#Buffer" class="headerlink" title="Buffer"></a>Buffer</h3><p>nodejs 环境可以利用<code>Buffer</code>实现</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> person = {<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">"赤蓝紫"</span>,<br>};<br><br><span class="hljs-keyword">const</span> personString = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(person);<br><br><span class="hljs-keyword">const</span> buffer = <span class="hljs-title class_">Buffer</span>.<span class="hljs-title function_">from</span>(personString, <span class="hljs-string">"utf8"</span>);<br><br><span class="hljs-keyword">const</span> base64 = buffer.<span class="hljs-title function_">toString</span>(<span class="hljs-string">"base64"</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(base64);<br><br><span class="hljs-keyword">const</span> originalString = <span class="hljs-title class_">Buffer</span>.<span class="hljs-title function_">from</span>(base64, <span class="hljs-string">"base64"</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-string">"utf8"</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(originalString);<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;工作中的那点事之-JavaScript&quot;&gt;&lt;a href=&quot;#工作中的那点事之-JavaScript&quot; class=&quot;headerlink&quot; title=&quot;工作中的那点事之 JavaScript&quot;&gt;&lt;/a&gt;工作中的那点事之 JavaScript&lt;/h1&gt;&lt;h2 i</summary>
      
    
    
    
    <category term="前端" scheme="https://www.clzczh.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="JavaScript" scheme="https://www.clzczh.top/tags/JavaScript/"/>
    
    <category term="工作中的那点事" scheme="https://www.clzczh.top/tags/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B/"/>
    
  </entry>
  
  <entry>
    <title>工作中的那点事之 动画</title>
    <link href="https://www.clzczh.top/2025/03/24/work-animate/"/>
    <id>https://www.clzczh.top/2025/03/24/work-animate/</id>
    <published>2025-03-24T20:08:05.000Z</published>
    <updated>2025-04-16T03:00:50.160Z</updated>
    
    <content type="html"><![CDATA[<h1 id="工作中的那点事之-动画"><a href="#工作中的那点事之-动画" class="headerlink" title="工作中的那点事之 动画"></a>工作中的那点事之 动画</h1><h2 id="AutoAnimate"><a href="#AutoAnimate" class="headerlink" title="AutoAnimate"></a>AutoAnimate</h2><p><a href="https://auto-animate.formkit.com/">AutoAnimate</a></p><p>可以零配置实现添加动画。</p><p>使用方法则是使用<code>useAutoAnimate</code>hook，会返回第一个元素为<code>ref</code>的数组。把该<code>ref</code>放到想要添加动画的元素上即可。</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> { useAutoAnimate } <span class="hljs-keyword">from</span> <span class="hljs-string">"@formkit/auto-animate/react"</span>;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">MyList</span>(<span class="hljs-params"></span>) {<br>  <span class="hljs-keyword">const</span> [animationParent] = <span class="hljs-title function_">useAutoAnimate</span>();<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">{animationParent}</span>&gt;</span>{/* 🪄 Magic animations for your list */}<span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br>  );<br>}<br></code></pre></td></tr></tbody></table></figure><p>自动动画会应用于父元素（设置 auto animate 的 ref）的<strong>直属子元素</strong>。</p><blockquote><p>官方的文档说是会应用于父元素及其直属父元素。但是直接移除父元素并不会触发动画。</p></blockquote><ol><li>DOM 中添加了子元素。</li><li>DOM 中的子元素被移除。</li><li>子元素在 DOM 中被移动</li></ol><blockquote><p>当发生上述三种情况的时候，会触发动画</p></blockquote><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>在官网的 demo 中加了一个直接移除父元素的情况。代码也比较简单易懂。</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> { useState } <span class="hljs-keyword">from</span> <span class="hljs-string">"react"</span>;<br><span class="hljs-keyword">import</span> { useAutoAnimate } <span class="hljs-keyword">from</span> <span class="hljs-string">"@formkit/auto-animate/react"</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">App</span>(<span class="hljs-params"></span>) {<br>  <span class="hljs-keyword">const</span> [items, setItems] = <span class="hljs-title function_">useState</span>([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]);<br>  <span class="hljs-keyword">const</span> [parent, enableAnimations] = <span class="hljs-title function_">useAutoAnimate</span>();<br><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">add</span> = (<span class="hljs-params"></span>) =&gt; <span class="hljs-title function_">setItems</span>([...items, items.<span class="hljs-property">length</span> + <span class="hljs-number">1</span>]);<br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">remove</span> = (<span class="hljs-params"></span>) =&gt;<br>    <span class="hljs-title function_">setItems</span>(<span class="hljs-function">(<span class="hljs-params">prev</span>) =&gt;</span> {<br>      prev.<span class="hljs-title function_">splice</span>(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>);<br>      <span class="hljs-keyword">return</span> [...prev];<br>    });<br><br>  <span class="hljs-keyword">const</span> [visible, setVisible] = <span class="hljs-title function_">useState</span>(<span class="hljs-literal">true</span>);<br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">removeParent</span> = (<span class="hljs-params"></span>) =&gt; {<br>    <span class="hljs-title function_">setVisible</span>(<span class="hljs-literal">false</span>);<br>  };<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">      {visible ? (</span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">{parent}</span>&gt;</span></span><br><span class="language-xml">          {items.map((item) =&gt; (</span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">key</span>=<span class="hljs-string">{item}</span>&gt;</span>{item}<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">          ))}</span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">      ) : null}</span><br><span class="language-xml"></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{add}</span>&gt;</span>Add number<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{remove}</span>&gt;</span>Rmove number<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{removeParent}</span>&gt;</span>Rmove Parent<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{()</span> =&gt;</span> enableAnimations(false)}&gt;Disable<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/&gt;</span></span><br>  );<br>}<br></code></pre></td></tr></tbody></table></figure><p>效果：<br><img src="https://www.clzczh.top/CLZ_img/images/auto-animate.gif"><br><img src="https://www.clzczh.top/CLZ_img/images/202503241104819.gif"></p><p>图 1 中是启用 AutoAnimate 的效果，图 2 则是关闭后的效果。</p><h2 id="React-Transition-Group"><a href="#React-Transition-Group" class="headerlink" title="React Transition Group"></a>React Transition Group</h2><blockquote><p>Transition 组件使用会把样式跟组件耦合在一起，使用也不是很方便。所以主要介绍一下<code>CSSTransition</code></p></blockquote><h3 id="CSSTransition"><a href="#CSSTransition" class="headerlink" title="CSSTransition"></a>CSSTransition</h3><p>使用方法跟 Vue 的<code>transition</code>组件类似。</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> { useRef, useState } <span class="hljs-keyword">from</span> <span class="hljs-string">"react"</span>;<br><span class="hljs-keyword">import</span> { <span class="hljs-title class_">CSSTransition</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">"react-transition-group"</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">"./App.css"</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">App</span>(<span class="hljs-params"></span>) {<br>  <span class="hljs-keyword">const</span> [visible, setVisible] = <span class="hljs-title function_">useState</span>(<span class="hljs-literal">false</span>);<br>  <span class="hljs-keyword">const</span> nodeRef = <span class="hljs-title function_">useRef</span>(<span class="hljs-literal">null</span>);<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">CSSTransition</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">nodeRef</span>=<span class="hljs-string">{nodeRef}</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">in</span>=<span class="hljs-string">{visible}</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">timeout</span>=<span class="hljs-string">{200}</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">unmountOnExit</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">classNames</span>=<span class="hljs-string">"container"</span></span></span><br><span class="hljs-tag"><span class="language-xml">      &gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">{nodeRef}</span>&gt;</span>I am CLZ!!!<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>no transition<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">CSSTransition</span>&gt;</span></span><br><br>      <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{()</span> =&gt;</span> setVisible(true)}&gt;</span><br><span class="language-xml">        Click to Enter</span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><br>      <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{()</span> =&gt;</span> setVisible(false)}&gt;</span><br><span class="language-xml">        Click to Leave</span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br>    &lt;/div&gt;<br>  );<br>}<br></code></pre></td></tr></tbody></table></figure><blockquote><p><code>nodeRef</code>: 需要转换的 don 元素的 React 引用<br><code>in</code>: <code>CSSTransition</code>的<code>children</code>是否显示<br><code>unmountOnExit</code>：触发<code>exit</code>后，是否从 dom 树中移除。触发<code>exit</code>的时间一般是<code>in</code>对应的值修改为<code>false</code>。</p></blockquote><p><strong><code>CSSTransition</code>还需要添加样式才能成功添加动画</strong>。类名的规则如下：</p><blockquote><p>其中<code>$$</code>为<code>CSSTransition</code>的<code>classNames</code>（这里的<code>s</code>是因为还可以给每个阶段单独指定<code>className</code>，具体查看官网。</p></blockquote><ol><li><code>$$-enter</code>: 触发<code>enter</code>前的样式</li><li><code>$$-enter-active</code>：触发<code>enter</code>后的样式。效果就是从<code>$$-enter</code>过渡到<code>$$-enter-active</code>的样式</li><li><code>$$-exit</code>: 触发<code>exit</code>前的样式</li><li><code>$$-exit-active</code>：触发<code>exit</code>后的样式。同<code>$$-enter-active</code></li></ol><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.container-enter</span> {<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(-<span class="hljs-number">100px</span>);<br>  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;<br>}<br><span class="hljs-selector-class">.container-enter-active</span> {<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-number">0</span>);<br>  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">transition</span>: all <span class="hljs-number">200ms</span>;<br>}<br><span class="hljs-selector-class">.container-exit</span> {<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-number">0</span>);<br>  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;<br>}<br><span class="hljs-selector-class">.container-exit-active</span> {<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(-<span class="hljs-number">100px</span>);<br>  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">transition</span>: all <span class="hljs-number">200ms</span>;<br>}<br></code></pre></td></tr></tbody></table></figure><p>效果：<br><img src="https://www.clzczh.top/CLZ_img/images/202503242004727.gif"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;工作中的那点事之-动画&quot;&gt;&lt;a href=&quot;#工作中的那点事之-动画&quot; class=&quot;headerlink&quot; title=&quot;工作中的那点事之 动画&quot;&gt;&lt;/a&gt;工作中的那点事之 动画&lt;/h1&gt;&lt;h2 id=&quot;AutoAnimate&quot;&gt;&lt;a href=&quot;#AutoAn</summary>
      
    
    
    
    <category term="前端" scheme="https://www.clzczh.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="动画" scheme="https://www.clzczh.top/tags/%E5%8A%A8%E7%94%BB/"/>
    
    <category term="工作中的那点事" scheme="https://www.clzczh.top/tags/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B/"/>
    
  </entry>
  
  <entry>
    <title>工作中的那点事之 项目相关</title>
    <link href="https://www.clzczh.top/2025/03/23/work-project/"/>
    <id>https://www.clzczh.top/2025/03/23/work-project/</id>
    <published>2025-03-23T13:48:05.000Z</published>
    <updated>2025-04-16T03:00:50.160Z</updated>
    
    <content type="html"><![CDATA[<h1 id="工作中的那点事之-项目相关"><a href="#工作中的那点事之-项目相关" class="headerlink" title="工作中的那点事之 项目相关"></a>工作中的那点事之 项目相关</h1><h2 id="项目依赖冲突"><a href="#项目依赖冲突" class="headerlink" title="项目依赖冲突"></a>项目依赖冲突</h2><p>项目同时使用了依赖 a 和 b，而且 a 和 b 都使用了依赖 c，不过版本不一样。</p><p>大多数情况下，<code>npm</code>可以自动解决依赖项之间的冲突。但是也有解决不了冲突的情况，这种时候可以通过配置<code>resolutions</code>来解决。</p><p><code>resolutions</code>字段可以指定使用哪个版本。</p><p>比如(假设下面的 a 依赖 1.0.0 版本的 c，b 则依赖 2.0.0)</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">{</span><br>  <span class="hljs-attr">"dependencies"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span><br>    <span class="hljs-attr">"a"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"^1.0.0"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"b"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"^2.0.0"</span><br>  <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">"resolutions"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span><br>    <span class="hljs-attr">"c"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"1.0.0"</span><br>  <span class="hljs-punctuation">}</span><br><span class="hljs-punctuation">}</span><br></code></pre></td></tr></tbody></table></figure><h2 id="madge检查循环依赖"><a href="#madge检查循环依赖" class="headerlink" title="madge检查循环依赖"></a><code>madge</code>检查循环依赖</h2><p>使用起来比较简单，scripts 添加命令<code>"madge": "madge ./src --circular --extensions ts,tsx"</code>，然后执行<code>npm run madge</code>即可。<br>会检查<code>src</code>目录下<code>ts</code>、<code>tsx</code>文件有没有存在循环依赖。</p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>app.tsx</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">UserCard</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">"./components/UserCard"</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">User</span> {<br>  <span class="hljs-attr">id</span>: <span class="hljs-built_in">string</span>;<br>  <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;<br>}<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">App</span>(<span class="hljs-params"></span>) {<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">UserCard</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">user</span>=<span class="hljs-string">{{</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">id:</span> "<span class="hljs-attr">1</span>",</span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">name:</span> "<span class="hljs-attr">clz</span>",</span></span><br><span class="hljs-tag"><span class="language-xml">      }}</span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">onPress</span>=<span class="hljs-string">{()</span> =&gt;</span> {</span><br><span class="language-xml">        console.log("a");</span><br><span class="language-xml">      }}</span><br><span class="language-xml">    /&gt;</span><br>  );<br>}<br></code></pre></td></tr></tbody></table></figure><p>UserCard.tsx</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> { memo } <span class="hljs-keyword">from</span> <span class="hljs-string">"react"</span>;<br><span class="hljs-keyword">import</span> { <span class="hljs-title class_">User</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">"../App"</span>;<br><br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">UserProps</span> {<br>  <span class="hljs-attr">user</span>: <span class="hljs-title class_">User</span>;<br>  <span class="hljs-attr">onPress</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">void</span>;<br>}<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title class_">UserCard</span> = <span class="hljs-title function_">memo</span>(<span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">props</span>: <span class="hljs-title class_">UserProps</span></span>) =&gt;</span> {<br>  <span class="hljs-keyword">const</span> { user, onPress } = props;<br>  <span class="hljs-keyword">return</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{onPress}</span>&gt;</span>{user.name}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>;<br>});<br></code></pre></td></tr></tbody></table></figure><p><img src="https://www.clzczh.top/CLZ_img/images/20250323121221.png"><br>依赖关系大致如上图。</p><p><img src="https://www.clzczh.top/CLZ_img/images/20250323121325.png"><br>执行命令后，会显示哪里出现了循环依赖</p><p>把上面的<code>type User</code>移动到<code>UserCard.ts</code>中后，再执行命令<br><img src="https://www.clzczh.top/CLZ_img/images/20250323121525.png"></p><h3 id="搭配husky、liny-staged使用"><a href="#搭配husky、liny-staged使用" class="headerlink" title="搭配husky、liny-staged使用"></a>搭配<code>husky</code>、<code>liny-staged</code>使用</h3><p>检查循环依赖只需要在提交代码的时候，对改动文件进行检测即可，所以可以搭配<code>husky</code>、<code>liny-staged</code>使用。</p><p><code>husky</code>、<code>lint-staged</code>的使用可以自行学习，也可以参考笔者之前的<a href="https://www.clzczh.top/2023/10/03/react-standard">React 搭建规范</a></p><p><code>package.json</code>添加<code>lint-staged</code>：</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">"lint-staged"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span><br>  <span class="hljs-attr">"*.{js,jsx,ts,tsx}"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-string">"madge --circular"</span><br>  <span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">}</span><br></code></pre></td></tr></tbody></table></figure><p><code>lint-staged</code>已经限制了会被检测的文件，所以<code>scripts</code>下的命令也可以简化为<code>"madge": "madge ./src"</code>。</p><p>效果：<br><img src="https://www.clzczh.top/CLZ_img/images/20250323123600.png"></p><h3 id="i-madge-png生成依赖图"><a href="#i-madge-png生成依赖图" class="headerlink" title="-i madge.png生成依赖图"></a><code>-i madge.png</code>生成依赖图</h3><blockquote><p><strong>需要安装<code>Graphviz</code>，并配置环境变量</strong></p></blockquote><ol><li>不能直接在<code>lint-staged</code>中配置，不然循环依赖检查就不生效了（生成图片，但是提交并没有被拦截）</li><li>配置命令：<code>"madge": "madge ./src -i madge.png"</code>。commit 检查的时候不会生成依赖图片。</li></ol><p>综上所述，生成依赖图应该单独作为一个命令。<code>"generate:madge": "madge ./src -i madge.png --extensions ts,tsx"</code><br><img src="https://www.clzczh.top/CLZ_img/images/20250323132530.png"></p><blockquote><p>改成上面的命令后，就不再是检测循环依赖，而是生成依赖图片。可以从图片中看依赖关系有没有问题。</p></blockquote><h2 id="项目分包"><a href="#项目分包" class="headerlink" title="项目分包"></a>项目分包</h2><p><a href="https://www.clzczh.top/2024/04/13/workspaces/">npm、yarn 使用 workspaces</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;工作中的那点事之-项目相关&quot;&gt;&lt;a href=&quot;#工作中的那点事之-项目相关&quot; class=&quot;headerlink&quot; title=&quot;工作中的那点事之 项目相关&quot;&gt;&lt;/a&gt;工作中的那点事之 项目相关&lt;/h1&gt;&lt;h2 id=&quot;项目依赖冲突&quot;&gt;&lt;a href=&quot;#项目依</summary>
      
    
    
    
    <category term="前端" scheme="https://www.clzczh.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="工作中的那点事" scheme="https://www.clzczh.top/tags/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B/"/>
    
    <category term="项目" scheme="https://www.clzczh.top/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>工作中的那点事之 Docusaurus</title>
    <link href="https://www.clzczh.top/2025/03/22/work-docusaurus/"/>
    <id>https://www.clzczh.top/2025/03/22/work-docusaurus/</id>
    <published>2025-03-22T11:02:05.000Z</published>
    <updated>2025-04-16T03:00:50.160Z</updated>
    
    <content type="html"><![CDATA[<h1 id="工作中的那点事之-Docusaurus"><a href="#工作中的那点事之-Docusaurus" class="headerlink" title="工作中的那点事之 Docusaurus"></a>工作中的那点事之 Docusaurus</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>记录一下之前开发的时候的一些关键步骤、代码</p></blockquote><p>版本：3.7.0</p><h2 id="国际化"><a href="#国际化" class="headerlink" title="国际化"></a>国际化</h2><p>配置文件添加配置：<br>docusaurus.config.ts</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {<br>  <span class="hljs-attr">i18n</span>: {<br>    <span class="hljs-attr">defaultLocale</span>: <span class="hljs-string">"zh-CN"</span>,<br>    <span class="hljs-attr">locales</span>: [<span class="hljs-string">"en"</span>, <span class="hljs-string">"zh-CN"</span>],<br>    <span class="hljs-attr">localeConfigs</span>: {<br>      <span class="hljs-attr">en</span>: {<br>        <span class="hljs-attr">label</span>: <span class="hljs-string">"English"</span>,<br>        <span class="hljs-attr">direction</span>: <span class="hljs-string">"ltr"</span>,<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">"en"</span>,<br>      },<br>      <span class="hljs-string">"zh-CN"</span>: {<br>        <span class="hljs-attr">label</span>: <span class="hljs-string">"简体中文"</span>,<br>        <span class="hljs-attr">direction</span>: <span class="hljs-string">"ltr"</span>,<br>      },<br>    },<br>  },<br>  <span class="hljs-attr">themeConfig</span>: {<br>    <span class="hljs-comment">// ...</span><br>    <span class="hljs-attr">navbar</span>: {<br>      <span class="hljs-comment">// ...</span><br>      <span class="hljs-attr">items</span>: [<br>        {<br>          <span class="hljs-attr">type</span>: <span class="hljs-string">"localeDropdown"</span>, <span class="hljs-comment">//添加选择语言的下拉菜单</span><br>          <span class="hljs-attr">position</span>: <span class="hljs-string">"right"</span>,<br>        },<br>      ],<br>    },<br>  },<br>};<br></code></pre></td></tr></tbody></table></figure><h3 id="生成其它语言的文件结构"><a href="#生成其它语言的文件结构" class="headerlink" title="生成其它语言的文件结构"></a>生成其它语言的文件结构</h3><p>通过下面的命令生成其他语言的文件结构</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">yarn write-translations --locale en<br></code></pre></td></tr></tbody></table></figure><p><img src="https://www.clzczh.top/CLZ_img/images/20250322095101.png"></p><blockquote><p>i18n 下对应语言的文件夹名称由上面配置的<code>path</code>决定，也就是说<code>en</code>对应的文件夹甚至可以配置成<code>zh</code>。</p></blockquote><h3 id="添加文档的翻译文件"><a href="#添加文档的翻译文件" class="headerlink" title="添加文档的翻译文件"></a>添加文档的翻译文件</h3><p>添加文档的翻译文件，则放到<code>docusaurus-plugin-content-docs</code>文件夹下，分别根据生成的 json 文件创建对应版本的翻译文件夹。如果没有分版本的话，那就放到 current 文件夹下。</p><p><img src="https://www.clzczh.top/CLZ_img/images/20250322095506.png"></p><blockquote><p>配置了多语言，但是部分文档没有翻译的话，则会直接使用默认语言。比如上面<code>docs</code>文件夹下还有其他<code>md</code>文件，<code>en</code>下没有，则会直接用<code>docs</code>的内容。</p></blockquote><h3 id="查看效果"><a href="#查看效果" class="headerlink" title="查看效果"></a>查看效果</h3><p>本地环境无法直接查看多语言的情况，<code>yarn start</code>查看默认语言，<code>yarn run start --locale en</code>查看其他语言</p><p>打包后，查看效果：<br><img src="https://www.clzczh.top/CLZ_img/images/20250322101350.png"><br><img src="https://www.clzczh.top/CLZ_img/images/20250322101421.png"></p><h2 id="资源引入路径添加-cdn-前缀"><a href="#资源引入路径添加-cdn-前缀" class="headerlink" title="资源引入路径添加 cdn 前缀"></a>资源引入路径添加 cdn 前缀</h2><p><strong>这部分没有用最新版本的<code>docusaurus</code>测试，版本是<code>2.4.3</code></strong></p><h3 id="编写-webpack-插件"><a href="#编写-webpack-插件" class="headerlink" title="编写 webpack 插件"></a>编写 webpack 插件</h3><p>custom-webpack.js</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">"path"</span>);<br><span class="hljs-keyword">const</span> resolve = path.<span class="hljs-property">resolve</span>;<br><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">context, options</span>) {<br>  <span class="hljs-keyword">return</span> {<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">"custom-webpack"</span>,<br>    <span class="hljs-title function_">configureWebpack</span>(<span class="hljs-params">config, isServer, utils</span>) {<br>      <span class="hljs-keyword">return</span> {<br>        <span class="hljs-attr">resolve</span>: {<br>          <span class="hljs-attr">alias</span>: {<br>            <span class="hljs-string">"@"</span>: <span class="hljs-title function_">resolve</span>(<span class="hljs-string">"/src"</span>),<br>          },<br>        },<br>        <span class="hljs-attr">output</span>: {<br>          <span class="hljs-attr">publicPath</span>: process.<span class="hljs-property">env</span>.<span class="hljs-property">PUBLIC_PATH</span> || <span class="hljs-string">"/"</span>,<br>        },<br>      };<br>    },<br>  };<br>};<br></code></pre></td></tr></tbody></table></figure><p>docusaurus.config.js</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> customWebpack = <span class="hljs-built_in">require</span>(<span class="hljs-string">"../plugins/custom-webpack"</span>);<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {<br>  <span class="hljs-attr">plugins</span>: [customWebpack],<br>};<br></code></pre></td></tr></tbody></table></figure><p>通过 webpack 插件可以将大部分静态资源的路径添加<code>cdn</code>前缀，但是有几个 css、js 文件不受控制。</p><h3 id="添加配置srrTemplate"><a href="#添加配置srrTemplate" class="headerlink" title="添加配置srrTemplate"></a>添加配置<code>srrTemplate</code></h3><p>上面提到的“有几个 css、js 文件不受控制”，可以通过<code>srrTemplate</code>配置解决。</p><blockquote><p>搞了好久，还简单看了源码的流程，才发现配置本身就提供<code>ssrTemplate</code>。<a href="https://github.com/facebook/docusaurus/discussions/4123%E3%80%82%E6%9C%89%E4%B8%AAdiscussion%E8%AE%A8%E8%AE%BA%E4%BA%86%E5%A5%BD%E4%B9%85%EF%BC%8C%E5%AE%9E%E9%99%85%E4%B8%8A%E5%B0%B1%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%E8%BF%99%E4%B8%AA%E6%9D%A5%E5%AE%9E%E7%8E%B0%E3%80%82">https://github.com/facebook/docusaurus/discussions/4123。有个discussion讨论了好久，实际上就可以通过这个来实现。</a></p></blockquote><p>template.js</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> publicPath = process.<span class="hljs-property">env</span>.<span class="hljs-property">PUBLIC_PATH</span> || <span class="hljs-string">"/"</span>;<br><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = <span class="hljs-string">`</span><br><span class="hljs-string">&lt;!DOCTYPE html&gt;</span><br><span class="hljs-string">&lt;html &lt;%~ it.htmlAttributes %&gt;&gt;</span><br><span class="hljs-string">  &lt;head&gt;</span><br><span class="hljs-string">    &lt;meta charset="UTF-8"&gt;</span><br><span class="hljs-string">    &lt;meta name="generator" content="Docusaurus v&lt;%= it.version %&gt;"&gt;</span><br><span class="hljs-string">    &lt;% it.metaAttributes.forEach((metaAttribute) =&gt; { %&gt;</span><br><span class="hljs-string">      &lt;%~ metaAttribute %&gt;</span><br><span class="hljs-string">    &lt;% }); %&gt;</span><br><span class="hljs-string">    &lt;%~ it.headTags %&gt;</span><br><span class="hljs-string">    &lt;% it.stylesheets.forEach((stylesheet) =&gt; { %&gt;</span><br><span class="hljs-string">      &lt;link rel="stylesheet" href="<span class="hljs-subst">${publicPath}</span>&lt;%= stylesheet %&gt;" /&gt;</span><br><span class="hljs-string">    &lt;% }); %&gt;</span><br><span class="hljs-string">    &lt;% it.scripts.forEach((script) =&gt; { %&gt;</span><br><span class="hljs-string">      &lt;script src="<span class="hljs-subst">${publicPath}</span>&lt;%= script %&gt;" defer&gt;&lt;/script&gt;</span><br><span class="hljs-string">    &lt;% }); %&gt;</span><br><span class="hljs-string">  &lt;/head&gt;</span><br><span class="hljs-string">  &lt;body &lt;%~ it.bodyAttributes %&gt;&gt;</span><br><span class="hljs-string">    &lt;%~ it.preBodyTags %&gt;</span><br><span class="hljs-string">    &lt;div id="__docusaurus"&gt;&lt;%~ it.appHtml %&gt;&lt;/div&gt;</span><br><span class="hljs-string">    &lt;%~ it.postBodyTags %&gt;</span><br><span class="hljs-string">  &lt;/body&gt;</span><br><span class="hljs-string">&lt;/html&gt;</span><br><span class="hljs-string">`</span>;<br></code></pre></td></tr></tbody></table></figure><p>docusaurus.config.js</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> ssrTemplate = <span class="hljs-built_in">require</span>(<span class="hljs-string">"./template"</span>);<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {<br>  ssrTemplate,<br>};<br></code></pre></td></tr></tbody></table></figure><h2 id="分版"><a href="#分版" class="headerlink" title="分版"></a>分版</h2><h3 id="生成版本相关文件、文件夹"><a href="#生成版本相关文件、文件夹" class="headerlink" title="生成版本相关文件、文件夹"></a>生成版本相关文件、文件夹</h3><p><code>yarn docusaurus docs:version 2.0</code><br><img src="https://www.clzczh.top/CLZ_img/images/20250322104257.png"></p><p>会基于当前版本<code>docs</code>生成对应版本，多语言也会生成。不过没有相关的 json 文件，需要重新执行一次<code>yarn write-translations --locale en</code></p><h3 id="添加配置"><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h3><p>docusaurus</p><figure class="highlight ts"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {<br>  <span class="hljs-attr">themeConfig</span>: {<br>    <span class="hljs-comment">// ...</span><br>    <span class="hljs-attr">navbar</span>: {<br>      <span class="hljs-comment">// ...</span><br>      <span class="hljs-attr">items</span>: [<br>        {<br>          <span class="hljs-attr">type</span>: <span class="hljs-string">"docsVersionDropdown"</span>,<br>          <span class="hljs-attr">position</span>: <span class="hljs-string">"right"</span>,<br>        },<br>      ],<br>    },<br>  },<br>  <span class="hljs-attr">presets</span>: [<br>    [<br>      <span class="hljs-string">"classic"</span>,<br>      {<br>        <span class="hljs-attr">docs</span>: {<br>          <span class="hljs-comment">// ...</span><br>          <span class="hljs-attr">lastVersion</span>: <span class="hljs-string">"current"</span>,<br>          <span class="hljs-attr">versions</span>: {<br>            <span class="hljs-attr">current</span>: {<br>              <span class="hljs-attr">label</span>: <span class="hljs-string">"latest"</span>,<br>              <span class="hljs-attr">path</span>: <span class="hljs-string">""</span>,<br>            },<br>          },<br>        },<br>      },<br>    ],<br>  ],<br>};<br></code></pre></td></tr></tbody></table></figure><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="https://www.clzczh.top/CLZ_img/images/20250322110123.png"></p><p><img src="https://www.clzczh.top/CLZ_img/images/20250322110151.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;工作中的那点事之-Docusaurus&quot;&gt;&lt;a href=&quot;#工作中的那点事之-Docusaurus&quot; class=&quot;headerlink&quot; title=&quot;工作中的那点事之 Docusaurus&quot;&gt;&lt;/a&gt;工作中的那点事之 Docusaurus&lt;/h1&gt;&lt;h2 i</summary>
      
    
    
    
    <category term="前端" scheme="https://www.clzczh.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="工作中的那点事" scheme="https://www.clzczh.top/tags/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B/"/>
    
    <category term="docusaurus" scheme="https://www.clzczh.top/tags/docusaurus/"/>
    
  </entry>
  
  <entry>
    <title>工作中的那点事之 TypeScript</title>
    <link href="https://www.clzczh.top/2025/03/12/work-ts/"/>
    <id>https://www.clzczh.top/2025/03/12/work-ts/</id>
    <published>2025-03-12T22:00:05.000Z</published>
    <updated>2025-04-16T03:00:50.160Z</updated>
    
    <content type="html"><![CDATA[<h1 id="工作中的那点事之-TypeScript"><a href="#工作中的那点事之-TypeScript" class="headerlink" title="工作中的那点事之 TypeScript"></a>工作中的那点事之 TypeScript</h1><h2 id="as-const处理-ts-类型误差"><a href="#as-const处理-ts-类型误差" class="headerlink" title="as const处理 ts 类型误差"></a><code>as const</code>处理 ts 类型误差</h2><p>ts 的联合类型使用就经常容易出现类型误差。</p><figure class="highlight ts"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">export</span> <span class="hljs-keyword">type</span> <span class="hljs-title class_">Config</span> = {<br>  <span class="hljs-attr">type</span>: <span class="hljs-string">"c"</span> | <span class="hljs-string">"l"</span> | <span class="hljs-string">"z"</span>;<br>  <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;<br>}[];<br><br><span class="hljs-keyword">const</span> <span class="hljs-attr">config</span>: <span class="hljs-title class_">Config</span> = [<br>  {<br>    <span class="hljs-attr">type</span>: <span class="hljs-string">"c"</span>,<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">"赤蓝紫"</span>,<br>  },<br>];<br></code></pre></td></tr></tbody></table></figure><p>上面的代码是没有 ts 类型错误的，但是有时候会需要根据一些参数来处理数组元素的内容，比如：</p><figure class="highlight ts"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">export</span> <span class="hljs-keyword">type</span> <span class="hljs-title class_">Config</span> = {<br>  <span class="hljs-attr">type</span>: <span class="hljs-string">"c"</span> | <span class="hljs-string">"l"</span> | <span class="hljs-string">"z"</span>;<br>  <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;<br>}[];<br><br><span class="hljs-keyword">const</span> flag = <span class="hljs-literal">true</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-attr">config</span>: <span class="hljs-title class_">Config</span> = [<br>  ...(flag<br>    ? [<br>        {<br>          <span class="hljs-attr">type</span>: <span class="hljs-string">"c"</span>,<br>          <span class="hljs-attr">name</span>: <span class="hljs-string">"clz"</span>,<br>        },<br>      ]<br>    : []),<br>  {<br>    <span class="hljs-attr">type</span>: <span class="hljs-string">"c"</span>,<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">"czh"</span>,<br>  },<br>];<br></code></pre></td></tr></tbody></table></figure><p><img src="https://www.clzczh.top/CLZ_img/images/20250312222444.png"></p><p>原因则是使用扩展运算符那里，将<code>{ type: "c", name: "clz"}</code>识别成<code>{ type: string, name: string }</code>了。</p><p>这种情况下，可以使用<code>as const</code>来处理类似误差。<br><img src="https://www.clzczh.top/CLZ_img/images/20250312223943.png"></p><h2 id="获取函数返回值类型"><a href="#获取函数返回值类型" class="headerlink" title="获取函数返回值类型"></a>获取函数返回值类型</h2><figure class="highlight ts"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-title class_">ReturnType</span>&lt;<span class="hljs-keyword">typeof</span> <span class="hljs-built_in">setTimeout</span>&gt;;<br></code></pre></td></tr></tbody></table></figure><p>适用场景：要使用的函数，并没有把返回值类型<code>export</code>出来，并且需要保存返回值（通过<code>useRef</code>保存的时候，就需要得到返回值的类型）</p><p>例子（随便声明一个函数）：</p><figure class="highlight ts"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">enum</span> <span class="hljs-title class_">CustomDate</span> {<br>  <span class="hljs-title class_">Month</span> = <span class="hljs-string">"month"</span>,<br>  <span class="hljs-title class_">Week</span> = <span class="hljs-string">"week"</span>,<br>}<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">getCustomDate</span>(<span class="hljs-params"><span class="hljs-attr">a</span>: <span class="hljs-built_in">number</span>, <span class="hljs-attr">b</span>: <span class="hljs-built_in">number</span></span>): <span class="hljs-title class_">CustomDate</span> {<br>  <span class="hljs-keyword">if</span> (a + b &gt; <span class="hljs-number">10</span>) {<br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">CustomDate</span>.<span class="hljs-property">Month</span>;<br>  }<br><br>  <span class="hljs-keyword">return</span> <span class="hljs-title class_">CustomDate</span>.<span class="hljs-property">Week</span>;<br>}<br></code></pre></td></tr></tbody></table></figure><p><img src="https://www.clzczh.top/CLZ_img/images/20250312225039.png"><br>没有办法定义类型的话，就会像上面一样报错。</p><p>使用<code>ReturnType</code>就可以解决这个问题。</p><figure class="highlight ts"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> customDate = useRef&lt;<span class="hljs-title class_">ReturnType</span>&lt;<span class="hljs-keyword">typeof</span> getCustomDate&gt;&gt;();<br>customDate.<span class="hljs-property">current</span> = <span class="hljs-title function_">getCustomDate</span>(<span class="hljs-number">10</span>, <span class="hljs-number">20</span>);<br></code></pre></td></tr></tbody></table></figure><p><img src="https://www.clzczh.top/CLZ_img/images/20250312225227.png"></p><h2 id="ts-node运行-ts-脚本"><a href="#ts-node运行-ts-脚本" class="headerlink" title="ts-node运行 ts 脚本"></a><code>ts-node</code>运行 ts 脚本</h2><p>脚本需要类型，使用 ts 编写脚本的话，无法直接运行。可以通过安装<code>ts</code>来实现。</p><p>使用方法也非常简单，<code>package.json</code>的<code>scripts</code>添加对应的命令，如<code>execute: ts-node index.ts</code>即可。也可以直接命令行<code>npx ts-node index.ts</code>。</p><p><strong>注意</strong>：<code>ts-node</code>只能在<code>commonJS</code>中执行。不过可以还是可以直接在<code>ts</code>文件中使用<code>import</code>、<code>export</code>。</p><p>这个<a href="https://github.com/TypeStrong/ts-node/issues/2120">issue</a>中有提到。</p><blockquote><p>项目开发中，可以添加<code>-T</code>参数：只转译，不做类型检查。类型检查可以通过<code>vscode</code>，以及提交前检查。</p></blockquote><h2 id="is-类型保护"><a href="#is-类型保护" class="headerlink" title="is 类型保护"></a><code>is</code> 类型保护</h2><p>联合类型可以通过公共属性进行类型保护。</p><p>如：</p><figure class="highlight ts"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">BaseUser</span> {<br>  <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;<br>}<br><br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">FreeUser</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">BaseUser</span> {<br>  <span class="hljs-attr">type</span>: <span class="hljs-string">"free"</span>;<br>  <span class="hljs-attr">sayHello</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">void</span>;<br>}<br><br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">VIPUser</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">BaseUser</span> {<br>  <span class="hljs-attr">type</span>: <span class="hljs-string">"vip"</span>;<br>  <span class="hljs-attr">sayHi</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">void</span>;<br>}<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Props</span> {<br>  <span class="hljs-attr">user</span>: <span class="hljs-title class_">FreeUser</span> | <span class="hljs-title class_">VIPUser</span>;<br>}<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">handler</span> = (<span class="hljs-params"><span class="hljs-attr">props</span>: <span class="hljs-title class_">Props</span></span>) =&gt; {<br>  <span class="hljs-keyword">const</span> { user } = props;<br><br>  <span class="hljs-keyword">if</span> (user.<span class="hljs-property">type</span> === <span class="hljs-string">"free"</span>) {<br>    user.<span class="hljs-title function_">sayHello</span>();<br>  } <span class="hljs-keyword">else</span> {<br>    user.<span class="hljs-title function_">sayHi</span>();<br>  }<br>};<br></code></pre></td></tr></tbody></table></figure><p>没有公共属性可以用于区分的时候，可以使用<code>is</code>类型保护。</p><figure class="highlight ts"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> isVIPUser = (<span class="hljs-attr">user</span>: <span class="hljs-built_in">any</span>): user is <span class="hljs-title class_">VIPUser</span> =&gt; {<br>  <span class="hljs-keyword">return</span> user.<span class="hljs-property">sayHi</span> !== <span class="hljs-literal">undefined</span>;<br>};<br></code></pre></td></tr></tbody></table></figure><blockquote><p>使用具体类型的属性、方法前，调用一下该方法即可。<br>如：</p></blockquote><figure class="highlight ts"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">BaseUser</span> {<br>  <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;<br>}<br><br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">FreeUser</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">BaseUser</span> {<br>  <span class="hljs-attr">sayHello</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">void</span>;<br>}<br><br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">VIPUser</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">BaseUser</span> {<br>  <span class="hljs-attr">sayHi</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">void</span>;<br>}<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Props</span> {<br>  <span class="hljs-attr">user</span>: <span class="hljs-title class_">FreeUser</span> | <span class="hljs-title class_">VIPUser</span>;<br>}<br><br><span class="hljs-keyword">const</span> isVIPUser = (<span class="hljs-attr">user</span>: <span class="hljs-built_in">any</span>): user is <span class="hljs-title class_">VIPUser</span> =&gt; {<br>  <span class="hljs-keyword">return</span> user.<span class="hljs-property">sayHi</span> !== <span class="hljs-literal">undefined</span>;<br>};<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">handler</span> = (<span class="hljs-params"><span class="hljs-attr">props</span>: <span class="hljs-title class_">Props</span></span>) =&gt; {<br>  <span class="hljs-keyword">const</span> { user } = props;<br><br>  <span class="hljs-keyword">if</span> (!<span class="hljs-title function_">isVIPUser</span>(user)) {<br>    user.<span class="hljs-title function_">sayHello</span>();<br>  } <span class="hljs-keyword">else</span> {<br>    user.<span class="hljs-title function_">sayHi</span>();<br>  }<br>};<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;工作中的那点事之-TypeScript&quot;&gt;&lt;a href=&quot;#工作中的那点事之-TypeScript&quot; class=&quot;headerlink&quot; title=&quot;工作中的那点事之 TypeScript&quot;&gt;&lt;/a&gt;工作中的那点事之 TypeScript&lt;/h1&gt;&lt;h2 i</summary>
      
    
    
    
    <category term="前端" scheme="https://www.clzczh.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="TypeScript" scheme="https://www.clzczh.top/tags/TypeScript/"/>
    
    <category term="工作中的那点事" scheme="https://www.clzczh.top/tags/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B/"/>
    
  </entry>
  
  <entry>
    <title>工作中的那点事之 杂项</title>
    <link href="https://www.clzczh.top/2025/03/11/work-git/"/>
    <id>https://www.clzczh.top/2025/03/11/work-git/</id>
    <published>2025-03-11T22:04:05.000Z</published>
    <updated>2025-04-16T03:00:50.160Z</updated>
    
    <content type="html"><![CDATA[<h1 id="工作中的那点事之-Git"><a href="#工作中的那点事之-Git" class="headerlink" title="工作中的那点事之 Git"></a>工作中的那点事之 Git</h1><h2 id="git-reset-–soft"><a href="#git-reset-–soft" class="headerlink" title="git reset –soft"></a>git reset –soft</h2><p>效果和<code>git reset --hard</code>类似，区别是<code>--soft</code>会把所有的 commit 都保留。所以也可以通过<code>--soft</code>来实现将多个 commit 合成一个。</p><h2 id="git-stash-apply"><a href="#git-stash-apply" class="headerlink" title="git stash apply"></a>git stash apply</h2><p><code>git stash</code>可以将未提交的修改保存起来，通过<code>git stash apply</code>或<code>git stash pop</code>将保存的东西释放。</p><blockquote><p><code>git stash apply</code>和<code>git stash pop</code>区别：<code>apply</code>不会删除 stash 记录，并且还可以通过<code>git stash list</code> + <code>git stash apply @x</code>来应用指定的记录</p></blockquote><blockquote><p>在需要短暂切分支修复紧急 bug 的时候，可以使用到。</p></blockquote><p><strong>使用<code>git stash pop</code>风险</strong>：会释放保存的内容，并同时清除当前应用的 stash 记录。但是不小心 pop 了多次的话，没有办法撤销回退。而<code>apply</code>还保留记录，所以还可以撤销回退。</p><h2 id="git-commit-–no-verify"><a href="#git-commit-–no-verify" class="headerlink" title="git commit –no-verify"></a>git commit –no-verify</h2><p>类似于上面的场景：在需要切分支修复紧急 bug 的时候，但是可能并不是短时间可以修复。</p><blockquote><p>这个时候使用<code>git stash</code>的话，有可能会出现很多分支都<code>stash</code>一下，最后找起来比较麻烦。</p></blockquote><p>这个时候可以使用<code>git commit --no-verify</code>忽略限制，强行提交。比如<code>git commit -m "暂存" --no-verify</code>。</p><p>解决问题后，再回到暂存 commit 的分支，使用<code>git reset --soft HEAD~</code>把东西又吐出来。</p><h2 id="git-revert"><a href="#git-revert" class="headerlink" title="git revert"></a>git revert</h2><p>撤销修改。跟<code>git reset --hard</code>的区别是，它的撤销是新增加一个 commit，把修改的内容自动撤销。所以不会需要<code>git push --force</code>，不容易出意外。</p><p><img src="https://www.clzczh.top/CLZ_img/images/202503262236591.png"><br>场景：当前有两个 commit，第一个是添加<code>a.txt</code>文件，第二个是添加<code>b.txt</code>，并且修改<code>a.txt</code>为<code>c.txt</code>。（文件内容为文件名。</p><p>现在想要撤销第二个 commit，只需要使用<code>git revert [第二个commitID]</code>即可。<br><img src="https://www.clzczh.top/CLZ_img/images/202503262239846.png"></p><h2 id="git-rebase-i"><a href="#git-rebase-i" class="headerlink" title="git rebase -i"></a>git rebase -i</h2><p>在团队开发中，经常会使用到<code>git rebase</code>来更新分支。</p><p><code>git rebase -i</code>可以实现一些 commit 交换位置，删除指定 commit 等功能。</p><blockquote><p>比如 <code>git rebase -i HEAD~3</code>对最近三个 commit 进行处理，然后点击 i，对 commit 进行处理（删除、修改位置等）。修改后，点击<code>ESC</code>退出编辑，输入<code>:wq</code>保存修改<br><img src="https://www.clzczh.top/CLZ_img/images/20250311213851.png"></p></blockquote><p>上面的方法并不能修改 commit 信息。需要将要修改的 commit 的<code>pick</code>改为<code>edit</code>,<code>:wq</code>保存退出。通过<code>git commit --amend</code>修改 commit 信息，修改后再执行<code>git rebase --continue</code>，知道修改完成。</p><h2 id="git-diff-显示差异"><a href="#git-diff-显示差异" class="headerlink" title="git diff 显示差异"></a>git diff 显示差异</h2><blockquote><p>git diff HEAD^ –unified=0 – ./c.txt | grep ‘^+[^+]’ &gt; diff.txt<br>上面的代码，可以比较当前提交 (HEAD) 与上一个提交 (HEAD^) 的差异，并将<code>c.txt</code>中新增的内容输出到<code>diff.txt</code>中。每个参数的具体含义有兴趣的话，可以自行了解。需要修改的话，可以借助强大的 AI。</p></blockquote><p>应用场景：获取新增的国际化字段。<br>具体场景：项目迁移的时候，需要把迁移后的项目里面新增的国际化字段提取出来，再根据以前项目的国际化资源，把已有的国际化内容迁移到新项目。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;工作中的那点事之-Git&quot;&gt;&lt;a href=&quot;#工作中的那点事之-Git&quot; class=&quot;headerlink&quot; title=&quot;工作中的那点事之 Git&quot;&gt;&lt;/a&gt;工作中的那点事之 Git&lt;/h1&gt;&lt;h2 id=&quot;git-reset-–soft&quot;&gt;&lt;a href=</summary>
      
    
    
    
    <category term="前端" scheme="https://www.clzczh.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="git" scheme="https://www.clzczh.top/tags/git/"/>
    
    <category term="工作中的那点事" scheme="https://www.clzczh.top/tags/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B/"/>
    
  </entry>
  
  <entry>
    <title>工作中的那点事之 CSS</title>
    <link href="https://www.clzczh.top/2025/03/10/work-css/"/>
    <id>https://www.clzczh.top/2025/03/10/work-css/</id>
    <published>2025-03-10T22:40:05.000Z</published>
    <updated>2025-04-16T03:00:50.160Z</updated>
    
    <content type="html"><![CDATA[<h1 id="工作中的那点事之-CSS"><a href="#工作中的那点事之-CSS" class="headerlink" title="工作中的那点事之 CSS"></a>工作中的那点事之 CSS</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>记录一下工作的 CSS 相关的问题。</p><h2 id="伪元素写多行内容"><a href="#伪元素写多行内容" class="headerlink" title="伪元素写多行内容"></a>伪元素写多行内容</h2><blockquote><p>使用场景：不操作 DOM，通过 css 来简单调整内容。<br>在公司中遇到的场景则是：使用 answer 打造问答平台，只是改配置，并没有做魔改。需要调整文案，并且文案是可以换行的。</p></blockquote><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.container</span> {<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#eee</span>;<br>}<br><br><span class="hljs-selector-class">.container</span><span class="hljs-selector-pseudo">:hover</span><span class="hljs-selector-pseudo">::before</span> {<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">"赤\A蓝\A紫"</span>;<br>  <span class="hljs-attribute">white-space</span>: pre;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>}<br></code></pre></td></tr></tbody></table></figure><p>效果：<img src="https://www.clzczh.top/CLZ_img/images/fake.gif"></p><h2 id="伪元素使用图片资源"><a href="#伪元素使用图片资源" class="headerlink" title="伪元素使用图片资源"></a>伪元素使用图片资源</h2><p>使用场景同上。</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.box</span><span class="hljs-selector-pseudo">::before</span> {<br>  <span class="hljs-attribute">content</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">"./imgs/bell.svg"</span>);<br>}<br></code></pre></td></tr></tbody></table></figure><p>这个方法修改 bootstrap 的图标时，会很方便。只需要将 content: ‘\f8cc’这种改成上面的样子即可。</p><p>支持 base64 编码。获取 svg 的 base64 编码可以参考下面的方式。<br><img src="https://www.clzczh.top/CLZ_img/images/20250318230602.png"></p><p>如果是图片，使用 content: url()的方式引入外部图片，会无法设置宽高，可以改为使用 background。</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.box</span><span class="hljs-selector-pseudo">::before</span> {<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">""</span>;<br>  <span class="hljs-attribute">display</span>: inline-block;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">"https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png"</span>)<br>    center no-repeat;<br>  <span class="hljs-attribute">background-size</span>: cover;<br>}<br></code></pre></td></tr></tbody></table></figure><h2 id="mix-blend-mode实现-icon-渐变色"><a href="#mix-blend-mode实现-icon-渐变色" class="headerlink" title="mix-blend-mode实现 icon 渐变色"></a><code>mix-blend-mode</code>实现 icon 渐变色</h2><p>使用场景：同一个 icon，对应不同的会员体系，icon 的颜色不同，并且是渐变色。</p><blockquote><p>color 并不支持渐变颜色，如果是每种类型都保存一张切图，既占存储，浏览网页的时候还得下载多张不同颜色的图片。</p></blockquote><p>使用<code>mix-blend-mode</code>则可以实现这个问题。</p><blockquote><p>定义：mix-blend-mode CSS 属性描述了元素的内容应该与元素的直系父元素的内容和元素的背景如何混合。</p></blockquote><p>先上代码，跟效果图。</p><p>svg</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">svg</span></span><br><span class="hljs-tag">  <span class="hljs-attr">width</span>=<span class="hljs-string">"16"</span></span><br><span class="hljs-tag">  <span class="hljs-attr">height</span>=<span class="hljs-string">"16"</span></span><br><span class="hljs-tag">  <span class="hljs-attr">viewBox</span>=<span class="hljs-string">"0 0 16 16"</span></span><br><span class="hljs-tag">  <span class="hljs-attr">fill</span>=<span class="hljs-string">"none"</span></span><br><span class="hljs-tag">  <span class="hljs-attr">xmlns</span>=<span class="hljs-string">"http://www.w3.org/2000/svg"</span></span><br><span class="hljs-tag">&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">circle</span> <span class="hljs-attr">cx</span>=<span class="hljs-string">"8"</span> <span class="hljs-attr">cy</span>=<span class="hljs-string">"8"</span> <span class="hljs-attr">r</span>=<span class="hljs-string">"7.25"</span> <span class="hljs-attr">stroke</span>=<span class="hljs-string">"currentColor"</span> <span class="hljs-attr">stroke-width</span>=<span class="hljs-string">"1.5"</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">path</span></span><br><span class="hljs-tag">    <span class="hljs-attr">d</span>=<span class="hljs-string">"M8 15.25C7.7649 15.25 7.48181 15.1442 7.15894 14.8321C6.83246 14.5165 6.50419 14.0235 6.21224 13.3562C5.62932 12.0239 5.25 10.1307 5.25 8C5.25 5.86928 5.62932 3.97615 6.21224 2.64376C6.50419 1.97645 6.83246 1.48352 7.15894 1.16789C7.48181 0.855751 7.7649 0.75 8 0.75C8.2351 0.75 8.51819 0.855751 8.84106 1.16789C9.16754 1.48352 9.49581 1.97645 9.78776 2.64376C10.3707 3.97615 10.75 5.86928 10.75 8C10.75 10.1307 10.3707 12.0239 9.78776 13.3562C9.49581 14.0235 9.16754 14.5165 8.84106 14.8321C8.51819 15.1442 8.2351 15.25 8 15.25Z"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">stroke</span>=<span class="hljs-string">"currentColor"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">stroke-width</span>=<span class="hljs-string">"1.5"</span></span><br><span class="hljs-tag">  /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">line</span></span><br><span class="hljs-tag">    <span class="hljs-attr">x1</span>=<span class="hljs-string">"1"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">y1</span>=<span class="hljs-string">"5.75"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">x2</span>=<span class="hljs-string">"15"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">y2</span>=<span class="hljs-string">"5.75"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">stroke</span>=<span class="hljs-string">"currentColor"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">stroke-width</span>=<span class="hljs-string">"1.5"</span></span><br><span class="hljs-tag">  /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">line</span></span><br><span class="hljs-tag">    <span class="hljs-attr">x1</span>=<span class="hljs-string">"1"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">y1</span>=<span class="hljs-string">"10.25"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">x2</span>=<span class="hljs-string">"15"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">y2</span>=<span class="hljs-string">"10.25"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">stroke</span>=<span class="hljs-string">"currentColor"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">stroke-width</span>=<span class="hljs-string">"1.5"</span></span><br><span class="hljs-tag">  /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">  <span class="hljs-selector-class">.container</span> {</span><br><span class="language-css">    <span class="hljs-attribute">display</span>: flex;</span><br><span class="language-css">    <span class="hljs-attribute">width</span>: max-content;</span><br><span class="language-css">    <span class="hljs-attribute">background</span>: <span class="hljs-built_in">linear-gradient</span>(</span><br><span class="language-css">      to right,</span><br><span class="language-css">      <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>) <span class="hljs-number">0%</span>,</span><br><span class="language-css">      <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0</span>) <span class="hljs-number">100%</span></span><br><span class="language-css">    );</span><br><span class="language-css">  }</span><br><span class="language-css"></span><br><span class="language-css">  <span class="hljs-selector-class">.icon-box</span> {</span><br><span class="language-css">    <span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;</span><br><span class="language-css">    <span class="hljs-attribute">color</span>: <span class="hljs-number">#000</span>;</span><br><span class="language-css">    <span class="hljs-attribute">mix-blend-mode</span>: lighten;</span><br><span class="language-css">  }</span><br><span class="language-css"></span><br><span class="language-css">  <span class="hljs-selector-class">.icon-box</span> <span class="hljs-selector-tag">svg</span> {</span><br><span class="language-css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">64px</span>;</span><br><span class="language-css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">64px</span>;</span><br><span class="language-css">  }</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"container"</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"icon-box"</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">svg</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></tbody></table></figure><p>效果：<img src="https://www.clzczh.top/CLZ_img/images/20250313233928.png"></p><p><strong>说明</strong>：<br><code>mix-blend-mode: lighten</code>: 混合模式为对每个像素取 RGB 通道最大值。</p><ol><li>渐变色和 icon 混合后，icon 显示渐变色，因为 icon 的颜色为<code>#000</code>，即<code>rgb(0, 0, 0)</code>。所以它和其他颜色混合后，就会变成其他颜色。</li><li>渐变色和 icon 外的地方混合后，还是显示白色，白色是<code>rgb(255, 255, 255)</code>，所以混合后还是白色。</li></ol><p><code>mix-blend-mode: darken</code>: 混合模式为对每个像素取 RGB 通道最小值。<br>同理，暗黑模式的时候，把颜色修改为暗黑模式的颜色，同时把<code>mix-blend-mode: lighten;</code>改为<code>mix-blend-mode: darken;</code>即可</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.icon-box</span> {<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#000</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>  <span class="hljs-attribute">mix-blend-mode</span>: darken;<br>}<br></code></pre></td></tr></tbody></table></figure><p><img src="https://www.clzczh.top/CLZ_img/images/20250313234815.png"></p><p><strong>注意点</strong>：<br>icon 混合后的颜色可以是设置的渐变色的前提是 icon 的颜色是黑/白，如果是其他颜色，则不一定能得到想要的效果。</p><h2 id="给透明图片的文字添加阴影"><a href="#给透明图片的文字添加阴影" class="headerlink" title="给透明图片的文字添加阴影"></a>给透明图片的文字添加阴影</h2><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">backdrop-filter</span>: <span class="hljs-built_in">drop-shadow</span>(<span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">15px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>));<br></code></pre></td></tr></tbody></table></figure><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/filter-function/drop-shadow">drop-shadow</a></p><p><strong>注意点</strong>：<br>理论上，<code>drop-shadow</code>的阴影跟<code>box-shadow</code>阴影的值是一样的。但是实际上，大部分浏览器不支持<code>drop-shadow</code>的扩散半径这个参数（Chrome 最新版本 134 都不支持）</p><p>所以相当于跟<code>box-shadow</code>的值有所差异</p><h2 id="clip-path绘制特殊图形"><a href="#clip-path绘制特殊图形" class="headerlink" title="clip-path绘制特殊图形"></a><code>clip-path</code>绘制特殊图形</h2><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">  <span class="hljs-selector-class">.arrow</span> {</span><br><span class="language-css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;</span><br><span class="language-css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br><span class="language-css">    <span class="hljs-attribute">clip-path</span>: <span class="hljs-built_in">polygon</span>(<span class="hljs-number">0</span> <span class="hljs-number">0</span>, <span class="hljs-number">75%</span> <span class="hljs-number">0</span>, <span class="hljs-number">100%</span> <span class="hljs-number">50%</span>, <span class="hljs-number">75%</span> <span class="hljs-number">100%</span>, <span class="hljs-number">0</span> <span class="hljs-number">100%</span>, <span class="hljs-number">25%</span> <span class="hljs-number">50%</span>);</span><br><span class="language-css">    <span class="hljs-attribute">background</span>: pink;</span><br><span class="language-css">  }</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"arrow"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></tbody></table></figure><p><img src="https://www.clzczh.top/CLZ_img/images/20250317215908.png"></p><blockquote><p><code>clip-path</code>还支持 svg 的<code>path</code>，所以基本上大部分图形都可以使用<code>clip-path</code>绘制。</p></blockquote><h2 id="利用background的层级概念给背景添加遮罩"><a href="#利用background的层级概念给背景添加遮罩" class="headerlink" title="利用background的层级概念给背景添加遮罩"></a>利用<code>background</code>的层级概念给背景添加遮罩</h2><blockquote><p>需要给背景添加遮罩，通过绝对定位添加遮罩层，还需要解决阻挡事件的问题，可以利用<code>background</code>的层级概念给背景添加遮罩。</p></blockquote><p><code>background</code>支持设置多个背景，第一个背景在最上面，最后一个背景在最下面。</p><p>所以说，理论上来说，设置<code>background-image: rgba(0, 0, 0, 0.5), url("./21.png")</code>即可。<br>但是实际上会报错：<br><img src="https://www.clzczh.top/CLZ_img/images/20250317221806.png"></p><p>这是因为<code>background-image</code>不支持纯色背景，所以需要将纯色改为起止渐变一样的渐变色，<br>即<code>background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("./21.png");</code></p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.box</span> {<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">400px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;<br>  <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">linear-gradient</span>(<span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.5</span>), <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.5</span>)),<br>    <span class="hljs-built_in">url</span>(<span class="hljs-string">"./21.png"</span>);<br>  <span class="hljs-attribute">background-repeat</span>: no-repeat;<br>  <span class="hljs-attribute">background-size</span>: cover;<br>}<br></code></pre></td></tr></tbody></table></figure><p>效果：<br><img src="https://www.clzczh.top/CLZ_img/images/20250317222619.png"></p><h2 id="栅格系统轻量化工具"><a href="#栅格系统轻量化工具" class="headerlink" title="栅格系统轻量化工具"></a>栅格系统轻量化工具</h2><h3 id="flexboxgrid"><a href="#flexboxgrid" class="headerlink" title="flexboxgrid"></a>flexboxgrid</h3><p><a href="https://github.com/kristoferjoseph/flexboxgrid">flexboxgrid</a></p><table><thead><tr><th align="left">flexboxgrid</th><th align="left">antd grid</th></tr></thead><tbody><tr><td align="left">12 栅格</td><td align="left">24 栅格</td></tr><tr><td align="left">添加指定类名用法，<code>row</code>、<code>col-xs-12</code>，<code>col-lg-4</code></td><td align="left">组件用法，Row、Col 组件</td></tr><tr><td align="left">不需要响应式时，没有专门的用法，而是通过<code>col-xs-*</code>来使用。（媒体查询设置的 min-width）</td><td align="left">不需要响应时，可以直接使用 span={8}的方式来使用</td></tr></tbody></table><p>flexboxgrid 有大部分 antd grid 的效果。</p><p>flexboxgrid 实现原理跟 antd grid 类似，都是通过 flex-basis 和 max-width 来实现</p><h3 id="react-flexbox-grid"><a href="#react-flexbox-grid" class="headerlink" title="react-flexbox-grid"></a>react-flexbox-grid</h3><p><a href="https://github.com/roylee0704/react-flexbox-grid">react-flexbox-grid</a></p><p>flexboxgrid 的 react 组件版本<br><img src="https://www.clzczh.top/CLZ_img/images/20250317223008.png"></p><h2 id="scroll-snap-滚动吸附"><a href="#scroll-snap-滚动吸附" class="headerlink" title="scroll-snap-*滚动吸附"></a><code>scroll-snap-*</code>滚动吸附</h2><blockquote><p><code>scroll-snap-type</code>: x mandatoy。开启滚动吸附，x 轴如果没有在滚动，则自动吸附到吸附位置。<br><code>scroll-snap-align</code>: center。设置吸附位置<br><code>scroll-snap-stop</code>：定义了滚动容器是否可“越过”吸附位置</p></blockquote><p>简单例子：</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">  <span class="hljs-selector-class">.container</span> {</span><br><span class="language-css">    <span class="hljs-attribute">display</span>: flex;</span><br><span class="language-css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">400px</span>;</span><br><span class="language-css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">200px</span>;</span><br><span class="language-css">    <span class="hljs-attribute">overflow-x</span>: auto;</span><br><span class="language-css">    <span class="hljs-attribute">scroll-snap-type</span>: x mandatory;</span><br><span class="language-css">  }</span><br><span class="language-css"></span><br><span class="language-css">  <span class="hljs-selector-class">.box</span> {</span><br><span class="language-css">    <span class="hljs-attribute">flex-shrink</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">400px</span>;</span><br><span class="language-css">    <span class="hljs-attribute">scroll-snap-align</span>: center;</span><br><span class="language-css">  }</span><br><span class="language-css"></span><br><span class="language-css">  <span class="hljs-selector-class">.box</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>n + <span class="hljs-number">1</span>) {</span><br><span class="language-css">    <span class="hljs-attribute">background</span>: pink;</span><br><span class="language-css">  }</span><br><span class="language-css"></span><br><span class="language-css">  <span class="hljs-selector-class">.box</span><span class="hljs-selector-pseudo">:nth-child</span>(<span class="hljs-number">2</span>n) {</span><br><span class="language-css">    <span class="hljs-attribute">background</span>: purple;</span><br><span class="language-css">  }</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"container"</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"box"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"box"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"box"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></tbody></table></figure><p>效果：<br><img src="https://www.clzczh.top/CLZ_img/images/scroll.gif"></p><h3 id="简单说明"><a href="#简单说明" class="headerlink" title="简单说明"></a>简单说明</h3><h4 id="scroll-snap-align"><a href="#scroll-snap-align" class="headerlink" title="scroll-snap-align"></a><code>scroll-snap-align</code></h4><p>如果像上面一样，滚动容器的子元素都占满滚动容器，那么<code>scroll-snap-align</code>的值不管是什么都是一样的效果。</p><p><img src="https://www.clzczh.top/CLZ_img/images/20250318223532.png"><br>但是如果像上图一样的话，值不一样，效果差别特别大。</p><p>值为<code>start</code>：第二屏以及出现了，所以会吸附到<strong>第二屏在最左边的位置</strong>。<br><img src="https://www.clzczh.top/CLZ_img/images/20250318223737.png"></p><p>值为<code>center</code>、<code>end</code>的时候，同理，分别是吸附到<strong>第二屏在中间</strong>、**第二屏在最右边的位置。</p><h4 id="scroll-snap-stop"><a href="#scroll-snap-stop" class="headerlink" title="scroll-snap-stop"></a><code>scroll-snap-stop</code></h4><p>官网的例子可以比较好的说明：<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/scroll-snap-stop">scroll-snap-stop</a></p><blockquote><p>使用移动端体验会更明显。</p></blockquote><p>设置<code>scroll-snap-stop: normal</code>时，快速滑动，会有一个类似惯性一样，自动滚到停为止。<br>而设置<code>scroll-snap-stop: always</code>时，快速滑动也会卡在吸附位置。</p><h2 id="media-hover"><a href="#media-hover" class="headerlink" title="@media (hover)"></a>@media (hover)</h2><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-keyword">@media</span> (<span class="hljs-attribute">hover</span>) {<br>  <span class="hljs-selector-class">.box</span><span class="hljs-selector-pseudo">:hover</span> {<br>    // 只有能悬浮的设备会有样式。(手机不可以)<br>  }<br>}<br><br><span class="hljs-keyword">@media</span> (<span class="hljs-attribute">hover</span>: none), (<span class="hljs-attribute">pointer</span>: coarse) {<br>  <span class="hljs-comment">/* 当满足下面任意一条条件时，应用样式 */</span><br>  <span class="hljs-comment">/* 1. 设备不支持鼠标悬浮事件 */</span><br>  <span class="hljs-comment">/* 2. 设备的指针类型是粗糙的，如触摸屏设备、触控笔 */</span><br>  <span class="hljs-selector-class">.slider</span><span class="hljs-selector-pseudo">:hover</span> {<br>    <span class="hljs-selector-class">.tooltip</span> {<br>      <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;<br>    }<br>  }<br>}<br></code></pre></td></tr></tbody></table></figure><h2 id="两个溢出省略（有先后顺序）"><a href="#两个溢出省略（有先后顺序）" class="headerlink" title="两个溢出省略（有先后顺序）"></a>两个溢出省略（有先后顺序）</h2><p>先溢出省略，达到限制后另一个溢出省略</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">  <span class="hljs-selector-class">.container</span> {</span><br><span class="language-css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="language-css">    <span class="hljs-attribute">display</span>: flex;</span><br><span class="language-css">    <span class="hljs-attribute">overflow</span>: hidden;</span><br><span class="language-css">  }</span><br><span class="language-css">  <span class="hljs-selector-class">.child</span> {</span><br><span class="language-css">    <span class="hljs-attribute">white-space</span>: nowrap;</span><br><span class="language-css">    <span class="hljs-attribute">overflow</span>: hidden;</span><br><span class="language-css">    <span class="hljs-attribute">text-overflow</span>: ellipsis;</span><br><span class="language-css">  }</span><br><span class="language-css">  <span class="hljs-selector-class">.B</span> {</span><br><span class="language-css">    <span class="hljs-comment">/* 设置flex: 1；</span></span><br><span class="hljs-comment"><span class="language-css">      相当于设置了flex-grow: 1;会平分剩余空间，设置了flex-basic: 0;子项会被认为是没有基础大小</span></span><br><span class="hljs-comment"><span class="language-css">      这样container盒子变小时，B元素会慢慢变小，直到宽变为0</span></span><br><span class="hljs-comment"><span class="language-css">      搭配min-width，就会把宽变为0的限制变成min-width。这样子在变成min-width之前都会是让B元素变小 */</span></span><br><span class="language-css">    <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;</span><br><span class="language-css">    <span class="hljs-attribute">min-width</span>: <span class="hljs-number">60px</span>;</span><br><span class="language-css">  }</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"container"</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"child A"</span>&gt;</span>Long text for child A<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"child B"</span>&gt;</span>Long text for child B<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;工作中的那点事之-CSS&quot;&gt;&lt;a href=&quot;#工作中的那点事之-CSS&quot; class=&quot;headerlink&quot; title=&quot;工作中的那点事之 CSS&quot;&gt;&lt;/a&gt;工作中的那点事之 CSS&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;</summary>
      
    
    
    
    <category term="前端" scheme="https://www.clzczh.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="CSS" scheme="https://www.clzczh.top/tags/CSS/"/>
    
    <category term="工作中的那点事" scheme="https://www.clzczh.top/tags/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B/"/>
    
  </entry>
  
  <entry>
    <title>工作中的那点事之 调试</title>
    <link href="https://www.clzczh.top/2025/03/10/work-debug/"/>
    <id>https://www.clzczh.top/2025/03/10/work-debug/</id>
    <published>2025-03-10T22:40:05.000Z</published>
    <updated>2025-04-16T03:00:50.160Z</updated>
    
    <content type="html"><![CDATA[<h1 id="工作中的那点事之-调试"><a href="#工作中的那点事之-调试" class="headerlink" title="工作中的那点事之 调试"></a>工作中的那点事之 调试</h1><h2 id="调试onMouseEnter后出现的元素"><a href="#调试onMouseEnter后出现的元素" class="headerlink" title="调试onMouseEnter后出现的元素"></a>调试<code>onMouseEnter</code>后出现的元素</h2><p>众所周知，调试 DOM 元素时，可以使用 Elements 面板，hover 等状态则是可以通过 Styles 小面板，来修改。</p><p>但是，鼠标悬浮（<code>onMouseEnter</code>）后出现，鼠标移开就直接从 dom 树中移除的元素则无法直接通过 Element 面板调试，鼠标移到 Elements 面板时，元素已经消失了。</p><p>代码示例：</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">function</span> <span class="hljs-title function_">App</span>(<span class="hljs-params"></span>) {<br>  <span class="hljs-keyword">const</span> [textVisible, setTextVisible] = <span class="hljs-title function_">useState</span>(<span class="hljs-literal">false</span>);<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span></span></span><br><span class="hljs-tag"><span class="language-xml">        <span class="hljs-attr">onMouseEnter</span>=<span class="hljs-string">{()</span> =&gt;</span> {</span><br><span class="language-xml">          setTextVisible(true);</span><br><span class="language-xml">        }}</span><br><span class="language-xml">        onMouseLeave={() =&gt; {</span><br><span class="language-xml">          setTextVisible(false);</span><br><span class="language-xml">        }}</span><br><span class="language-xml">      &gt;</span><br><span class="language-xml">        click</span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">      {textVisible ? <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">{{</span> <span class="hljs-attr">color:</span> "<span class="hljs-attr">red</span>" }}&gt;</span>clz<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> : null}</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/&gt;</span></span><br>  );<br>}<br></code></pre></td></tr></tbody></table></figure><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li>先到 Sources 面板，勾选上停用断点<br><img src="https://www.clzczh.top/CLZ_img/images/20250310220623.png"></li><li>鼠标悬浮到目标元素，然后点击<code>F8</code>键。</li></ol><p>按上面的操作就可以让页面停留到点击<code>F8</code>键时的状态。<br><img src="https://www.clzczh.top/CLZ_img/images/20250310221252.png"></p><h2 id="Chrome-小技巧"><a href="#Chrome-小技巧" class="headerlink" title="Chrome 小技巧"></a>Chrome 小技巧</h2><h3 id="Console-面板打印"><a href="#Console-面板打印" class="headerlink" title="Console 面板打印"></a>Console 面板打印</h3><p><code>$0</code>: 打印当前选中的元素</p><p><code>$_</code>：打印上一个打印的值。</p><p>这两个值笔者经常使用，可以直接在 Console 面板中操作 dom，查看信息。以及一些正则测试等操作。</p><h3 id="为弹出式窗口自动打开-Devtools"><a href="#为弹出式窗口自动打开-Devtools" class="headerlink" title="为弹出式窗口自动打开 Devtools"></a>为弹出式窗口自动打开 Devtools</h3><p>调试代码时，有一些场景是点击后新窗口打开，此时想要看请求是不可行的，到新窗口后，打开 Devtools，空空如也。</p><p>可以通过偏好设置，设置一下<strong>为弹出式窗口自动打开 Devtools</strong>。这样即使新窗口打开也能看到所有的请求。</p><blockquote><p>这个小技巧是公司的后端教笔者的，公司的老前端（8 年）甚至都不知道。</p></blockquote><p><img src="https://www.clzczh.top/CLZ_img/images/20250310222237.png"></p><p><img src="https://www.clzczh.top/CLZ_img/images/20250310222317.png"></p><h3 id="显示用户代理-Shadow-DOM"><a href="#显示用户代理-Shadow-DOM" class="headerlink" title="显示用户代理 Shadow DOM"></a>显示用户代理 Shadow DOM</h3><p><img src="https://www.clzczh.top/CLZ_img/images/20250310222810.png"></p><p><code>input:range</code>元素：默认情况下，在 Elements 面板中只能看到<code>input:range</code>元素，但是实际上它是由容器、滚动块组合而成的，只不过是内置的。</p><p>跟上面的类似，可以设置一下偏好设置的<strong>显示用户代理 Shadow DOM</strong>。这样就可以在 Elements 面板中，选中更加具体的元素。</p><p><img src="https://www.clzczh.top/CLZ_img/images/20250310223525.png"></p><p><img src="https://www.clzczh.top/CLZ_img/images/20250310223634.png"></p><p>并且可以通过一些伪元素来修改默认样式：<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/::-webkit-slider-runnable-track">::-webkit-slider-runnable-track</a></p><p><img src="https://www.clzczh.top/CLZ_img/images/20250310223911.png"></p><h3 id="网络状态模拟其他端"><a href="#网络状态模拟其他端" class="headerlink" title="网络状态模拟其他端"></a>网络状态模拟其他端</h3><p><img src="https://www.clzczh.top/CLZ_img/images/202504121828174.png"></p><p>如上图所示，不使用默认配置。可以选内置的选项，或者自定义，然后输入 ua 头，模拟其他端的环境。</p><h3 id="click-to-react-component"><a href="#click-to-react-component" class="headerlink" title="click-to-react-component"></a>click-to-react-component</h3><p>当项目代码非常多的时候，找对应的组件都有可能很困难。即使通过关键字查询，也可能会出现一堆匹配的代码。</p><p>这个时候可以使用<code>click-to-react-component</code>来辅助调试。</p><p>使用方式也非常简单：</p><ol><li>安装：<code>npm install click-to-react-component</code></li><li>入口文件引入</li></ol><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> { createRoot } <span class="hljs-keyword">from</span> <span class="hljs-string">"react-dom/client"</span>;<br><span class="hljs-keyword">import</span> { <span class="hljs-title class_">ClickToComponent</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">"click-to-react-component"</span>;<br><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">"./App"</span>;<br><br><span class="hljs-keyword">const</span> rootEl = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">"#root"</span>);<br><span class="hljs-title function_">createRoot</span>(rootEl!).<span class="hljs-title function_">render</span>(<br>  <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">App</span> /&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">ClickToComponent</span> /&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/&gt;</span></span><br>);<br></code></pre></td></tr></tbody></table></figure><ol start="3"><li><code>alt + 左键</code>点击页面元素，即可打开 vscode，并定位到对应的代码。</li></ol><p><img src="https://www.clzczh.top/CLZ_img/images/20250312212247.png"><br><img src="https://www.clzczh.top/CLZ_img/images/20250312212423.png"></p><blockquote><p>从上面的链接，可以定位到具体文件的行、列。</p></blockquote><p><img src="https://www.clzczh.top/CLZ_img/images/20250312212731.png"><br><code>alt + 右键</code>可以看到所有的父组件，同样可以选中具体的父组件，使用 vscode 打开。</p><p>可以看<a href="https://juejin.cn/post/7374631918111178790">React 项目里，如何快速定位你的组件源码？</a>，会提到实现原理。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;工作中的那点事之-调试&quot;&gt;&lt;a href=&quot;#工作中的那点事之-调试&quot; class=&quot;headerlink&quot; title=&quot;工作中的那点事之 调试&quot;&gt;&lt;/a&gt;工作中的那点事之 调试&lt;/h1&gt;&lt;h2 id=&quot;调试onMouseEnter后出现的元素&quot;&gt;&lt;a href</summary>
      
    
    
    
    <category term="前端" scheme="https://www.clzczh.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="调试" scheme="https://www.clzczh.top/tags/%E8%B0%83%E8%AF%95/"/>
    
    <category term="工作中的那点事" scheme="https://www.clzczh.top/tags/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B/"/>
    
  </entry>
  
  <entry>
    <title>工作中的那点事之 React</title>
    <link href="https://www.clzczh.top/2025/03/10/work-react/"/>
    <id>https://www.clzczh.top/2025/03/10/work-react/</id>
    <published>2025-03-10T22:00:05.000Z</published>
    <updated>2025-04-16T03:00:50.160Z</updated>
    
    <content type="html"><![CDATA[<h1 id="工作中的那点事之-React"><a href="#工作中的那点事之-React" class="headerlink" title="工作中的那点事之 React"></a>工作中的那点事之 React</h1><h2 id="PropsWithChildren"><a href="#PropsWithChildren" class="headerlink" title="PropsWithChildren"></a>PropsWithChildren</h2><blockquote><p>Props 声明带有 children 的 props。</p></blockquote><figure class="highlight ts"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">export</span> <span class="hljs-keyword">type</span> <span class="hljs-title class_">AProps</span> = <span class="hljs-title class_">PropsWithChildren</span>&lt;{<br>  <span class="hljs-attr">onPress</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">void</span>;<br>}&gt;;<br></code></pre></td></tr></tbody></table></figure><blockquote><p>PropsWithChildren 有可能会类型报错（直接用 vite、<a href="mailto:react@18.3.1">react@18.3.1</a>生成的项目没有报错）</p></blockquote><p>如果报错，则需要用一些类型断言。</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title class_">Radio</span> = <span class="hljs-title function_">memo</span>(<span class="hljs-keyword">function</span> <span class="hljs-title function_">Radio</span>(<span class="hljs-params"><span class="hljs-attr">props</span>: <span class="hljs-title class_">RadioProps</span></span>) {<br>  <span class="hljs-comment">// ...</span><br>}) <span class="hljs-title function_">as</span> (<span class="hljs-attr">props</span>: <span class="hljs-title class_">RadioProps</span>) =&gt; <span class="hljs-title class_">ReactElement</span>;<br></code></pre></td></tr></tbody></table></figure><h2 id="ref-传参回调"><a href="#ref-传参回调" class="headerlink" title="ref 传参回调"></a>ref 传参回调</h2><blockquote><p>react 开发中，经常会遇到使用 ref 操作 dom 的场景，其中也不乏很简单的操作，比如让 input 聚焦。这种简单的操作就可以直接回调的方式来实现。</p></blockquote><p>一般做法：</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">function</span> <span class="hljs-title function_">App</span>(<span class="hljs-params"></span>) {<br>  <span class="hljs-keyword">const</span> inputRef = useRef&lt;<span class="hljs-title class_">HTMLInputElement</span>&gt;(<span class="hljs-literal">null</span>);<br><br>  <span class="hljs-title function_">useEffect</span>(<span class="hljs-function">() =&gt;</span> {<br>    <span class="hljs-keyword">if</span> (inputRef.<span class="hljs-property">current</span>) {<br>      inputRef.<span class="hljs-property">current</span>.<span class="hljs-title function_">focus</span>();<br>    }<br>  }, []);<br><br>  <span class="hljs-keyword">return</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">{inputRef}</span> /&gt;</span></span>;<br>}<br></code></pre></td></tr></tbody></table></figure><p>传参回调：</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">function</span> <span class="hljs-title function_">App</span>(<span class="hljs-params"></span>) {<br>  <span class="hljs-keyword">const</span> refCallback = <span class="hljs-title function_">useCallback</span>(<span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">ref</span>: <span class="hljs-title class_">HTMLInputElement</span></span>) =&gt;</span> {<br>    ref.<span class="hljs-title function_">focus</span>();<br>  }, []);<br><br>  <span class="hljs-keyword">return</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">{refCallback}</span> /&gt;</span></span>;<br>}<br></code></pre></td></tr></tbody></table></figure><p>效果一样。</p><h2 id="组件间传递数据"><a href="#组件间传递数据" class="headerlink" title="组件间传递数据"></a>组件间传递数据</h2><blockquote><p>非常基础的常规的 props、回调函数应该没必要啰嗦了。</p></blockquote><h3 id="useImperativeHandle、forwardRef"><a href="#useImperativeHandle、forwardRef" class="headerlink" title="useImperativeHandle、forwardRef"></a><code>useImperativeHandle</code>、<code>forwardRef</code></h3><p>父组件可以通过回调函数的形式获取子组件返回的数据，不过这种形式没有办法在父组件主动获取子组件的数据。<br>可以使用<code>useImperativeHandle</code>暴露子组件的数据，需要搭配<code>forwardRef</code>使用</p><p>父组件</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> { useRef } <span class="hljs-keyword">from</span> <span class="hljs-string">"react"</span>;<br><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Son</span>, <span class="hljs-title class_">SonHandles</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">"./Son"</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">Father</span> = (<span class="hljs-params"></span>) =&gt; {<br>  <span class="hljs-keyword">const</span> ref = useRef&lt;<span class="hljs-title class_">SonHandles</span>&gt;(<span class="hljs-literal">null</span>);<br>  <span class="hljs-keyword">const</span> onClick = (): <span class="hljs-function"><span class="hljs-params">void</span> =&gt;</span> {<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(ref.<span class="hljs-property">current</span>?.<span class="hljs-title function_">getCount</span>());<br>  };<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Son</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">{ref}</span> <span class="hljs-attr">count</span>=<span class="hljs-string">{100}</span> /&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{onClick}</span>&gt;</span>getSonCount<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/&gt;</span></span><br>  );<br>};<br></code></pre></td></tr></tbody></table></figure><p>子组件</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">ForwardedRef</span>, forwardRef, useImperativeHandle, useState } <span class="hljs-keyword">from</span> <span class="hljs-string">"react"</span>;<br><br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">SonProps</span> {<br>  <span class="hljs-attr">count</span>: <span class="hljs-built_in">number</span>;<br>}<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">SonHandles</span> {<br>  <span class="hljs-attr">getCount</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">number</span>;<br>}<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title class_">Son</span> = <span class="hljs-title function_">forwardRef</span>(<br>  <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">props</span>: <span class="hljs-title class_">SonProps</span>, <span class="hljs-attr">ref</span>: <span class="hljs-title class_">ForwardedRef</span>&lt;<span class="hljs-title class_">SonHandles</span>&gt;</span>) =&gt;</span> {<br>    <span class="hljs-keyword">const</span> { <span class="hljs-attr">count</span>: countProp } = props;<br>    <span class="hljs-keyword">const</span> [count, setCount] = <span class="hljs-title function_">useState</span>(countProp);<br><br>    <span class="hljs-title function_">useImperativeHandle</span>(ref, <span class="hljs-function">() =&gt;</span> ({<br>      <span class="hljs-attr">getCount</span>: <span class="hljs-function">() =&gt;</span> count,<br>    }));<br><br>    <span class="hljs-keyword">return</span> (<br>      <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>{count}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{():</span> <span class="hljs-attr">void</span> =&gt;</span> setCount(count - 1)}&gt;-1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{():</span> <span class="hljs-attr">void</span> =&gt;</span> setCount(count + 1)}&gt;+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/&gt;</span></span><br>    );<br>  }<br>);<br></code></pre></td></tr></tbody></table></figure><p><img src="https://www.clzczh.top/CLZ_img/images/202504042207371.gif"></p><h3 id="Context"><a href="#Context" class="headerlink" title="Context"></a><code>Context</code></h3><blockquote><p><code>Context</code>可以实现跨组件传输数据。添加数据用的<code>Context</code>的话，还可以完全不借助第三方的状态库，完全使用<code>React</code>实现。</p></blockquote><p>count-context.tsx</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> { createContext, <span class="hljs-title class_">ReactNode</span>, useContext } <span class="hljs-keyword">from</span> <span class="hljs-string">"react"</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">CountContextModel</span> {<br>  <span class="hljs-attr">count</span>: <span class="hljs-built_in">number</span>;<br>  <span class="hljs-attr">changeCount</span>: <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">count</span>: <span class="hljs-built_in">number</span></span>) =&gt;</span> <span class="hljs-built_in">void</span>;<br>}<br><br><span class="hljs-keyword">const</span> <span class="hljs-title class_">CountContext</span> = createContext&lt;<span class="hljs-title class_">CountContextModel</span>&gt;({<br>  <span class="hljs-keyword">get</span> <span class="hljs-title function_">count</span>(): <span class="hljs-built_in">never</span> {<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">"count is not implemented"</span>);<br>  },<br>  <span class="hljs-keyword">get</span> <span class="hljs-title function_">changeCount</span>(): <span class="hljs-built_in">never</span> {<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">"changeCount is not implemented"</span>);<br>  },<br>});<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">CountProviderProps</span> {<br>  <span class="hljs-attr">children</span>: <span class="hljs-title class_">ReactNode</span>;<br>  <span class="hljs-attr">value</span>: <span class="hljs-title class_">CountContextModel</span>;<br>}<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">CountProvider</span> = (<span class="hljs-params"><span class="hljs-attr">props</span>: <span class="hljs-title class_">CountProviderProps</span></span>) =&gt; {<br>  <span class="hljs-keyword">const</span> { children, value } = props;<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">CountContext.Provider</span> <span class="hljs-attr">value</span>=<span class="hljs-string">{value}</span>&gt;</span>{children}<span class="hljs-tag">&lt;/<span class="hljs-name">CountContext.Provider</span>&gt;</span></span><br>  );<br>};<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">useCount</span> = (<span class="hljs-params"></span>) =&gt; {<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">useContext</span>(<span class="hljs-title class_">CountContext</span>).<span class="hljs-property">count</span>;<br>};<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">useChangeCount</span> = (<span class="hljs-params"></span>) =&gt; {<br>  <span class="hljs-keyword">const</span> { changeCount } = <span class="hljs-title function_">useContext</span>(<span class="hljs-title class_">CountContext</span>);<br><br>  <span class="hljs-keyword">return</span> <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">count</span>: <span class="hljs-built_in">number</span></span>) =&gt;</span> {<br>    <span class="hljs-title function_">changeCount</span>(count);<br>  };<br>};<br></code></pre></td></tr></tbody></table></figure><p>App.tsx</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> { useState } <span class="hljs-keyword">from</span> <span class="hljs-string">"react"</span>;<br><span class="hljs-keyword">import</span> { <span class="hljs-title class_">CountProvider</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">"./context/count-context"</span>;<br><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Comp1</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">"./components/Comp1"</span>;<br><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Comp2</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">"./components/Comp2"</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">App</span>(<span class="hljs-params"></span>) {<br>  <span class="hljs-keyword">const</span> [count, setCount] = <span class="hljs-title function_">useState</span>(<span class="hljs-number">100</span>);<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">CountProvider</span> <span class="hljs-attr">value</span>=<span class="hljs-string">{{</span> <span class="hljs-attr">count</span>, <span class="hljs-attr">changeCount:</span> <span class="hljs-attr">setCount</span> }}&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Comp1</span> /&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Comp2</span> /&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">CountProvider</span>&gt;</span></span><br>  );<br>}<br></code></pre></td></tr></tbody></table></figure><p>Comp1.tsx</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> { useCount } <span class="hljs-keyword">from</span> <span class="hljs-string">"../context/count-context"</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">Comp1</span> = (<span class="hljs-params"></span>) =&gt; {<br>  <span class="hljs-keyword">const</span> count = <span class="hljs-title function_">useCount</span>();<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      comp1</span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>{count}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  );<br>};<br></code></pre></td></tr></tbody></table></figure><p>Comp2.tsx</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> { useChangeCount, useCount } <span class="hljs-keyword">from</span> <span class="hljs-string">"../context/count-context"</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">Comp2</span> = (<span class="hljs-params"></span>) =&gt; {<br>  <span class="hljs-keyword">const</span> count = <span class="hljs-title function_">useCount</span>();<br>  <span class="hljs-keyword">const</span> changeCount = <span class="hljs-title function_">useChangeCount</span>();<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      comp2</span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>{count}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{():</span> <span class="hljs-attr">void</span> =&gt;</span> changeCount(count - 1)}&gt;-1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{():</span> <span class="hljs-attr">void</span> =&gt;</span> changeCount(count + 1)}&gt;+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  );<br>};<br></code></pre></td></tr></tbody></table></figure><p><img src="https://www.clzczh.top/CLZ_img/images/202504042242773.gif"></p><h2 id="Render-Props"><a href="#Render-Props" class="headerlink" title="Render Props"></a>Render Props</h2><p>组件的<code>children</code>属性可以接收一个函数，该函数的参数为组件的内部状态，并返回 React 元素。</p><p>通过这种方式，可以将状态与渲染解耦，状态管理在组件内部，而渲染逻辑交给外面处理。可以在多个地方复用逻辑，即使 UI 差别很大。</p><p>demo:</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> { memo, <span class="hljs-title class_">ReactElement</span>, useState } <span class="hljs-keyword">from</span> <span class="hljs-string">"react"</span>;<br><br><span class="hljs-keyword">interface</span> <span class="hljs-title class_">ComponentProps</span> {<br>  <span class="hljs-attr">children</span>: <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">count</span>: <span class="hljs-built_in">number</span></span>) =&gt;</span> <span class="hljs-title class_">React</span>.<span class="hljs-property">ReactElement</span>;<br>}<br><br><span class="hljs-keyword">const</span> <span class="hljs-title class_">Component</span> = <span class="hljs-title function_">memo</span>(<span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">props</span>: <span class="hljs-title class_">ComponentProps</span></span>) =&gt;</span> {<br>  <span class="hljs-keyword">const</span> { children } = props;<br>  <span class="hljs-keyword">const</span> [count, setCount] = <span class="hljs-title function_">useState</span>(<span class="hljs-number">0</span>);<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      {children(count)}</span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{():</span> <span class="hljs-attr">void</span> =&gt;</span> setCount(count + 1)}&gt;+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  );<br>});<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">Home</span>(<span class="hljs-params"></span>) {<br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Component</span>&gt;</span></span><br><span class="language-xml">        {(count): ReactElement =&gt; {</span><br><span class="language-xml">          return <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>{count}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>;</span><br><span class="language-xml">        }}</span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">Component</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/&gt;</span></span><br>  );<br>}<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;工作中的那点事之-React&quot;&gt;&lt;a href=&quot;#工作中的那点事之-React&quot; class=&quot;headerlink&quot; title=&quot;工作中的那点事之 React&quot;&gt;&lt;/a&gt;工作中的那点事之 React&lt;/h1&gt;&lt;h2 id=&quot;PropsWithChildren</summary>
      
    
    
    
    <category term="前端" scheme="https://www.clzczh.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="工作中的那点事" scheme="https://www.clzczh.top/tags/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%84%E9%82%A3%E7%82%B9%E4%BA%8B/"/>
    
    <category term="React" scheme="https://www.clzczh.top/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>图片优化：js 生成渐进式图片</title>
    <link href="https://www.clzczh.top/2025/03/03/progressive-jpeg/"/>
    <id>https://www.clzczh.top/2025/03/03/progressive-jpeg/</id>
    <published>2025-03-03T22:00:00.000Z</published>
    <updated>2025-04-16T03:00:50.158Z</updated>
    
    <content type="html"><![CDATA[<h1 id="图片优化：js-生成渐进式图片"><a href="#图片优化：js-生成渐进式图片" class="headerlink" title="图片优化：js 生成渐进式图片"></a>图片优化：js 生成渐进式图片</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>渐进式图片：渐进式 jpeg。所以需要注意：如果是透明底的 png 图片，生成渐进式图片的时候，就不是透明底了。</p><p>一般的图片都是自上往下加载的，但是还有另一种渐进式图片（先加载模糊图片，然后逐渐清晰）</p><blockquote><p>以下例子，使用 slow 4g、3g 效果更明显</p></blockquote><p><a href="https://www.clzczh.top/demos/images/21.png">一般的图片</a><br><a href="https://www.clzczh.top/demos/images/21-sharp.jpg">渐进式图片</a></p><blockquote><p>和笔者的博客文章的 banner 图效果差不多，不过笔者的 banner 图是用缩略图、原图，通过<code>load</code>、<code>transitionend</code>时间来实现的。<br>代码：</p></blockquote><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs js">(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) {<br>  <span class="hljs-keyword">const</span> images = [...<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">".card-image"</span>)].<span class="hljs-title function_">map</span>(<br>    <span class="hljs-function">(<span class="hljs-params">ele</span>) =&gt;</span> ele.<span class="hljs-property">children</span>[<span class="hljs-number">0</span>]<br>  );<br><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">callback</span>(<span class="hljs-params">intersectionObserverEntrys</span>) {<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> i <span class="hljs-keyword">of</span> intersectionObserverEntrys) {<br>      <span class="hljs-comment">// isIntersecting属性，当目标元素在视口中为true，否则为false</span><br>      <span class="hljs-keyword">if</span> (i.<span class="hljs-property">isIntersecting</span>) {<br>        <span class="hljs-keyword">const</span> img = i.<span class="hljs-property">target</span>;<br>        <span class="hljs-keyword">const</span> realImg = img.<span class="hljs-property">nextElementSibling</span>;<br><br>        <span class="hljs-keyword">const</span> realUrl = realImg.<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">"data-src"</span>);<br>        realImg.<span class="hljs-title function_">setAttribute</span>(<span class="hljs-string">"src"</span>, realUrl);<br><br>        realImg.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">"load"</span>, <span class="hljs-function">() =&gt;</span> {<br>          realImg.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">"show"</span>);<br>          img.<span class="hljs-property">classList</span>.<span class="hljs-title function_">remove</span>(<span class="hljs-string">"show"</span>);<br><br>          realImg.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">"transitionend"</span>, <span class="hljs-keyword">function</span> <span class="hljs-title function_">animationend</span>(<span class="hljs-params"></span>) {<br>            img.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">"hidden"</span>);<br>            realImg.<span class="hljs-title function_">removeEventListener</span>(<span class="hljs-string">"transitionend"</span>, animationend);<br>          });<br>        });<br><br>        <span class="hljs-comment">// 结束观察</span><br>        observer.<span class="hljs-title function_">unobserve</span>(img);<br>      }<br>    }<br>  }<br><br>  <span class="hljs-keyword">const</span> observer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">IntersectionObserver</span>(callback);<br><br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> i <span class="hljs-keyword">of</span> images) {<br>    observer.<span class="hljs-title function_">observe</span>(i);<br>  }<br>})();<br></code></pre></td></tr></tbody></table></figure><p>详细内容可查看：<a href="https://www.zhangxinxu.com/wordpress/2013/01/progressive-jpeg-image-and-so-on/">渐进式 jpeg(progressive jpeg)图片及其相关</a></p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><h3 id="sharp"><a href="#sharp" class="headerlink" title="sharp"></a>sharp</h3><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> sharp = <span class="hljs-built_in">require</span>(<span class="hljs-string">"sharp"</span>);<br><br><span class="hljs-title function_">sharp</span>(<span class="hljs-string">"./21.png"</span>)<br>  .<span class="hljs-title function_">jpeg</span>({<br>    <span class="hljs-attr">progressive</span>: <span class="hljs-literal">true</span>,<br>  })<br>  .<span class="hljs-title function_">toFile</span>(<span class="hljs-string">"./21-sharp.jpg"</span>, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> {<br>    <span class="hljs-keyword">if</span> (err) {<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err);<br>    }<br>  });<br></code></pre></td></tr></tbody></table></figure><p>效果：<br><a href="https://www.clzczh.top/demos/images/21.png">一般的图片</a><br><a href="https://www.clzczh.top/demos/images/21-sharp.jpg">渐进式图片</a></p><h3 id="其他的一些压缩图片的库"><a href="#其他的一些压缩图片的库" class="headerlink" title="其他的一些压缩图片的库"></a>其他的一些压缩图片的库</h3><ol><li>imagemin: 通过安装各种插件的形式支持优化对应格式的图片，不过只能进行图片优化，而不能转换图片格式。<code>imagemin-mozjpeg</code>提供<code>progressive</code>选项，但是 png 图片并不会被处理成渐进式图片</li><li>gm: 可以支持生成渐进式图片，需要额外安装 ImageMagick，且无维护</li><li>jimp：纯 js 实现，目前并没有纯 Javascript 的渐进式 jpeg 编码：<a href="https://github.com/jpeg-js/jpeg-js/issues/12">https://github.com/jpeg-js/jpeg-js/issues/12</a></li><li>tinyPng：压缩效果会比较好，但是不支持生成渐进式图片</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;图片优化：js-生成渐进式图片&quot;&gt;&lt;a href=&quot;#图片优化：js-生成渐进式图片&quot; class=&quot;headerlink&quot; title=&quot;图片优化：js 生成渐进式图片&quot;&gt;&lt;/a&gt;图片优化：js 生成渐进式图片&lt;/h1&gt;&lt;h2 id=&quot;定义&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    <category term="前端" scheme="https://www.clzczh.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="优化" scheme="https://www.clzczh.top/tags/%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>laxjs使用</title>
    <link href="https://www.clzczh.top/2024/09/22/laxjs/"/>
    <id>https://www.clzczh.top/2024/09/22/laxjs/</id>
    <published>2024-09-22T23:42:00.000Z</published>
    <updated>2025-04-16T03:00:50.157Z</updated>
    
    <content type="html"><![CDATA[<h1 id="laxjs使用"><a href="#laxjs使用" class="headerlink" title="laxjs使用"></a>laxjs使用</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>体验一下各种动画库的使用。</p></blockquote><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>laxjs跟一些常见的动画库(<code>animejs</code>、<code>gsap</code>)的使用方式差异较大。<code>animejs</code>它们主要是获取dom元素，然后设置终点的样式，来进行动画。</p><p>如：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">anime</span>({<br>  <span class="hljs-attr">targets</span>: <span class="hljs-string">'.css-selector-demo .el'</span>,<br>  <span class="hljs-attr">translateX</span>: <span class="hljs-number">250</span><br>});<br></code></pre></td></tr></tbody></table></figure><p>而laxjs则是通过<code>addDriver</code>添加驱动，通过添加的驱动来实现动画。</p><blockquote><p>驱动的值是任意的，不过更常见的是通过滚动驱动（laxjs官方介绍就是<code>create smooth &amp; beautiful animations when you scroll</code>）</p></blockquote><p>简单使用：</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> { useLayoutEffect } <span class="hljs-keyword">from</span> <span class="hljs-string">"react"</span>;<br><span class="hljs-keyword">import</span> lax <span class="hljs-keyword">from</span> <span class="hljs-string">"lax.js"</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">"./App.css"</span>;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">App</span>(<span class="hljs-params"></span>) {<br>  <span class="hljs-title function_">useLayoutEffect</span>(<span class="hljs-function">() =&gt;</span> {<br>    lax.<span class="hljs-title function_">init</span>();<br><br>    lax.<span class="hljs-title function_">addDriver</span>(<span class="hljs-string">'scrollY'</span>, <span class="hljs-function">() =&gt;</span> {<br>      <span class="hljs-keyword">return</span> <span class="hljs-variable language_">window</span>.<span class="hljs-property">scrollY</span>;<br>    })<br><br>    lax.<span class="hljs-title function_">addElements</span>(<span class="hljs-string">".box"</span>, {<br>      <span class="hljs-attr">scrollY</span>: {<br>        <span class="hljs-attr">translateX</span>: [<br>          [<span class="hljs-number">0</span>, <span class="hljs-number">200</span>],<br>          [<span class="hljs-number">0</span>, <span class="hljs-number">400</span>]<br>        ],<br>        <span class="hljs-attr">translateY</span>: [<br>          [<span class="hljs-number">0</span>, <span class="hljs-number">200</span>],<br>          [<span class="hljs-number">0</span>, <span class="hljs-number">400</span>]<br>        ],<br>        <span class="hljs-attr">opacity</span>: [<br>          [<span class="hljs-number">0</span>, <span class="hljs-number">200</span>],<br>          [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>]<br>        ]<br>      }<br>    })<br>  });<br><br>  <span class="hljs-keyword">return</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"box"</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>;<br>}<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">App</span>;<br></code></pre></td></tr></tbody></table></figure><p>效果：<br><img src="https://www.clzczh.top/CLZ_img/images/202409221900956.gif"></p><blockquote><p>lax.addElements第一个参数不支持直接传dom元素，所以在react中没法使用<code>useRef</code>来操作dom元素。</p></blockquote><p>lax使用主要分为三个步骤：</p><ol><li>初始化。<code>lax.init</code></li><li>添加驱动，第一个参数是驱动名称，第二个参数是一个返回数字的函数，该函数每帧都会被调用，值用于动画。<code>lax.addDriver</code></li><li>添加元素，第一个参数是选择器，第二个参数是一个对象，key为驱动名称，value是样式映射的一个对象。</li></ol><p>比如上面的:</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">opacity</span>: [<br>  [<span class="hljs-number">0</span>, <span class="hljs-number">200</span>],<br>  [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>]<br>]<br></code></pre></td></tr></tbody></table></figure><p>就意味着，当<code>window.scrollY</code>为0时，opacity的值为1，<code>window.scrollY</code>为200时，<code>opacity</code>的值为0。opacity跟<code>window.scroolY</code>的关系是线性关系，即当<code>window.scrollY</code>为100时，<code>opacity</code>的值会是<code>0.5</code>。</p><p>当值映射有多个值时，线性关系也会分段。（下面的0-200为一段，200-800为另一段）<br>官方例子：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js">[<span class="hljs-number">0</span>, <span class="hljs-number">200</span>, <span class="hljs-number">800</span>]  <span class="hljs-comment">// Driver value map</span><br>[<span class="hljs-number">0</span>, <span class="hljs-number">10</span>,  <span class="hljs-number">20</span>]   <span class="hljs-comment">// Animation value map</span><br><br><span class="hljs-comment">// Result</span><br><br>| <span class="hljs-title class_">In</span>  | <span class="hljs-title class_">Out</span> |<br>| --- | --- |<br>| <span class="hljs-number">0</span>   | <span class="hljs-number">0</span>   |<br>| <span class="hljs-number">100</span> | <span class="hljs-number">5</span>   |<br>| <span class="hljs-number">200</span> | <span class="hljs-number">10</span>  |<br>| <span class="hljs-number">500</span> | <span class="hljs-number">15</span>  |<br>| <span class="hljs-number">800</span> | <span class="hljs-number">20</span>  |<br></code></pre></td></tr></tbody></table></figure><p>还可以使用lax内置的一些常用值：<br><img src="https://www.clzczh.top/CLZ_img/images/202409221957479.png"></p><h2 id="lax官网动效分析"><a href="#lax官网动效分析" class="headerlink" title="lax官网动效分析"></a>lax官网动效分析</h2><p>看完laxjs的官方文档后，对lax的使用也有了一些了解，再加上lax本身就有一个比较简单的官网动效，而且代码并没有经过压缩混淆，所以可以分析一下官网动效，来稍微加深一下对lax的理解（有一些地方可以做了些许调整）</p><p>共同代码（初始化、驱动程序）：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js">lax.<span class="hljs-title function_">init</span>();<br><br>lax.<span class="hljs-title function_">addDriver</span>(<span class="hljs-string">'scrollY'</span>, <span class="hljs-function">() =&gt;</span> {<br>  <span class="hljs-keyword">return</span> <span class="hljs-variable language_">window</span>.<span class="hljs-property">scrollY</span>;<br>})<br></code></pre></td></tr></tbody></table></figure><h3 id="logo文字"><a href="#logo文字" class="headerlink" title="logo文字"></a>logo文字</h3><p>logo部分的html结构</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"title"</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"letter-area"</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"letter"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"c"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">{CSvg}</span> /&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"letter-area"</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"letter"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"l"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">{LSvg}</span> /&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"letter-area"</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"letter"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"z"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">{ZSvg}</span> /&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></tbody></table></figure><p>js</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs js">lax.<span class="hljs-title function_">addElements</span>(<span class="hljs-string">'#c'</span>, {<br>  <span class="hljs-attr">scrollY</span>: {<br>    <span class="hljs-attr">translateX</span>: [[<span class="hljs-number">0</span>, <span class="hljs-string">"screenHeight"</span>], [<span class="hljs-number">0</span>, <span class="hljs-number">400</span>]],<br>    <span class="hljs-attr">opacity</span>: [[<span class="hljs-number">0</span>, <span class="hljs-string">"screenHeight/2"</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>]]<br>  }<br>})<br>lax.<span class="hljs-title function_">addElements</span>(<span class="hljs-string">'#l'</span>, {<br>  <span class="hljs-attr">scrollY</span>: {<br>    <span class="hljs-attr">translateX</span>: [[<span class="hljs-number">0</span>, <span class="hljs-string">"screenHeight"</span>], [<span class="hljs-number">0</span>, -<span class="hljs-number">400</span>]],<br>    <span class="hljs-attr">opacity</span>: [[<span class="hljs-number">0</span>, <span class="hljs-string">"screenHeight/2"</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>]]<br>  }<br>})<br>lax.<span class="hljs-title function_">addElements</span>(<span class="hljs-string">'#z'</span>, {<br>  <span class="hljs-attr">scrollY</span>: {<br>    <span class="hljs-attr">translateY</span>: [[<span class="hljs-number">0</span>, <span class="hljs-number">100</span>], [ <span class="hljs-number">0</span>, <span class="hljs-number">100</span>]],<br>    <span class="hljs-attr">scale</span>: [[<span class="hljs-number">100</span>, <span class="hljs-string">"screenHeight"</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">10</span>]],<br>    <span class="hljs-attr">opacity</span>: [[<span class="hljs-number">0</span>, <span class="hljs-string">"screenHeight/2"</span>, <span class="hljs-string">"screenHeight"</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>]],<br>  }<br>})<br></code></pre></td></tr></tbody></table></figure><blockquote><p>图片换成在iconfont上切的图片了</p></blockquote><p>C和L的动效比较浅显易懂，开始滚动的时候，透明度逐渐变小，到屏幕一半的时候完全隐藏，与此同时，C向右偏移，L向左偏移。（文字都是<code>fixed</code>定位，所以不会出现往上走的情况）</p><p>Z的动效就有一点点特殊。滚动开始到100像素的时候，Z向下偏移，然后开始逐渐放大。这里的透明度还做了一个分段处理：滚动到一半这个周期，透明度不发生变化，一半之后到首屏消失，透明度逐渐减小为0</p><h3 id="scroll-down文字"><a href="#scroll-down文字" class="headerlink" title="scroll down文字"></a>scroll down文字</h3><p>整体跟logo文字差不多，不过，处理的样式是<code>letter-spacing</code>，跟<code>translate</code>系列不一样，需要额外参数<code>cssUnit: "px"</code>来设置属性</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js">lax.<span class="hljs-title function_">addElements</span>(<span class="hljs-string">".scrolldown"</span>, {<br>  <span class="hljs-attr">scrollY</span>: {<br>    <span class="hljs-string">"letter-spacing"</span>: [<br>      [<span class="hljs-number">0</span>, <span class="hljs-string">"screenHeight"</span>],<br>      [<span class="hljs-number">0</span>, <span class="hljs-number">150</span>],<br>      {<br>        <span class="hljs-attr">cssUnit</span>: <span class="hljs-string">"px"</span><br>      }<br>    ],<br>    <span class="hljs-attr">opacity</span>: [[<span class="hljs-string">"screenHeight*0.25"</span>, <span class="hljs-string">"screenHeight*0.75"</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>]],<br>  }<br>})<br></code></pre></td></tr></tbody></table></figure><h3 id="漂移文字"><a href="#漂移文字" class="headerlink" title="漂移文字"></a>漂移文字</h3><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs js">lax.<span class="hljs-title function_">addElements</span>(<span class="hljs-string">".haha"</span>, {<br>  <span class="hljs-attr">scrollY</span>: {<br>    <span class="hljs-attr">translateX</span>: [[<span class="hljs-string">"elInY"</span>, <span class="hljs-string">"elOutY"</span>], [<span class="hljs-number">0</span>, <span class="hljs-string">"screenWidth-200"</span>]]<br>  }<br>});<br><br>lax.<span class="hljs-title function_">addElements</span>(<span class="hljs-string">".hoho"</span>, {<br>  <span class="hljs-attr">scrollY</span>: {<br>    <span class="hljs-attr">translateX</span>: [[<span class="hljs-string">"elInY"</span>, <span class="hljs-string">"elOutY"</span>], [<span class="hljs-number">0</span>, <span class="hljs-string">"-screenWidth-200"</span>]]<br>  }<br>});<br><br>lax.<span class="hljs-title function_">addElements</span>(<span class="hljs-string">".pass"</span>, {<br>  <span class="hljs-attr">scrollY</span>: {<br>    <span class="hljs-attr">translateX</span>: [[<span class="hljs-string">"elInY"</span>, <span class="hljs-string">"elOutY"</span>], [-<span class="hljs-number">400</span>, <span class="hljs-string">"screenWidth+100"</span>]],<br>    <span class="hljs-attr">skewX</span>: [[<span class="hljs-string">"elInY"</span>, <span class="hljs-string">"elOutY"</span>], [<span class="hljs-number">40</span>, -<span class="hljs-number">40</span>]],<br>  }<br>});<br></code></pre></td></tr></tbody></table></figure><blockquote><p>整体还是跟logo文字一样（万变不离其宗🐕），用到了<code>lax</code>内置的一些特殊值。当<code>haha</code>这个元素出现的时候（<code>window.scrollY === elInY</code>），开始偏移，当它消失的时候（<code>window.scrollY === elOutY</code>）时，偏移达到<code>screenWidth-200</code>。<code>pass</code>元素还额外处理了一下<code>skewX</code>属性，会有一个出现到消失，倾斜从向左逐渐变成向右。</p></blockquote><h3 id="旋转纸片"><a href="#旋转纸片" class="headerlink" title="旋转纸片"></a>旋转纸片</h3><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs js">lax.<span class="hljs-title function_">addElements</span>(<span class="hljs-string">".bubble"</span>, {<br>  <span class="hljs-attr">scrollY</span>: {<br>    <span class="hljs-attr">translateY</span>: [<br>      [<span class="hljs-string">"screenHeight/4"</span>, <span class="hljs-string">"screenHeight * 3"</span>],<br>      [<span class="hljs-string">"Math.random()*screenHeight"</span>, <span class="hljs-string">"Math.random()*screenHeight*3"</span>],<br>    ],<br>    <span class="hljs-attr">opacity</span>: [<br>      [<span class="hljs-string">"screenHeight/4"</span>, <span class="hljs-string">"screenHeight/2"</span>],<br>      [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>],<br>    ],<br>    <span class="hljs-attr">translateX</span>: [[<span class="hljs-number">0</span>], [<span class="hljs-string">"index*(screenWidth/25)-50"</span>]],<br>    <span class="hljs-attr">transform</span>: [<br>      [<span class="hljs-number">0</span>, <span class="hljs-number">4000</span>],<br>      [<span class="hljs-number">0</span>, <span class="hljs-string">"(Math.random() + 0.8) * 1000"</span>],<br>      {<br>        <span class="hljs-attr">cssFn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">val: number</span>) {<br>          <span class="hljs-keyword">return</span> <span class="hljs-string">`rotateX(<span class="hljs-subst">${val % <span class="hljs-number">360</span>}</span>deg)`</span>;<br>        },<br>      },<br>    ],<br>    <span class="hljs-attr">rotate</span>: [<br>      [<span class="hljs-number">0</span>, <span class="hljs-number">4000</span>],<br>      [<span class="hljs-number">0</span>, <span class="hljs-string">"(Math.random() - 0.5) * 1000"</span>],<br>    ],<br>  },<br>});<br></code></pre></td></tr></tbody></table></figure><p>这里的动效因为是针对多个元素的，所以上面会有比较多的<code>Math.random()</code></p><p>属性较多，按属性分析：</p><ol><li><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">translateY</span>: [<br>  [<span class="hljs-string">"screenHeight/4"</span>, <span class="hljs-string">"screenHeight * 3"</span>],<br>  [<span class="hljs-string">"Math.random()*screenHeight"</span>, <span class="hljs-string">"Math.random()*screenHeight*3"</span>],<br>],<br></code></pre></td></tr></tbody></table></figure><blockquote><p>设置初始值为<code>Math.random()*screenHeight</code>，就避免了所有元素一开始都在同一起跑线，而第二个<code>random</code>则是为了在滚动过程中会有变化，才会有”超车”这种情况发生。</p></blockquote></li><li><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">translateX</span>: [[<span class="hljs-number">0</span>], [<span class="hljs-string">"index*(screenWidth/25)-50"</span>]],<br></code></pre></td></tr></tbody></table></figure></li></ol><blockquote><p>水平线上的位置只有一个值，所以不会有变化。可以通过<code>index</code>来设置初始值，比如当<code>screenWidth</code>为1000px时，第一个元素的<code>translateX</code>为<code>-50</code>，第二个元素的<code>translateX</code>为<code>1*(1000/25)-50 = -10</code>，依次类推。(实际上就是<code>screenWidth/25</code>的一个等差数列)</p></blockquote><ol start="3"><li><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"> <span class="hljs-attr">transform</span>: [<br>  [<span class="hljs-number">0</span>, <span class="hljs-number">4000</span>],<br>  [<span class="hljs-number">0</span>, <span class="hljs-string">"(Math.random() + 0.8) * 1000"</span>],<br>  {<br>    <span class="hljs-attr">cssFn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">val: number</span>) {<br>      <span class="hljs-keyword">return</span> <span class="hljs-string">`rotateX(<span class="hljs-subst">${val % <span class="hljs-number">360</span>}</span>deg)`</span>;<br>    },<br>  },<br>],<br><span class="hljs-attr">rotate</span>: [<br>  [<span class="hljs-number">0</span>, <span class="hljs-number">4000</span>],<br>  [<span class="hljs-number">0</span>, <span class="hljs-string">"(Math.random() - 0.5) * 1000"</span>],<br>],<br></code></pre></td></tr></tbody></table></figure></li></ol><p>这两个都是旋转，区别是<code>rotate</code>是二维的，而<code>rotateX</code>是三维的，<code>rotateX</code>可以有种纸片在正对我们旋转的感觉。上面因为<code>transform</code>只需要额外设置<code>rotateX</code>，所以用到了<code>cssFn</code>处理样式，还加了一下取余做一些优化。</p><h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><p><img src="https://www.clzczh.top/CLZ_img/images/202409222340696.gif"></p><h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><p>tsx</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> { useLayoutEffect } <span class="hljs-keyword">from</span> <span class="hljs-string">"react"</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">"./App.css"</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">CSvg</span> <span class="hljs-keyword">from</span> <span class="hljs-string">"./assets/c.svg"</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">LSvg</span> <span class="hljs-keyword">from</span> <span class="hljs-string">"./assets/l.svg"</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">ZSvg</span> <span class="hljs-keyword">from</span> <span class="hljs-string">"./assets/z.svg"</span>;<br><span class="hljs-keyword">import</span> lax <span class="hljs-keyword">from</span> <span class="hljs-string">"lax.js"</span>;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">App</span>(<span class="hljs-params"></span>) {<br>  <span class="hljs-title function_">useLayoutEffect</span>(<span class="hljs-function">() =&gt;</span> {<br>    lax.<span class="hljs-title function_">init</span>();<br><br>    lax.<span class="hljs-title function_">addDriver</span>(<span class="hljs-string">"scrollY"</span>, <span class="hljs-function">() =&gt;</span> {<br>      <span class="hljs-keyword">return</span> <span class="hljs-variable language_">window</span>.<span class="hljs-property">scrollY</span>;<br>    });<br>    lax.<span class="hljs-title function_">addElements</span>(<span class="hljs-string">"#c"</span>, {<br>      <span class="hljs-attr">scrollY</span>: {<br>        <span class="hljs-attr">translateX</span>: [<br>          [<span class="hljs-number">0</span>, <span class="hljs-string">"screenHeight"</span>],<br>          [<span class="hljs-number">0</span>, <span class="hljs-number">400</span>],<br>        ],<br>        <span class="hljs-attr">opacity</span>: [<br>          [<span class="hljs-number">0</span>, <span class="hljs-string">"screenHeight/2"</span>],<br>          [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>],<br>        ],<br>      },<br>    });<br>    lax.<span class="hljs-title function_">addElements</span>(<span class="hljs-string">"#l"</span>, {<br>      <span class="hljs-attr">scrollY</span>: {<br>        <span class="hljs-attr">translateX</span>: [<br>          [<span class="hljs-number">0</span>, <span class="hljs-string">"screenHeight"</span>],<br>          [<span class="hljs-number">0</span>, -<span class="hljs-number">400</span>],<br>        ],<br>        <span class="hljs-attr">opacity</span>: [<br>          [<span class="hljs-number">0</span>, <span class="hljs-string">"screenHeight/2"</span>],<br>          [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>],<br>        ],<br>      },<br>    });<br>    lax.<span class="hljs-title function_">addElements</span>(<span class="hljs-string">"#z"</span>, {<br>      <span class="hljs-attr">scrollY</span>: {<br>        <span class="hljs-attr">translateY</span>: [<br>          [<span class="hljs-number">0</span>, <span class="hljs-number">100</span>],<br>          [<span class="hljs-number">0</span>, <span class="hljs-number">100</span>],<br>        ],<br>        <span class="hljs-attr">scale</span>: [<br>          [<span class="hljs-number">100</span>, <span class="hljs-string">"screenHeight"</span>],<br>          [<span class="hljs-number">1</span>, <span class="hljs-number">10</span>],<br>        ],<br>        <span class="hljs-attr">opacity</span>: [<br>          [<span class="hljs-number">0</span>, <span class="hljs-string">"screenHeight/2"</span>, <span class="hljs-string">"screenHeight"</span>],<br>          [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>],<br>        ],<br>      },<br>    });<br><br>    lax.<span class="hljs-title function_">addElements</span>(<span class="hljs-string">".scrolldown"</span>, {<br>      <span class="hljs-attr">scrollY</span>: {<br>        <span class="hljs-string">"letter-spacing"</span>: [<br>          [<span class="hljs-number">0</span>, <span class="hljs-string">"screenHeight"</span>],<br>          [<span class="hljs-number">0</span>, <span class="hljs-number">150</span>],<br>          {<br>            <span class="hljs-attr">cssUnit</span>: <span class="hljs-string">"px"</span>,<br>          },<br>        ],<br>        <span class="hljs-attr">opacity</span>: [<br>          [<span class="hljs-string">"screenHeight*0.25"</span>, <span class="hljs-string">"screenHeight*0.75"</span>],<br>          [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>],<br>        ],<br>      },<br>    });<br><br>    lax.<span class="hljs-title function_">addElements</span>(<span class="hljs-string">".bubble"</span>, {<br>      <span class="hljs-attr">scrollY</span>: {<br>        <span class="hljs-attr">translateY</span>: [<br>          [<span class="hljs-string">"screenHeight/4"</span>, <span class="hljs-string">"screenHeight * 3"</span>],<br>          [<span class="hljs-string">"screenHeight"</span>, <span class="hljs-string">"Math.random()*screenHeight*3"</span>],<br>        ],<br>        <span class="hljs-attr">opacity</span>: [<br>          [<span class="hljs-string">"screenHeight/4"</span>, <span class="hljs-string">"screenHeight/2"</span>],<br>          [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>],<br>        ],<br>        <span class="hljs-attr">translateX</span>: [[<span class="hljs-number">0</span>], [<span class="hljs-string">"index*(screenWidth/25)-50"</span>]],<br>        <span class="hljs-attr">transform</span>: [<br>          [<span class="hljs-number">0</span>, <span class="hljs-number">4000</span>],<br>          [<span class="hljs-number">0</span>, <span class="hljs-string">"(Math.random() + 1) * 1000"</span>],<br>          {<br>            <span class="hljs-attr">cssFn</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"><span class="hljs-attr">val</span>: <span class="hljs-built_in">number</span></span>) {<br>              <span class="hljs-keyword">return</span> <span class="hljs-string">`rotateX(<span class="hljs-subst">${val % <span class="hljs-number">360</span>}</span>deg)`</span>;<br>            },<br>          },<br>        ],<br>        <span class="hljs-attr">rotate</span>: [<br>          [<span class="hljs-number">0</span>, <span class="hljs-number">4000</span>],<br>          [<span class="hljs-number">0</span>, <span class="hljs-string">"(Math.random() - 0.5) * 1000"</span>],<br>        ],<br>      },<br>    });<br><br>    lax.<span class="hljs-title function_">addElements</span>(<span class="hljs-string">".haha"</span>, {<br>      <span class="hljs-attr">scrollY</span>: {<br>        <span class="hljs-attr">translateX</span>: [<br>          [<span class="hljs-string">"elInY"</span>, <span class="hljs-string">"elOutY"</span>],<br>          [<span class="hljs-number">0</span>, <span class="hljs-string">"screenWidth - 00"</span>],<br>        ],<br>      },<br>    });<br>    lax.<span class="hljs-title function_">addElements</span>(<span class="hljs-string">".hoho"</span>, {<br>      <span class="hljs-attr">scrollY</span>: {<br>        <span class="hljs-attr">translateX</span>: [<br>          [<span class="hljs-string">"elInY"</span>, <span class="hljs-string">"elOutY"</span>],<br>          [<span class="hljs-number">0</span>, <span class="hljs-string">"-screenWidth-200"</span>],<br>        ],<br>      },<br>    });<br>    lax.<span class="hljs-title function_">addElements</span>(<span class="hljs-string">".pass"</span>, {<br>      <span class="hljs-attr">scrollY</span>: {<br>        <span class="hljs-attr">translateX</span>: [<br>          [<span class="hljs-string">"elInY"</span>, <span class="hljs-string">"elOutY"</span>],<br>          [-<span class="hljs-number">400</span>, <span class="hljs-string">"screenWidth+100"</span>],<br>        ],<br>        <span class="hljs-attr">skewX</span>: [<br>          [<span class="hljs-string">"elInY"</span>, <span class="hljs-string">"elOutY"</span>],<br>          [<span class="hljs-number">40</span>, -<span class="hljs-number">40</span>],<br>        ],<br>      },<br>    });<br>  });<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"container"</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"title"</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"letter-area"</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"letter"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"c"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">{CSvg}</span> /&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"letter-area"</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"letter"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"l"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">{LSvg}</span> /&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"letter-area"</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"letter"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"z"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">{ZSvg}</span> /&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"scrolldown"</span>&gt;</span>scroll down<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubbles"</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubble blue"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubble red"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubble yellow"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubble red"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubble blue"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubble yellow"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubble blue"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubble red"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubble yellow"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubble red"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubble blue"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubble blue"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubble red"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubble yellow"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubble red"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubble blue"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubble yellow"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubble blue"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubble red"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubble yellow"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubble red"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubble blue"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubble yellow"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubble blue"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"bubble red"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"haha"</span>&gt;</span>哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"hoho"</span>&gt;</span>吼吼<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"pass"</span>&gt;</span>路过<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>  );<br>}<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">App</span>;<br></code></pre></td></tr></tbody></table></figure><p>css</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">body</span> {<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">400vh</span>;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#242224</span>;<br>  <span class="hljs-attribute">overflow-x</span>: hidden;<br>}<br><br><span class="hljs-selector-class">.title</span>{<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-direction</span>: column;<br>  <span class="hljs-attribute">align-items</span>: center;<br>  <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">100px</span>;<br>}<br><br><span class="hljs-selector-class">.letter-area</span> {<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">flex-direction</span>: column;<br>  <span class="hljs-attribute">align-items</span>: center;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>}<br><br><span class="hljs-selector-class">.letter</span> {<br>  <span class="hljs-attribute">position</span>: fixed;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;<br>}<br><br><span class="hljs-selector-id">#c</span> {<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">100px</span>;<br>}<br><br><span class="hljs-selector-id">#l</span> {<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">300px</span>;<br>}<br><br><span class="hljs-selector-id">#z</span> {<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">500px</span><br>}<br><br><span class="hljs-selector-class">.scrolldown</span> {<br>  <span class="hljs-attribute">position</span>: fixed;<br>  <span class="hljs-attribute">bottom</span>: <span class="hljs-number">100px</span>;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">justify-content</span>: center;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">40px</span>;<br>  <span class="hljs-attribute">text-align</span>: center;<br>}<br><br><span class="hljs-selector-class">.bubbles</span> {<br>  <span class="hljs-attribute">top</span>: -<span class="hljs-number">100vh</span>;<br>  <span class="hljs-attribute">position</span>: fixed;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate3d</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>  <span class="hljs-attribute">z-index</span>: <span class="hljs-number">5</span>;<br>}<br><br><span class="hljs-selector-class">.bubble</span> {<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">140px</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">140px</span>;<br>  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">position</span>: absolute;<br>}<br><br><span class="hljs-selector-class">.bubble</span><span class="hljs-selector-class">.red</span> {<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#a94fe4</span>;<br>}<br><br><span class="hljs-selector-class">.bubble</span><span class="hljs-selector-class">.blue</span> {<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#68e4f1</span>;<br>}<br><br><span class="hljs-selector-class">.bubble</span><span class="hljs-selector-class">.yellow</span> {<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#ffe773</span>;<br>}<br><br><span class="hljs-selector-class">.haha</span> {<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">150vh</span>;<br>  <span class="hljs-attribute">left</span>:<span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">150px</span>;<br>}<br><br><span class="hljs-selector-class">.hoho</span> {<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">200vh</span>;<br>  <span class="hljs-attribute">right</span>:<span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">150px</span>;<br>}<br><br><span class="hljs-selector-class">.pass</span> {<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">270vh</span>;<br>  <span class="hljs-attribute">left</span>:<span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">150px</span>;<br>}<br></code></pre></td></tr></tbody></table></figure><p>c.svg</p><figure class="highlight svg"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs svg"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">"1.0"</span> standalone=<span class="hljs-string">"no"</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">svg</span> <span class="hljs-keyword">PUBLIC</span> <span class="hljs-string">"-//W3C//DTD SVG 1.1//EN"</span> <span class="hljs-string">"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">t</span>=<span class="hljs-string">"1726760982830"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"icon"</span> <span class="hljs-attr">viewBox</span>=<span class="hljs-string">"0 0 1024 1024"</span> <span class="hljs-attr">version</span>=<span class="hljs-string">"1.1"</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">"http://www.w3.org/2000/svg"</span> <span class="hljs-attr">p-id</span>=<span class="hljs-string">"4421"</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"500"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"500"</span> <span class="hljs-attr">xmlns:xlink</span>=<span class="hljs-string">"http://www.w3.org/1999/xlink"</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">fill</span>=<span class="hljs-string">"#fff"</span> <span class="hljs-attr">d</span>=<span class="hljs-string">"M786.225 285.8c-125-125-311.6-125-436.6 0s-125 327.6 0 452.6 311.6 125 436.6 0c25-25 65.6-25 90.6 0s25 65.6 0 90.6c-175 175-442.6 175-617.6 0s-175-458.6 0-633.6 442.6-175 617.6 0c25 25 25 65.6 0 90.6s-65.6 25-90.6 0z"</span> <span class="hljs-attr">p-id</span>=<span class="hljs-string">"4422"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">path</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><br></code></pre></td></tr></tbody></table></figure><p>l.svg</p><figure class="highlight svg"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs svg"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">"1.0"</span> standalone=<span class="hljs-string">"no"</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">svg</span> <span class="hljs-keyword">PUBLIC</span> <span class="hljs-string">"-//W3C//DTD SVG 1.1//EN"</span> <span class="hljs-string">"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">t</span>=<span class="hljs-string">"1726761022424"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"icon"</span> <span class="hljs-attr">viewBox</span>=<span class="hljs-string">"0 0 1024 1024"</span> <span class="hljs-attr">version</span>=<span class="hljs-string">"1.1"</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">"http://www.w3.org/2000/svg"</span> <span class="hljs-attr">p-id</span>=<span class="hljs-string">"5745"</span> <span class="hljs-attr">xmlns:xlink</span>=<span class="hljs-string">"http://www.w3.org/1999/xlink"</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"500"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"500"</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">fill</span>=<span class="hljs-string">"#fff"</span> <span class="hljs-attr">d</span>=<span class="hljs-string">"M320 64c35.4 0 64 28.6 64 64v704h384c35.4 0 64 28.6 64 64s-28.6 64-64 64H320c-35.4 0-64-28.6-64-64V128c0-35.4 28.6-64 64-64z"</span> <span class="hljs-attr">p-id</span>=<span class="hljs-string">"5746"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">path</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><br></code></pre></td></tr></tbody></table></figure><p>z.svg</p><figure class="highlight svg"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs svg"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">"1.0"</span> standalone=<span class="hljs-string">"no"</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">svg</span> <span class="hljs-keyword">PUBLIC</span> <span class="hljs-string">"-//W3C//DTD SVG 1.1//EN"</span> <span class="hljs-string">"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">t</span>=<span class="hljs-string">"1726761058129"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"icon"</span> <span class="hljs-attr">viewBox</span>=<span class="hljs-string">"0 0 1024 1024"</span> <span class="hljs-attr">version</span>=<span class="hljs-string">"1.1"</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">"http://www.w3.org/2000/svg"</span> <span class="hljs-attr">p-id</span>=<span class="hljs-string">"7677"</span> <span class="hljs-attr">xmlns:xlink</span>=<span class="hljs-string">"http://www.w3.org/1999/xlink"</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"500"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"500"</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">fill</span>=<span class="hljs-string">"#fff"</span> <span class="hljs-attr">d</span>=<span class="hljs-string">"M127.99999 128c0-35.4 28.6-64 64-64h640c24.8 0 47.4 14.4 58 36.8s7.2 49-8.8 68.2L328.59999 832H831.99999c35.4 0 64 28.6 64 64s-28.6 64-64 64H191.99999c-24.8 0-47.4-14.4-58-36.8s-7.2-49 8.8-68.2L695.39999 192H191.99999C156.59999 192 127.99999 163.4 127.99999 128z"</span> <span class="hljs-attr">p-id</span>=<span class="hljs-string">"7678"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">path</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;laxjs使用&quot;&gt;&lt;a href=&quot;#laxjs使用&quot; class=&quot;headerlink&quot; title=&quot;laxjs使用&quot;&gt;&lt;/a&gt;laxjs使用&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前</summary>
      
    
    
    
    <category term="动效" scheme="https://www.clzczh.top/categories/%E5%8A%A8%E6%95%88/"/>
    
    
    <category term="动效" scheme="https://www.clzczh.top/tags/%E5%8A%A8%E6%95%88/"/>
    
  </entry>
  
  <entry>
    <title>svg三角形字体切换动效</title>
    <link href="https://www.clzczh.top/2024/09/01/svg%E4%B8%89%E8%A7%92%E5%AD%97%E4%BD%93%E5%88%87%E6%8D%A2%E5%8A%A8%E6%95%88/"/>
    <id>https://www.clzczh.top/2024/09/01/svg%E4%B8%89%E8%A7%92%E5%AD%97%E4%BD%93%E5%88%87%E6%8D%A2%E5%8A%A8%E6%95%88/</id>
    <published>2024-09-01T12:53:55.000Z</published>
    <updated>2025-04-16T03:00:50.158Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Svg-三角形字体切换动效"><a href="#Svg-三角形字体切换动效" class="headerlink" title="Svg 三角形字体切换动效"></a>Svg 三角形字体切换动效</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前在<a href="http://species-in-pieces.com/">http://species-in-pieces.com/</a>上就看到过三角形组成的动物，切换动物时的动效比较炫酷。之后又在 codepen 上看到<a href="https://codepen.io/ainalem/pen/VWJRav">Triangles - deer or rabbit</a>上看到鹿转兔子的动效。所以想到做一个简单的三角形字体转换（字母），比较简单，甚至可以自己画。</p><blockquote><p>本文主要讲的可能更多是搜索、制作（调整）资源的过程，这类动效之前也看到过其他博主发文，但是大部分是用别人的坐标。但是个人感觉这种三角形切换动效，本身最重要的就是这种坐标，结果坐标直接拿别人的做好的没太大意义。</p></blockquote><h2 id="三角形字体"><a href="#三角形字体" class="headerlink" title="三角形字体"></a>三角形字体</h2><p>一开始是打算是打算直接使用<a href="https://yqnn.github.io/svg-path-editor/">svg-path-editor</a>绘制的，但是实际使用不是很方便。所以后面就想看看有没有能直接把字符按指定个数拆分成三角形的在线工具。</p><p>结果是没找到，各种方式问 gpt 也找不到。找的过程中，机缘巧合看到了一篇文章<a href="https://www.hipsthetic.com/11-free-low-poly-fonts/">11+ Free Low Poly Fonts</a>，看到有这种免费低多边形字体，所以转换思路 =&gt; 下载这种字体，然后转成 svg。</p><p>最后，在<a href="https://www.fontspace.com/">fontspace</a>上找到比较符合想法的字体。</p><p><img src="https://www.clzczh.top/CLZ_img/images/202409011758983.png"></p><h2 id="字体编辑"><a href="#字体编辑" class="headerlink" title="字体编辑"></a>字体编辑</h2><p>在上面找到字体后，但是每个符号的三角形个数并不一样，这样子，过渡动效做起来就不是很方便，需要考虑增加、减少三角形的情况。所以对下载的字体进行调整。<br>使用<a href="https://font.qqe2.com/">FontStore</a>对字体进行调整。</p><p><img src="https://www.clzczh.top/CLZ_img/images/202409011802899.png"></p><blockquote><p>上面的字体编辑器操作就比<code>svg-path-editor</code>操作方便。不过，选中元素的旋转只能是 90x(90°、180°)的旋转，没办法进行小角度调整就不是很方便就是了。</p></blockquote><p>调整完之后，导出<code>ttf</code>字体文件。</p><h2 id="字体导出-svg"><a href="#字体导出-svg" class="headerlink" title="字体导出 svg"></a>字体导出 svg</h2><p>字体导出 svg 工具挺多的，但是试了很多并不是<code>path</code>实现的，最后找到一个是<code>path</code>实现的工具–<a href="https://fontforge.org/en-US/">fontforge</a><br><img src="https://www.clzczh.top/CLZ_img/images/202409011809838.png"></p><blockquote><p>导出的时候选择<code>svg</code>格式即可。有可能会遇到导出失败的情况（我就遇到了，第一次导出成功，后面都失败了）。<a href="https://stackoverflow.com/questions/47902878/fontforge-export-a-glyph-to-svg-with-fontforge-command-line">stackflow</a>上有解决方案。</p></blockquote><p>导出的 svg 是只有一个<code>path</code>元素的，所以需要手动把路径拆解一下。</p><h2 id="animejs-实现动效"><a href="#animejs-实现动效" class="headerlink" title="animejs 实现动效"></a>animejs 实现动效</h2><p>把资源都搞到手之后，接下来就是使用<code>animejs</code>实现动效了。<br>步骤:</p><ol><li>给每一个 path 添加唯一标识<code>id</code></li><li>构建映射，字符每一个 path 对应另一个字符的哪个 path</li><li>使用<code>anime timeline</code>把每个 path 的动效都给加上</li></ol><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">svg</span></span><br><span class="hljs-tag">  <span class="hljs-attr">xmlns</span>=<span class="hljs-string">"http://www.w3.org/2000/svg"</span></span><br><span class="hljs-tag">  <span class="hljs-attr">width</span>=<span class="hljs-string">"400"</span></span><br><span class="hljs-tag">  <span class="hljs-attr">height</span>=<span class="hljs-string">"800"</span></span><br><span class="hljs-tag">  <span class="hljs-attr">viewBox</span>=<span class="hljs-string">"0 0 400 800"</span></span><br><span class="hljs-tag">&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">path</span></span><br><span class="hljs-tag">    <span class="hljs-attr">id</span>=<span class="hljs-string">"path1"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">fill</span>=<span class="hljs-string">"currentColor"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">d</span>=<span class="hljs-string">"M265 164l52 30l53 31v-61v-62l-53 30z"</span></span><br><span class="hljs-tag">  /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">path</span></span><br><span class="hljs-tag">    <span class="hljs-attr">id</span>=<span class="hljs-string">"path2"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">fill</span>=<span class="hljs-string">"currentColor"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">d</span>=<span class="hljs-string">"M370 89l-53 -32l-52 -30v62v61l52 -31z"</span></span><br><span class="hljs-tag">  /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">path</span></span><br><span class="hljs-tag">    <span class="hljs-attr">id</span>=<span class="hljs-string">"path3"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">fill</span>=<span class="hljs-string">"currentColor"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">d</span>=<span class="hljs-string">"M145 89l52 30l53 31v-61v-62l-53 30z"</span></span><br><span class="hljs-tag">  /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">path</span></span><br><span class="hljs-tag">    <span class="hljs-attr">id</span>=<span class="hljs-string">"path4"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">fill</span>=<span class="hljs-string">"currentColor"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">d</span>=<span class="hljs-string">"M25 164l52 30l53 31v-61v-62l-53 30z"</span></span><br><span class="hljs-tag">  /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">path</span></span><br><span class="hljs-tag">    <span class="hljs-attr">id</span>=<span class="hljs-string">"path5"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">fill</span>=<span class="hljs-string">"currentColor"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">d</span>=<span class="hljs-string">"M130 239l-53 -32l-52 -30v62v61l52 -31z"</span></span><br><span class="hljs-tag">  /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">path</span></span><br><span class="hljs-tag">    <span class="hljs-attr">id</span>=<span class="hljs-string">"path6"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">fill</span>=<span class="hljs-string">"currentColor"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">d</span>=<span class="hljs-string">"M25 314l52 30l53 31v-61v-62l-53 30z"</span></span><br><span class="hljs-tag">  /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">path</span></span><br><span class="hljs-tag">    <span class="hljs-attr">id</span>=<span class="hljs-string">"path7"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">fill</span>=<span class="hljs-string">"currentColor"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">d</span>=<span class="hljs-string">"M130 389l-53 -32l-52 -30v62v61l52 -31z"</span></span><br><span class="hljs-tag">  /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">path</span></span><br><span class="hljs-tag">    <span class="hljs-attr">id</span>=<span class="hljs-string">"path8"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">fill</span>=<span class="hljs-string">"currentColor"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">d</span>=<span class="hljs-string">"M25 464l52 30l53 31v-61v-62l-53 30z"</span></span><br><span class="hljs-tag">  /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">path</span></span><br><span class="hljs-tag">    <span class="hljs-attr">id</span>=<span class="hljs-string">"path9"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">fill</span>=<span class="hljs-string">"currentColor"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">d</span>=<span class="hljs-string">"M145 539l52 30l53 31v-61v-62l-53 30z"</span></span><br><span class="hljs-tag">  /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">path</span></span><br><span class="hljs-tag">    <span class="hljs-attr">id</span>=<span class="hljs-string">"path10"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">fill</span>=<span class="hljs-string">"currentColor"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">d</span>=<span class="hljs-string">"M370 539l-53 -32l-52 -30v62v61l52 -31z"</span></span><br><span class="hljs-tag">  /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">path</span></span><br><span class="hljs-tag">    <span class="hljs-attr">id</span>=<span class="hljs-string">"path11"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">fill</span>=<span class="hljs-string">"currentColor"</span></span><br><span class="hljs-tag">    <span class="hljs-attr">d</span>=<span class="hljs-string">"M265 464l52 30l53 31v-61v-62l-53 30z"</span></span><br><span class="hljs-tag">  /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> paths = [<br>  {<br>    <span class="hljs-attr">id</span>: <span class="hljs-string">"#path1"</span>,<br>    <span class="hljs-attr">d</span>: <span class="hljs-string">"M25 162l52 30l53 32v-62v-61l-53 30z"</span>,<br>  },<br>  {<br>    <span class="hljs-attr">id</span>: <span class="hljs-string">"#path2"</span>,<br>    <span class="hljs-attr">d</span>: <span class="hljs-string">"M130 237l-53 30l-52 32v-62v-61l52 30z"</span>,<br>  },<br>  {<br>    <span class="hljs-attr">id</span>: <span class="hljs-string">"#path3"</span>,<br>    <span class="hljs-attr">d</span>: <span class="hljs-string">"M25 312l52 30l53 32v-62v-61l-53 30z"</span>,<br>  },<br>  {<br>    <span class="hljs-attr">id</span>: <span class="hljs-string">"#path4"</span>,<br>    <span class="hljs-attr">d</span>: <span class="hljs-string">"M130 387l-53 30l-52 32v-62v-61l52 30z"</span>,<br>  },<br>  {<br>    <span class="hljs-attr">id</span>: <span class="hljs-string">"#path5"</span>,<br>    <span class="hljs-attr">d</span>: <span class="hljs-string">"M25 462l52 30l53 32v-62v-61l-53 30z"</span>,<br>  },<br>  {<br>    <span class="hljs-attr">id</span>: <span class="hljs-string">"#path6"</span>,<br>    <span class="hljs-attr">d</span>: <span class="hljs-string">"M130 537l-53 30l-52 32v-62v-61l52 30z"</span>,<br>  },<br>  {<br>    <span class="hljs-attr">id</span>: <span class="hljs-string">"#path7"</span>,<br>    <span class="hljs-attr">d</span>: <span class="hljs-string">"M25 612l52 30l53 32v-62v-61l-53 30z"</span>,<br>  },<br>  {<br>    <span class="hljs-attr">id</span>: <span class="hljs-string">"#path8"</span>,<br>    <span class="hljs-attr">d</span>: <span class="hljs-string">"M145 687l52 -31l53 -30v61v62l-53 -32z"</span>,<br>  },<br>  {<br>    <span class="hljs-attr">id</span>: <span class="hljs-string">"#path9"</span>,<br>    <span class="hljs-attr">d</span>: <span class="hljs-string">"M370 687l-53 30l-52 32v-62v-61l52 30z"</span>,<br>  },<br>  {<br>    <span class="hljs-attr">id</span>: <span class="hljs-string">"#path10"</span>,<br>    <span class="hljs-attr">d</span>: <span class="hljs-string">"M265 612l52 30l53 32v-62v-61l-53 30z"</span>,<br>  },<br>  {<br>    <span class="hljs-attr">id</span>: <span class="hljs-string">"#path11"</span>,<br>    <span class="hljs-attr">d</span>: <span class="hljs-string">"M490 612l-53 -31l-52 -30v61v62l52 -32z"</span>,<br>  },<br>];<br><br><span class="hljs-keyword">const</span> timeline = anime.<span class="hljs-title function_">timeline</span>({<br>  <span class="hljs-attr">autoplay</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-attr">direction</span>: <span class="hljs-string">"alternate"</span>,<br>  <span class="hljs-attr">loop</span>: <span class="hljs-literal">true</span>,<br>});<br><br>paths.<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">path, index</span>) {<br>  timeline.<span class="hljs-title function_">add</span>(<br>    {<br>      <span class="hljs-attr">targets</span>: path.<span class="hljs-property">id</span>,<br>      <span class="hljs-attr">d</span>: {<br>        <span class="hljs-attr">value</span>: path.<span class="hljs-property">d</span>,<br>        <span class="hljs-attr">duration</span>: <span class="hljs-number">1000</span>, <span class="hljs-comment">// 转换过程1s过渡</span><br>        <span class="hljs-attr">easing</span>: <span class="hljs-string">"easeInOutQuad"</span>,<br>      },<br>    },<br>    <span class="hljs-number">1000</span><br>  ); <span class="hljs-comment">// 动画同时开始，一个字符停留1s（如果没设置，那么就会是一个一个三角形依次执行</span><br>});<br></code></pre></td></tr></tbody></table></figure><p>效果：<br><img src="https://www.clzczh.top/CLZ_img/images/202409011828664.gif"></p><blockquote><p>如果想要有多段效果，比如a字符变成b字符后，再变成c字符这种，可以把上面的d元素改成数组，并且加多一个映射数组<code>path2s</code>.</p></blockquote><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">d</span>: [{<br>  <span class="hljs-attr">value</span>: path.<span class="hljs-property">d</span>,<br>  <span class="hljs-attr">duration</span>: <span class="hljs-number">1000</span>, <span class="hljs-comment">// 转换过程1s过渡</span><br>  <span class="hljs-attr">easing</span>: <span class="hljs-string">"easeInOutQuad"</span><br>}, {<br>  <span class="hljs-attr">value</span>: path2s[index].<span class="hljs-property">d</span>,<br>  <span class="hljs-attr">duration</span>: <span class="hljs-number">1000</span>,<br>  <span class="hljs-attr">easing</span>: <span class="hljs-string">"easeInOutQuad"</span>,<br>}],<br></code></pre></td></tr></tbody></table></figure><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><p>animejs版本为3.2.2。</p><p><a href="https://www.clzczh.top/demos/triangle-font.html">demo</a></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">      <span class="hljs-selector-tag">svg</span> {</span><br><span class="language-css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">600px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">600px</span>;</span><br><span class="language-css">      }</span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">svg</span></span><br><span class="hljs-tag">      <span class="hljs-attr">xmlns</span>=<span class="hljs-string">"http://www.w3.org/2000/svg"</span></span><br><span class="hljs-tag">      <span class="hljs-attr">width</span>=<span class="hljs-string">"400"</span></span><br><span class="hljs-tag">      <span class="hljs-attr">height</span>=<span class="hljs-string">"800"</span></span><br><span class="hljs-tag">      <span class="hljs-attr">viewBox</span>=<span class="hljs-string">"0 0 400 800"</span></span><br><span class="hljs-tag">    &gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">path</span></span><br><span class="hljs-tag">        <span class="hljs-attr">id</span>=<span class="hljs-string">"path1"</span></span><br><span class="hljs-tag">        <span class="hljs-attr">fill</span>=<span class="hljs-string">"currentColor"</span></span><br><span class="hljs-tag">        <span class="hljs-attr">d</span>=<span class="hljs-string">"M265 164l52 30l53 31v-61v-62l-53 30z"</span></span><br><span class="hljs-tag">      /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">path</span></span><br><span class="hljs-tag">        <span class="hljs-attr">id</span>=<span class="hljs-string">"path2"</span></span><br><span class="hljs-tag">        <span class="hljs-attr">fill</span>=<span class="hljs-string">"currentColor"</span></span><br><span class="hljs-tag">        <span class="hljs-attr">d</span>=<span class="hljs-string">"M370 89l-53 -32l-52 -30v62v61l52 -31z"</span></span><br><span class="hljs-tag">      /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">path</span></span><br><span class="hljs-tag">        <span class="hljs-attr">id</span>=<span class="hljs-string">"path3"</span></span><br><span class="hljs-tag">        <span class="hljs-attr">fill</span>=<span class="hljs-string">"currentColor"</span></span><br><span class="hljs-tag">        <span class="hljs-attr">d</span>=<span class="hljs-string">"M145 89l52 30l53 31v-61v-62l-53 30z"</span></span><br><span class="hljs-tag">      /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">path</span></span><br><span class="hljs-tag">        <span class="hljs-attr">id</span>=<span class="hljs-string">"path4"</span></span><br><span class="hljs-tag">        <span class="hljs-attr">fill</span>=<span class="hljs-string">"currentColor"</span></span><br><span class="hljs-tag">        <span class="hljs-attr">d</span>=<span class="hljs-string">"M25 164l52 30l53 31v-61v-62l-53 30z"</span></span><br><span class="hljs-tag">      /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">path</span></span><br><span class="hljs-tag">        <span class="hljs-attr">id</span>=<span class="hljs-string">"path5"</span></span><br><span class="hljs-tag">        <span class="hljs-attr">fill</span>=<span class="hljs-string">"currentColor"</span></span><br><span class="hljs-tag">        <span class="hljs-attr">d</span>=<span class="hljs-string">"M130 239l-53 -32l-52 -30v62v61l52 -31z"</span></span><br><span class="hljs-tag">      /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">path</span></span><br><span class="hljs-tag">        <span class="hljs-attr">id</span>=<span class="hljs-string">"path6"</span></span><br><span class="hljs-tag">        <span class="hljs-attr">fill</span>=<span class="hljs-string">"currentColor"</span></span><br><span class="hljs-tag">        <span class="hljs-attr">d</span>=<span class="hljs-string">"M25 314l52 30l53 31v-61v-62l-53 30z"</span></span><br><span class="hljs-tag">      /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">path</span></span><br><span class="hljs-tag">        <span class="hljs-attr">id</span>=<span class="hljs-string">"path7"</span></span><br><span class="hljs-tag">        <span class="hljs-attr">fill</span>=<span class="hljs-string">"currentColor"</span></span><br><span class="hljs-tag">        <span class="hljs-attr">d</span>=<span class="hljs-string">"M130 389l-53 -32l-52 -30v62v61l52 -31z"</span></span><br><span class="hljs-tag">      /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">path</span></span><br><span class="hljs-tag">        <span class="hljs-attr">id</span>=<span class="hljs-string">"path8"</span></span><br><span class="hljs-tag">        <span class="hljs-attr">fill</span>=<span class="hljs-string">"currentColor"</span></span><br><span class="hljs-tag">        <span class="hljs-attr">d</span>=<span class="hljs-string">"M25 464l52 30l53 31v-61v-62l-53 30z"</span></span><br><span class="hljs-tag">      /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">path</span></span><br><span class="hljs-tag">        <span class="hljs-attr">id</span>=<span class="hljs-string">"path9"</span></span><br><span class="hljs-tag">        <span class="hljs-attr">fill</span>=<span class="hljs-string">"currentColor"</span></span><br><span class="hljs-tag">        <span class="hljs-attr">d</span>=<span class="hljs-string">"M145 539l52 30l53 31v-61v-62l-53 30z"</span></span><br><span class="hljs-tag">      /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">path</span></span><br><span class="hljs-tag">        <span class="hljs-attr">id</span>=<span class="hljs-string">"path10"</span></span><br><span class="hljs-tag">        <span class="hljs-attr">fill</span>=<span class="hljs-string">"currentColor"</span></span><br><span class="hljs-tag">        <span class="hljs-attr">d</span>=<span class="hljs-string">"M370 539l-53 -32l-52 -30v62v61l52 -31z"</span></span><br><span class="hljs-tag">      /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">path</span></span><br><span class="hljs-tag">        <span class="hljs-attr">id</span>=<span class="hljs-string">"path11"</span></span><br><span class="hljs-tag">        <span class="hljs-attr">fill</span>=<span class="hljs-string">"currentColor"</span></span><br><span class="hljs-tag">        <span class="hljs-attr">d</span>=<span class="hljs-string">"M265 464l52 30l53 31v-61v-62l-53 30z"</span></span><br><span class="hljs-tag">      /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"./anime.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> path1s = [</span><br><span class="language-javascript">        {</span><br><span class="language-javascript">          <span class="hljs-attr">id</span>: <span class="hljs-string">"#path1"</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">d</span>: <span class="hljs-string">"M25 162l52 30l53 32v-62v-61l-53 30z"</span>,</span><br><span class="language-javascript">        },</span><br><span class="language-javascript">        {</span><br><span class="language-javascript">          <span class="hljs-attr">id</span>: <span class="hljs-string">"#path2"</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">d</span>: <span class="hljs-string">"M130 237l-53 30l-52 32v-62v-61l52 30z"</span>,</span><br><span class="language-javascript">        },</span><br><span class="language-javascript">        {</span><br><span class="language-javascript">          <span class="hljs-attr">id</span>: <span class="hljs-string">"#path3"</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">d</span>: <span class="hljs-string">"M25 312l52 30l53 32v-62v-61l-53 30z"</span>,</span><br><span class="language-javascript">        },</span><br><span class="language-javascript">        {</span><br><span class="language-javascript">          <span class="hljs-attr">id</span>: <span class="hljs-string">"#path4"</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">d</span>: <span class="hljs-string">"M130 387l-53 30l-52 32v-62v-61l52 30z"</span>,</span><br><span class="language-javascript">        },</span><br><span class="language-javascript">        {</span><br><span class="language-javascript">          <span class="hljs-attr">id</span>: <span class="hljs-string">"#path5"</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">d</span>: <span class="hljs-string">"M25 462l52 30l53 32v-62v-61l-53 30z"</span>,</span><br><span class="language-javascript">        },</span><br><span class="language-javascript">        {</span><br><span class="language-javascript">          <span class="hljs-attr">id</span>: <span class="hljs-string">"#path6"</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">d</span>: <span class="hljs-string">"M130 537l-53 30l-52 32v-62v-61l52 30z"</span>,</span><br><span class="language-javascript">        },</span><br><span class="language-javascript">        {</span><br><span class="language-javascript">          <span class="hljs-attr">id</span>: <span class="hljs-string">"#path7"</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">d</span>: <span class="hljs-string">"M25 612l52 30l53 32v-62v-61l-53 30z"</span>,</span><br><span class="language-javascript">        },</span><br><span class="language-javascript">        {</span><br><span class="language-javascript">          <span class="hljs-attr">id</span>: <span class="hljs-string">"#path8"</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">d</span>: <span class="hljs-string">"M145 687l52 -31l53 -30v61v62l-53 -32z"</span>,</span><br><span class="language-javascript">        },</span><br><span class="language-javascript">        {</span><br><span class="language-javascript">          <span class="hljs-attr">id</span>: <span class="hljs-string">"#path9"</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">d</span>: <span class="hljs-string">"M370 687l-53 30l-52 32v-62v-61l52 30z"</span>,</span><br><span class="language-javascript">        },</span><br><span class="language-javascript">        {</span><br><span class="language-javascript">          <span class="hljs-attr">id</span>: <span class="hljs-string">"#path10"</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">d</span>: <span class="hljs-string">"M265 612l52 30l53 32v-62v-61l-53 30z"</span>,</span><br><span class="language-javascript">        },</span><br><span class="language-javascript">        {</span><br><span class="language-javascript">          <span class="hljs-attr">id</span>: <span class="hljs-string">"#path11"</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">d</span>: <span class="hljs-string">"M490 612l-53 -31l-52 -30v61v62l52 -32z"</span>,</span><br><span class="language-javascript">        },</span><br><span class="language-javascript">      ];</span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> path2s = [</span><br><span class="language-javascript">        {</span><br><span class="language-javascript">          <span class="hljs-attr">id</span>: <span class="hljs-string">"#path1"</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">d</span>: <span class="hljs-string">"M294 137l-61 -36l-60 -34v70v72l60 -37z"</span>,</span><br><span class="language-javascript">        },</span><br><span class="language-javascript">        {</span><br><span class="language-javascript">          <span class="hljs-attr">id</span>: <span class="hljs-string">"#path2"</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">d</span>: <span class="hljs-string">"M173 226l60 35l61 37v-72v-70l-61 34z"</span>,</span><br><span class="language-javascript">        },</span><br><span class="language-javascript">        {</span><br><span class="language-javascript">          <span class="hljs-attr">id</span>: <span class="hljs-string">"#path3"</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">d</span>: <span class="hljs-string">"M433 221l-62 -36l-60 -35v71v71l60 -37z"</span>,</span><br><span class="language-javascript">        },</span><br><span class="language-javascript">        {</span><br><span class="language-javascript">          <span class="hljs-attr">id</span>: <span class="hljs-string">"#path4"</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">d</span>: <span class="hljs-string">"M311 302l60 34l62 37v-71v-71l-62 35z"</span>,</span><br><span class="language-javascript">        },</span><br><span class="language-javascript">        {</span><br><span class="language-javascript">          <span class="hljs-attr">id</span>: <span class="hljs-string">"#path5"</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">d</span>: <span class="hljs-string">"M433 388l-62 -36l-60 -34v70v72l60 -37z"</span>,</span><br><span class="language-javascript">        },</span><br><span class="language-javascript">        {</span><br><span class="language-javascript">          <span class="hljs-attr">id</span>: <span class="hljs-string">"#path6"</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">d</span>: <span class="hljs-string">"M173 388l60 35l61 37v-72v-70l-61 34z"</span>,</span><br><span class="language-javascript">        },</span><br><span class="language-javascript">        {</span><br><span class="language-javascript">          <span class="hljs-attr">id</span>: <span class="hljs-string">"#path7"</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">d</span>: <span class="hljs-string">"M42 475l60 34l61 37v-71v-71l-61 35z"</span>,</span><br><span class="language-javascript">        },</span><br><span class="language-javascript">        {</span><br><span class="language-javascript">          <span class="hljs-attr">id</span>: <span class="hljs-string">"#path8"</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">d</span>: <span class="hljs-string">"M294 475l-61 -36l-60 -35v71v71l60 -37z"</span>,</span><br><span class="language-javascript">        },</span><br><span class="language-javascript">        {</span><br><span class="language-javascript">          <span class="hljs-attr">id</span>: <span class="hljs-string">"#path9"</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">d</span>: <span class="hljs-string">"M181 558l60 35l61 37v-72v-70l-61 35z"</span>,</span><br><span class="language-javascript">        },</span><br><span class="language-javascript">        {</span><br><span class="language-javascript">          <span class="hljs-attr">id</span>: <span class="hljs-string">"#path10"</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">d</span>: <span class="hljs-string">"M433 558l-62 -35l-60 -35v70v72l60 -37z"</span>,</span><br><span class="language-javascript">        },</span><br><span class="language-javascript">        {</span><br><span class="language-javascript">          <span class="hljs-attr">id</span>: <span class="hljs-string">"#path11"</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">d</span>: <span class="hljs-string">"M316 636l60 34l61 37v-71v-71l-61 35z"</span>,</span><br><span class="language-javascript">        },</span><br><span class="language-javascript">      ];</span><br><span class="language-javascript"></span><br><span class="language-javascript">      <span class="hljs-keyword">const</span> timeline = anime.<span class="hljs-title function_">timeline</span>({</span><br><span class="language-javascript">        <span class="hljs-attr">autoplay</span>: <span class="hljs-literal">true</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">direction</span>: <span class="hljs-string">"alternate"</span>,</span><br><span class="language-javascript">        <span class="hljs-attr">loop</span>: <span class="hljs-literal">true</span>,</span><br><span class="language-javascript">      });</span><br><span class="language-javascript"></span><br><span class="language-javascript">      path1s.<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">path, index</span>) {</span><br><span class="language-javascript">        timeline.<span class="hljs-title function_">add</span>({</span><br><span class="language-javascript">          <span class="hljs-attr">targets</span>: path.<span class="hljs-property">id</span>,</span><br><span class="language-javascript">          <span class="hljs-attr">d</span>: [{</span><br><span class="language-javascript">            <span class="hljs-attr">value</span>: path.<span class="hljs-property">d</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">duration</span>: <span class="hljs-number">1000</span>, <span class="hljs-comment">// 转换过程1s过渡</span></span><br><span class="language-javascript">            <span class="hljs-attr">easing</span>: <span class="hljs-string">"easeInOutQuad"</span></span><br><span class="language-javascript">          }, {</span><br><span class="language-javascript">            <span class="hljs-attr">value</span>: path2s[index].<span class="hljs-property">d</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">duration</span>: <span class="hljs-number">1000</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">easing</span>: <span class="hljs-string">"easeInOutQuad"</span>,</span><br><span class="language-javascript">          }],</span><br><span class="language-javascript">          <span class="hljs-attr">offset</span>: <span class="hljs-number">1000</span> + <span class="hljs-number">10</span> * index, <span class="hljs-comment">// 在上一个字符停留1s后才开始转换（每个小块有10ms延时，前面的小块先启动</span></span><br><span class="language-javascript">        }, <span class="hljs-number">0</span>);    <span class="hljs-comment">// 动画同时开始（如果没设置，那么就会是一个一个三角形依次执行</span></span><br><span class="language-javascript">      });</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Svg-三角形字体切换动效&quot;&gt;&lt;a href=&quot;#Svg-三角形字体切换动效&quot; class=&quot;headerlink&quot; title=&quot;Svg 三角形字体切换动效&quot;&gt;&lt;/a&gt;Svg 三角形字体切换动效&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; cla</summary>
      
    
    
    
    <category term="前端" scheme="https://www.clzczh.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="动画" scheme="https://www.clzczh.top/tags/%E5%8A%A8%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>搭建一个简易的Playground</title>
    <link href="https://www.clzczh.top/2024/08/18/playground/"/>
    <id>https://www.clzczh.top/2024/08/18/playground/</id>
    <published>2024-08-18T22:22:43.000Z</published>
    <updated>2025-04-16T03:00:50.157Z</updated>
    
    <content type="html"><![CDATA[<h1 id="搭建一个简易的Playground"><a href="#搭建一个简易的Playground" class="headerlink" title="搭建一个简易的Playground"></a>搭建一个简易的Playground</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>看一个动效的效果时，看到源码用到了<code>ace</code>实现了代码实时效果。（案例是直接使用<code>eval</code>执行代码，但是看了一下<code>codepen</code>的html结构，所以自己利用<code>ace</code>+<code>iframe</code>来搞一个简单的Playground玩玩。</p><blockquote><p>“玩后感”：感觉<code>ace</code>这个库使用起来还挺不方便的（比如设置主题什么的，参数是<code>ace/theme/twilight</code>这种形式，还得另外<code>import</code>），实际使用可能还应该调研一下其他的<code>editor</code>工具。</p></blockquote><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-string">'ace-builds/src-noconflict/theme-twilight'</span>;<br><br><span class="hljs-comment">//...</span><br>editor.<span class="hljs-title function_">setTheme</span>(<span class="hljs-string">'ace/theme/twilight'</span>);<br></code></pre></td></tr></tbody></table></figure><h2 id="核心"><a href="#核心" class="headerlink" title="核心"></a>核心</h2><p>准备一个iframe用的<code>html</code>，然后对这个<code>html</code>的内容进行处理，比如<code>&lt;script&gt;&lt;/script&gt;</code>替换成<code>&lt;script&gt;${content}&lt;/script&gt;</code>。处理结果会是字符串，所以还需要使用<code>URL.createObjectURL</code>转换成URL。</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable constant_">URL</span>.<span class="hljs-title function_">createObjectURL</span>(<br>  <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([result], { <span class="hljs-attr">type</span>: <span class="hljs-string">"text/html"</span> })<br>)<br></code></pre></td></tr></tbody></table></figure><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>用到<code>ace</code>的部分比较简单：</p><ol><li><code>ace.edit()</code>：参数为<code>dom</code>元素，把dom元素变成一个编辑器，返回editor对象</li><li><code>editor.setTheme()</code>：设置主题</li><li><code>editor.session.setValue()</code>: 设置编辑器初始值</li><li><code>editor.getValue()</code>：获取编辑器当前值</li></ol><p>代码：<br>App.tsx</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> { useCallback, useEffect, useRef, useState } <span class="hljs-keyword">from</span> <span class="hljs-string">"react"</span>;<br><span class="hljs-keyword">import</span> ace, { <span class="hljs-title class_">Ace</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">"ace-builds"</span>;<br><span class="hljs-keyword">import</span> confettiRaw <span class="hljs-keyword">from</span> <span class="hljs-string">"./assets/confetti.browser.js?raw"</span>;   <span class="hljs-comment">// 直接import文件会报错无法找到模块。加上?raw表示不当成模块处理</span><br><span class="hljs-keyword">import</span> iframeRaw <span class="hljs-keyword">from</span> <span class="hljs-string">"./assets/iframe.html?raw"</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">'ace-builds/src-noconflict/theme-twilight'</span>;<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">"./App.css"</span>;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">App</span>(<span class="hljs-params"></span>) {<br>  <span class="hljs-keyword">const</span> editorRef = useRef&lt;<span class="hljs-title class_">HTMLDivElement</span>&gt;(<span class="hljs-literal">null</span>);<br>  <span class="hljs-keyword">const</span> [editor, setEditor] = useState&lt;<span class="hljs-title class_">Ace</span>.<span class="hljs-property">Editor</span>&gt;();<br><br>  <span class="hljs-keyword">const</span> handleInit = <span class="hljs-title function_">useCallback</span>(<span class="hljs-function">() =&gt;</span> {<br>    <span class="hljs-keyword">const</span> defaultCode = <span class="hljs-string">`</span><br><span class="hljs-string">      confetti({</span><br><span class="hljs-string">        particleCount: 100,</span><br><span class="hljs-string">          spread: 70,</span><br><span class="hljs-string">          origin: { y: 1 },</span><br><span class="hljs-string">      });</span><br><span class="hljs-string">    `</span>;<br><br>    <span class="hljs-keyword">if</span> (editorRef.<span class="hljs-property">current</span>) {<br>      <span class="hljs-keyword">const</span> newEditor = ace.<span class="hljs-title function_">edit</span>(editorRef.<span class="hljs-property">current</span>);<br>      newEditor.<span class="hljs-title function_">setTheme</span>(<span class="hljs-string">'ace/theme/twilight'</span>);<br>      newEditor.<span class="hljs-property">session</span>.<span class="hljs-title function_">setValue</span>(defaultCode);<br><br>      <span class="hljs-title function_">setEditor</span>(newEditor);<br>    }<br>  }, []);<br><br>  <span class="hljs-title function_">useEffect</span>(<span class="hljs-function">() =&gt;</span> {<br>    <span class="hljs-title function_">handleInit</span>();<br>  }, [handleInit]);<br><br>  <span class="hljs-keyword">const</span> importScriptSrc = <span class="hljs-variable constant_">URL</span>.<span class="hljs-title function_">createObjectURL</span>(<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([confettiRaw], { <span class="hljs-attr">type</span>: <span class="hljs-string">"text/javascript"</span> })<br>  );<br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">getIframeUrl</span> = (<span class="hljs-params"></span>) =&gt; {<br>    <span class="hljs-keyword">const</span> res = iframeRaw<br>    .<span class="hljs-title function_">replace</span>(<br>      <span class="hljs-string">'&lt;script id="import-script"&gt;&lt;/script&gt;'</span>,<br>      <span class="hljs-string">`&lt;script id="import-script" src="<span class="hljs-subst">${importScriptSrc}</span>"&gt;&lt;/script&gt;`</span><br>    )<br>    .<span class="hljs-title function_">replace</span>(<span class="hljs-string">"&lt;script&gt;&lt;/script&gt;"</span>, <span class="hljs-string">`&lt;script&gt;<span class="hljs-subst">${editor?.getValue()}</span>&lt;/script&gt;`</span>);<br><br>  <span class="hljs-keyword">return</span> <span class="hljs-variable constant_">URL</span>.<span class="hljs-title function_">createObjectURL</span>(<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([res], { <span class="hljs-attr">type</span>: <span class="hljs-string">"text/html"</span> })<br>  );<br>}<br><br>  <span class="hljs-keyword">const</span> [iframeUrl, setIframeUrl] = useState&lt;<span class="hljs-built_in">string</span>&gt;(<span class="hljs-title function_">getIframeUrl</span>());<br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">handleClick</span> = (<span class="hljs-params"></span>) =&gt; {<br>    <span class="hljs-title function_">setIframeUrl</span>(<span class="hljs-title function_">getIframeUrl</span>());<br>  };<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{handleClick}</span>&gt;</span>fire<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"box"</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">{editorRef}</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"editor"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">src</span>=<span class="hljs-string">{iframeUrl}</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/&gt;</span></span><br>  );<br>}<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">App</span>;<br></code></pre></td></tr></tbody></table></figure><p>iframe.html</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">&lt;!DOCTYPE html&gt;<br>&lt;html lang="en"&gt;<br>  &lt;head&gt;<br>    &lt;meta charset="UTF-8" /&gt;<br>    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0" /&gt;<br>    &lt;title&gt;Iframe&lt;/title&gt;<br>  &lt;/head&gt;<br>  &lt;body&gt;<br>    &lt;script id="import-script"&gt;&lt;/script&gt;<br>    &lt;script&gt;&lt;/script&gt;<br>  &lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></tbody></table></figure><p>第三方javascript: <code>confetti.browser.js</code>可以替换成自己需要的第三方资源</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://www.clzczh.top/CLZ_img/images/202408182126654.gif"></p><h2 id="添加js-beautify美化代码"><a href="#添加js-beautify美化代码" class="headerlink" title="添加js-beautify美化代码"></a>添加<code>js-beautify</code>美化代码</h2><p>初始化编辑器的代码时，传入的字符串格式可能会有问题。<br><img src="https://www.clzczh.top/CLZ_img/images/202408182148543.png"></p><p>比如上面的例子，初始化的效果就是这样。所以可以<code>setValue</code>之前用<code>js-beautify</code>做一下美化。</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> beautify <span class="hljs-keyword">from</span> <span class="hljs-string">'js-beautify'</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">pretty</span> = (<span class="hljs-params">code: string</span>) =&gt; {<br>  <span class="hljs-keyword">return</span> beautify.<span class="hljs-title function_">js</span>(code);<br>}<br><br><span class="hljs-comment">// ...</span><br>newEditor.<span class="hljs-property">session</span>.<span class="hljs-title function_">setValue</span>(<span class="hljs-title function_">pretty</span>(defaultCode));<br></code></pre></td></tr></tbody></table></figure><p><img src="https://www.clzczh.top/CLZ_img/images/202408182150919.png"></p><h2 id="使用monaco-editor"><a href="#使用monaco-editor" class="headerlink" title="使用monaco-editor"></a>使用<code>monaco-editor</code></h2><p><code>monaco-editor</code>是VSCode的代码编辑器。<code>monaco-editor</code>也是功能很强大，还有代码提示功能，写法也是组件写法。</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Editor</span> <span class="hljs-keyword">from</span> <span class="hljs-string">"@monaco-editor/react"</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">"./App.css"</span>;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">App</span>(<span class="hljs-params"></span>) {<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Editor</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"60vh"</span> <span class="hljs-attr">defaultLanguage</span>=<span class="hljs-string">"javascript"</span> <span class="hljs-attr">defaultValue</span>=<span class="hljs-string">"console.log('Hello clz!!!')"</span> <span class="hljs-attr">theme</span>=<span class="hljs-string">"vs-dark"</span> /&gt;</span></span><br>  );<br>}<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">App</span>;<br></code></pre></td></tr></tbody></table></figure><p><img src="https://www.clzczh.top/CLZ_img/images/202408182220908.png"><br><img src="https://www.clzczh.top/CLZ_img/images/202408182221724.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;搭建一个简易的Playground&quot;&gt;&lt;a href=&quot;#搭建一个简易的Playground&quot; class=&quot;headerlink&quot; title=&quot;搭建一个简易的Playground&quot;&gt;&lt;/a&gt;搭建一个简易的Playground&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="前端" scheme="https://www.clzczh.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Playground" scheme="https://www.clzczh.top/tags/Playground/"/>
    
  </entry>
  
  <entry>
    <title>canvas 渐变动效</title>
    <link href="https://www.clzczh.top/2024/08/02/granim/"/>
    <id>https://www.clzczh.top/2024/08/02/granim/</id>
    <published>2024-08-02T22:00:00.000Z</published>
    <updated>2025-04-16T03:00:50.155Z</updated>
    
    <content type="html"><![CDATA[<h1 id="canvas-渐变动效"><a href="#canvas-渐变动效" class="headerlink" title="canvas 渐变动效"></a>canvas 渐变动效</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>看到一个渐变动效的库<a href="https://github.com/sarcadass/granim.js">granimjs</a>的一个效果，简单看了下源码，感觉还挺有意思的，自己捣鼓一个简单版玩玩</p></blockquote><h2 id="核心"><a href="#核心" class="headerlink" title="核心"></a>核心</h2><ol><li>利用<code>canvas</code>的<code>createLinearGradient</code>创建渐变，以及<code>addColorStop</code>添加偏移、颜色。</li><li>渐变动效是将颜色转换为 rgb 色系，计算出颜色之前的差值，然后慢慢根据时间戳的变化，逐渐修改颜色</li></ol><h2 id="canvas-绘制渐变"><a href="#canvas-绘制渐变" class="headerlink" title="canvas 绘制渐变"></a>canvas 绘制渐变</h2><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">"canvas"</span>);<br><span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">"2d"</span>);<br><br>canvas.<span class="hljs-property">width</span> = <span class="hljs-number">200</span>;<br>canvas.<span class="hljs-property">height</span> = <span class="hljs-number">200</span>;<br><br><span class="hljs-keyword">const</span> gradient = ctx.<span class="hljs-title function_">createLinearGradient</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span>); <span class="hljs-comment">// 创建左上到右下的渐变</span><br>gradient.<span class="hljs-title function_">addColorStop</span>(<span class="hljs-number">0</span>, <span class="hljs-string">"#ff0000"</span>);<br>gradient.<span class="hljs-title function_">addColorStop</span>(<span class="hljs-number">1</span>, <span class="hljs-string">"#0000ff"</span>); <span class="hljs-comment">// 添加渐变一半一半</span><br><br>ctx.<span class="hljs-property">fillStyle</span> = gradient;<br>ctx.<span class="hljs-title function_">fillRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span>);<br></code></pre></td></tr></tbody></table></figure><p><img src="https://www.clzczh.top/CLZ_img/images/202407281516218.png"></p><h2 id="渐变动效"><a href="#渐变动效" class="headerlink" title="渐变动效"></a>渐变动效</h2><h3 id="makeGradient创建渐变"><a href="#makeGradient创建渐变" class="headerlink" title="makeGradient创建渐变"></a><code>makeGradient</code>创建渐变</h3><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">"canvas"</span>);<br><span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">"2d"</span>);<br><br>canvas.<span class="hljs-property">width</span> = <span class="hljs-number">600</span>;<br>canvas.<span class="hljs-property">height</span> = <span class="hljs-number">300</span>;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">makeGradient</span>(<span class="hljs-params"></span>) {<br>  ctx.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span>);<br>  <span class="hljs-keyword">const</span> gradient = ctx.<span class="hljs-title function_">createLinearGradient</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span>);<br><br>  paintColorPair.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">paintColor, index</span>) =&gt;</span> {<br>    gradient.<span class="hljs-title function_">addColorStop</span>(<br>      index === <span class="hljs-number">0</span> ? <span class="hljs-number">0</span> : <span class="hljs-number">1</span>,<br>      <span class="hljs-string">`rgb(<span class="hljs-subst">${paintColor[<span class="hljs-number">0</span>]}</span>, <span class="hljs-subst">${paintColor[<span class="hljs-number">1</span>]}</span>, <span class="hljs-subst">${paintColor[<span class="hljs-number">2</span>]}</span>)`</span><br>    );<br>  });<br><br>  ctx.<span class="hljs-property">fillStyle</span> = gradient;<br>  ctx.<span class="hljs-title function_">fillRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span>);<br>}<br><span class="hljs-title function_">makeGradient</span>();<br></code></pre></td></tr></tbody></table></figure><h3 id="convertHextoRgb将-hex-字符串转化为-rgb-数组"><a href="#convertHextoRgb将-hex-字符串转化为-rgb-数组" class="headerlink" title="convertHextoRgb将 hex 字符串转化为 rgb 数组"></a><code>convertHextoRgb</code>将 hex 字符串转化为 rgb 数组</h3><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">convertHextoRgb</span>(<span class="hljs-params">hex</span>) {<br>  <span class="hljs-keyword">const</span> result = <span class="hljs-regexp">/^#([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i</span>.<span class="hljs-title function_">exec</span>(hex);<br>  <span class="hljs-keyword">return</span> result<br>    ? [<br>        <span class="hljs-built_in">parseInt</span>(result[<span class="hljs-number">1</span>], <span class="hljs-number">16</span>),<br>        <span class="hljs-built_in">parseInt</span>(result[<span class="hljs-number">2</span>], <span class="hljs-number">16</span>),<br>        <span class="hljs-built_in">parseInt</span>(result[<span class="hljs-number">3</span>], <span class="hljs-number">16</span>),<br>      ]<br>    : <span class="hljs-literal">null</span>;<br>}<br><br><span class="hljs-keyword">const</span> hex = <span class="hljs-string">"#ff0000"</span>;<br><span class="hljs-keyword">const</span> rgbColors = <span class="hljs-title function_">convertHextoRgb</span>(hex);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(rgbColors); <span class="hljs-comment">// [255, 0, 0]</span><br></code></pre></td></tr></tbody></table></figure><h3 id="getRgbDiff获取两个颜色之间的差异"><a href="#getRgbDiff获取两个颜色之间的差异" class="headerlink" title="getRgbDiff获取两个颜色之间的差异"></a><code>getRgbDiff</code>获取两个颜色之间的差异</h3><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">getColorDiff</span>(<span class="hljs-params">colorA, colorB</span>) {<br>  <span class="hljs-keyword">const</span> colorDiff = [];<br><br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">3</span>; i++) {<br>    colorDiff.<span class="hljs-title function_">push</span>(colorB[i] - colorA[i]);<br>  }<br><br>  <span class="hljs-keyword">return</span> colorDiff;<br>}<br><br><span class="hljs-keyword">const</span> rgb1 = [<span class="hljs-number">100</span>, <span class="hljs-number">150</span>, <span class="hljs-number">200</span>];<br><span class="hljs-keyword">const</span> rgb2 = [<span class="hljs-number">120</span>, <span class="hljs-number">160</span>, <span class="hljs-number">180</span>];<br><br><span class="hljs-keyword">const</span> rgbDiff = <span class="hljs-title function_">getColorDiff</span>(rgb1, rgb2);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(rgbDiff); <span class="hljs-comment">// [ 20, 10, -20 ]</span><br></code></pre></td></tr></tbody></table></figure><blockquote><p>获取两个颜色之前的差异之后，就可以较平滑地过渡颜色了。比如上面的<code>rgb1</code>过渡到<code>rgb2</code>，如果中间只过渡一次的话，那么中间状态就是<code>[100 + 10, 150 + 5, 200 - 10]</code></p></blockquote><h3 id="animateColors搭配动效，实现过渡动画"><a href="#animateColors搭配动效，实现过渡动画" class="headerlink" title="animateColors搭配动效，实现过渡动画"></a><code>animateColors</code>搭配动效，实现过渡动画</h3><blockquote><p>将之前得到的颜色差值，根据当前时间戳占切换颜色时间的比例以百分比的形式增加。得到当前时间戳对应的色值后，绘制渐变</p></blockquote><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> duration = <span class="hljs-number">5000</span>; <span class="hljs-comment">// 切换颜色的时间</span><br><br><span class="hljs-keyword">let</span> previousTimeStamp = <span class="hljs-number">0</span>; <span class="hljs-comment">// 记录上一次的时间戳</span><br><span class="hljs-keyword">let</span> process = <span class="hljs-number">0</span>; <span class="hljs-comment">// 进度，通过process /duration获取颜色累加的百分比</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">animateColor</span>(<span class="hljs-params">timestamp</span>) {<br>  process = process + (timestamp - previousTimeStamp);<br>  previousTimeStamp = timestamp;<br><br>  <span class="hljs-keyword">const</span> progressPercent = ((process / duration) * <span class="hljs-number">100</span>).<span class="hljs-title function_">toFixed</span>(<span class="hljs-number">2</span>);<br><br>  <span class="hljs-comment">// 获取绘制颜色（颜色 + 偏移值）。偏移值会根据时间戳的变化，从0%到100%</span><br>  paintColorPair = rgbColorPairs[currentPairIndex].<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">rgbColor, i</span>) =&gt;</span> {<br>    <span class="hljs-keyword">return</span> rgbColor.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item, j</span>) =&gt;</span> {<br>      <span class="hljs-keyword">return</span> (<br>        item +<br>        <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(<br>          (rgbDiffPairs[currentPairIndex][i][j] / <span class="hljs-number">100</span>) * progressPercent<br>        )<br>      );<br>    });<br>  });<br><br>  <span class="hljs-comment">// 绘制</span><br>  <span class="hljs-title function_">makeGradient</span>();<br><br>  <span class="hljs-keyword">if</span> (progressPercent &lt; <span class="hljs-number">100</span>) {<br>    <span class="hljs-title function_">requestAnimationFrame</span>(animateColor);<br>  } <span class="hljs-keyword">else</span> {<br>    process = <span class="hljs-number">0</span>; <span class="hljs-comment">// 进度超过百分比，重置进度</span><br><br>    <span class="hljs-keyword">if</span> (currentPairIndex === rgbColorPairs.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>) {<br>      currentPairIndex = <span class="hljs-number">0</span>; <span class="hljs-comment">// 更新到下一组颜色</span><br>    } <span class="hljs-keyword">else</span> {<br>      currentPairIndex++;<br>    }<br><br>    <span class="hljs-title function_">requestAnimationFrame</span>(animateColor);<br>  }<br>}<br><br><span class="hljs-title function_">requestAnimationFrame</span>(animateColor);<br></code></pre></td></tr></tbody></table></figure><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="https://www.clzczh.top/CLZ_img/images/202408020108532.gif"></p><blockquote><p>稍微减少了切换颜色的时间</p></blockquote><h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><p>html</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"./helper.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"./granim.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></tbody></table></figure><p>help.js</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">convertHextoRgb</span>(<span class="hljs-params">hex</span>) {<br>  <span class="hljs-keyword">const</span> result = <span class="hljs-regexp">/^#([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i</span>.<span class="hljs-title function_">exec</span>(hex);<br>  <span class="hljs-keyword">return</span> result<br>    ? [<br>        <span class="hljs-built_in">parseInt</span>(result[<span class="hljs-number">1</span>], <span class="hljs-number">16</span>),<br>        <span class="hljs-built_in">parseInt</span>(result[<span class="hljs-number">2</span>], <span class="hljs-number">16</span>),<br>        <span class="hljs-built_in">parseInt</span>(result[<span class="hljs-number">3</span>], <span class="hljs-number">16</span>),<br>      ]<br>    : <span class="hljs-literal">null</span>;<br>}<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getColorDiff</span>(<span class="hljs-params">colorA, colorB</span>) {<br>  <span class="hljs-keyword">const</span> colorDiff = [];<br><br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">3</span>; i++) {<br>    colorDiff.<span class="hljs-title function_">push</span>(colorB[i] - colorA[i]);<br>  }<br><br>  <span class="hljs-keyword">return</span> colorDiff;<br>}<br></code></pre></td></tr></tbody></table></figure><p>granim.js</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> hexColorPairs = [<br>  [<span class="hljs-string">"#ff0000"</span>, <span class="hljs-string">"#0000ff"</span>],<br>  [<span class="hljs-string">"#000000"</span>, <span class="hljs-string">"#ffffff"</span>],<br>];<br><br><span class="hljs-keyword">const</span> rgbColorPairs = hexColorPairs.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">hexColorPair</span>) =&gt;</span> {<br>  <span class="hljs-keyword">return</span> hexColorPair.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">hex</span>) =&gt;</span> <span class="hljs-title function_">convertHextoRgb</span>(hex));<br>});<br><br><span class="hljs-keyword">const</span> rgbDiffPairs = rgbColorPairs.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">rgbColorPair, i</span>) =&gt;</span> {<br>  <span class="hljs-keyword">return</span> rgbColorPair.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">rgbColor, j</span>) =&gt;</span> {<br>    <span class="hljs-keyword">if</span> (i === rgbColorPairs.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>) {<br>      <span class="hljs-keyword">return</span> <span class="hljs-title function_">getColorDiff</span>(rgbColor, rgbColorPairs[<span class="hljs-number">0</span>][j]);<br>    } <span class="hljs-keyword">else</span> {<br>      <span class="hljs-keyword">return</span> <span class="hljs-title function_">getColorDiff</span>(rgbColor, rgbColorPairs[i + <span class="hljs-number">1</span>][j]);<br>    }<br>  });<br>});<br><br><span class="hljs-keyword">let</span> currentPairIndex = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">let</span> paintColorPair = rgbColorPairs[currentPairIndex];<br><br><span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">"canvas"</span>);<br><span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">"2d"</span>);<br><br>canvas.<span class="hljs-property">width</span> = <span class="hljs-number">600</span>;<br>canvas.<span class="hljs-property">height</span> = <span class="hljs-number">300</span>;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">makeGradient</span>(<span class="hljs-params"></span>) {<br>  ctx.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span>);<br>  <span class="hljs-keyword">const</span> gradient = ctx.<span class="hljs-title function_">createLinearGradient</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span>);<br><br>  paintColorPair.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">paintColor, index</span>) =&gt;</span> {<br>    gradient.<span class="hljs-title function_">addColorStop</span>(<br>      index === <span class="hljs-number">0</span> ? <span class="hljs-number">0</span> : <span class="hljs-number">1</span>,<br>      <span class="hljs-string">`rgb(<span class="hljs-subst">${paintColor[<span class="hljs-number">0</span>]}</span>, <span class="hljs-subst">${paintColor[<span class="hljs-number">1</span>]}</span>, <span class="hljs-subst">${paintColor[<span class="hljs-number">2</span>]}</span>)`</span><br>    );<br>  });<br><br>  ctx.<span class="hljs-property">fillStyle</span> = gradient;<br>  ctx.<span class="hljs-title function_">fillRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span>);<br>}<br><span class="hljs-title function_">makeGradient</span>();<br><br><span class="hljs-keyword">const</span> duration = <span class="hljs-number">5000</span>; <span class="hljs-comment">// 切换颜色的时间</span><br><br><span class="hljs-keyword">let</span> previousTimeStamp = <span class="hljs-number">0</span>; <span class="hljs-comment">// 记录上一次地时间戳</span><br><span class="hljs-keyword">let</span> process = <span class="hljs-number">0</span>; <span class="hljs-comment">// 进度，通过process /duration获取颜色累加的百分比</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">animateColor</span>(<span class="hljs-params">timestamp</span>) {<br>  process = process + (timestamp - previousTimeStamp);<br>  previousTimeStamp = timestamp;<br><br>  <span class="hljs-keyword">const</span> progressPercent = ((process / duration) * <span class="hljs-number">100</span>).<span class="hljs-title function_">toFixed</span>(<span class="hljs-number">2</span>);<br><br>  <span class="hljs-comment">// 获取绘制颜色（颜色 + 偏移值）。偏移值会根据时间戳的变化，从0%到100%</span><br>  paintColorPair = rgbColorPairs[currentPairIndex].<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">rgbColor, i</span>) =&gt;</span> {<br>    <span class="hljs-keyword">return</span> rgbColor.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item, j</span>) =&gt;</span> {<br>      <span class="hljs-keyword">return</span> (<br>        item +<br>        <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(<br>          (rgbDiffPairs[currentPairIndex][i][j] / <span class="hljs-number">100</span>) * progressPercent<br>        )<br>      );<br>    });<br>  });<br><br>  <span class="hljs-comment">// 绘制</span><br>  <span class="hljs-title function_">makeGradient</span>();<br><br>  <span class="hljs-keyword">if</span> (progressPercent &lt; <span class="hljs-number">100</span>) {<br>    <span class="hljs-title function_">requestAnimationFrame</span>(animateColor);<br>  } <span class="hljs-keyword">else</span> {<br>    process = <span class="hljs-number">0</span>; <span class="hljs-comment">// 进度超过百分比，重置进度</span><br><br>    <span class="hljs-keyword">if</span> (currentPairIndex === rgbColorPairs.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>) {<br>      currentPairIndex = <span class="hljs-number">0</span>; <span class="hljs-comment">// 更新到下一组颜色</span><br>    } <span class="hljs-keyword">else</span> {<br>      currentPairIndex++;<br>    }<br><br>    <span class="hljs-title function_">requestAnimationFrame</span>(animateColor);<br>  }<br>}<br><br><span class="hljs-title function_">requestAnimationFrame</span>(animateColor);<br></code></pre></td></tr></tbody></table></figure><h2 id="小彩蛋"><a href="#小彩蛋" class="headerlink" title="小彩蛋"></a>小彩蛋</h2><p>在<a href="https://github.com/sarcadass/granim.js">granimjs</a>中还发现了，还可以使用<code>globalCompositeOperation</code>来实现图片和渐变混合的效果。<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation">globalCompositeOperation</a></p><p>可以选择合适的类型，玩出花样。</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> image = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Image</span>();<br>image.<span class="hljs-property">src</span> = <span class="hljs-string">"./imgs/bg-forest.jpg"</span>;<br>ctx.<span class="hljs-property">globalCompositeOperation</span> = <span class="hljs-string">"color-burn"</span>;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">makeGradient</span>(<span class="hljs-params"></span>) {<br>  ctx.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span>);<br>  ctx.<span class="hljs-title function_">drawImage</span>(image, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span>);<br><br>  <span class="hljs-keyword">const</span> gradient = ctx.<span class="hljs-title function_">createLinearGradient</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span>);<br>  <span class="hljs-comment">// ...</span><br>}<br></code></pre></td></tr></tbody></table></figure><p><img src="https://www.clzczh.top/CLZ_img/images/202408020120151.gif"></p><p><a href="http://www.clzczh.top/demos/granim.html">线上体验</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;canvas-渐变动效&quot;&gt;&lt;a href=&quot;#canvas-渐变动效&quot; class=&quot;headerlink&quot; title=&quot;canvas 渐变动效&quot;&gt;&lt;/a&gt;canvas 渐变动效&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;head</summary>
      
    
    
    
    <category term="前端" scheme="https://www.clzczh.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Canvas" scheme="https://www.clzczh.top/tags/Canvas/"/>
    
    <category term="动画" scheme="https://www.clzczh.top/tags/%E5%8A%A8%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>文字粒子动画效果</title>
    <link href="https://www.clzczh.top/2024/05/30/text-particle/"/>
    <id>https://www.clzczh.top/2024/05/30/text-particle/</id>
    <published>2024-05-30T00:55:00.000Z</published>
    <updated>2025-04-16T03:00:50.158Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文字粒子动画效果"><a href="#文字粒子动画效果" class="headerlink" title="文字粒子动画效果"></a>文字粒子动画效果</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>对动画特效比较有兴趣，之前逛网站时看到的效果，之前看到了实现的文章，稍微学了一下，记录一下。<a href="https://www.kennethcachia.com/shape-shifter/">shape-shifter</a></p></blockquote><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><p><img src="https://www.clzczh.top/CLZ_img/images/202405292323870.png"></p><h2 id="获取文字的像素点信息"><a href="#获取文字的像素点信息" class="headerlink" title="获取文字的像素点信息"></a>获取文字的像素点信息</h2><p>首先，利用配置的文字信息，绘制文字到虚拟的 canvas 中。</p><blockquote><p>把虚拟的 canvas 也添加到 dom 树上看效果。</p></blockquote><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> options = {<br>  <span class="hljs-attr">width</span>: <span class="hljs-number">400</span>,<br>  <span class="hljs-attr">height</span>: <span class="hljs-number">400</span>,<br>  <span class="hljs-attr">time</span>: <span class="hljs-number">20</span>,<br>};<br><br><span class="hljs-keyword">const</span> textOptions = {<br>  <span class="hljs-attr">word</span>: <span class="hljs-string">"赤蓝紫"</span>,<br>  <span class="hljs-attr">font</span>: <span class="hljs-string">"200px Arial"</span>,<br>};<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">initCanvas</span>(<span class="hljs-params"></span>) {<br>  <span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">"canvas"</span>);<br>  <span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">"2d"</span>);<br><br>  options.<span class="hljs-property">width</span> = <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">clientWidth</span>;<br>  options.<span class="hljs-property">height</span> = <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">clientHeight</span>;<br><br>  canvas.<span class="hljs-property">width</span> = options.<span class="hljs-property">width</span>;<br>  canvas.<span class="hljs-property">height</span> = options.<span class="hljs-property">height</span>;<br><br>  <span class="hljs-keyword">return</span> { canvas, ctx };<br>}<br><span class="hljs-keyword">const</span> { canvas, ctx } = <span class="hljs-title function_">initCanvas</span>();<br><br><span class="hljs-title function_">getPointsInfo</span>(options);<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getPointsInfo</span>(<span class="hljs-params">{ width, height }</span>) {<br>  <span class="hljs-keyword">const</span> virtualCvs = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">"canvas"</span>);<br>  virtualCvs.<span class="hljs-property">width</span> = width;<br>  virtualCvs.<span class="hljs-property">height</span> = height;<br>  <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-title function_">appendChild</span>(virtualCvs);<br><br>  <span class="hljs-keyword">const</span> virtualCtx = virtualCvs.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">"2d"</span>);<br>  <span class="hljs-title function_">drawText</span>(virtualCtx, options, textOptions);<br>}<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">drawText</span>(<span class="hljs-params">virtualCtx, { width, height }, { font, word }</span>) {<br>  virtualCtx.<span class="hljs-property">font</span> = font;<br>  <span class="hljs-keyword">const</span> measure = virtualCtx.<span class="hljs-title function_">measureText</span>(word); <span class="hljs-comment">// 获取文字的宽高</span><br><br>  virtualCtx.<span class="hljs-title function_">fillText</span>(word, (width - measure.<span class="hljs-property">width</span>) / <span class="hljs-number">2</span>, height / <span class="hljs-number">2</span>); <span class="hljs-comment">// (width - measure.width) / 2是为了让文字居中</span><br>}<br></code></pre></td></tr></tbody></table></figure><p><img src="https://www.clzczh.top/CLZ_img/images/202405292344850.png"></p><p>把文字绘制到虚拟画布上之后，利用<code>getImageData</code>获取文字的像素信息。</p><blockquote><p><code>getImageData</code>简单使用：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">"canvas"</span>);<br><span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">"2d"</span>);<br><br>canvas.<span class="hljs-property">width</span> = <span class="hljs-number">2</span>;<br>canvas.<span class="hljs-property">height</span> = <span class="hljs-number">2</span>;<br><br>ctx.<span class="hljs-property">fillStyle</span> = <span class="hljs-string">"black"</span>;<br>ctx.<span class="hljs-title function_">fillRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>);<br><br><span class="hljs-keyword">const</span> { data } = ctx.<span class="hljs-title function_">getImageData</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data);<br></code></pre></td></tr></tbody></table></figure><p><img src="https://www.clzczh.top/CLZ_img/images/202405300003070.png"></p></blockquote><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">getWordPxInfo</span>(<span class="hljs-params">virtualCtx, { width, height, speed }</span>) {<br>  <span class="hljs-keyword">const</span> imageData = virtualCtx.<span class="hljs-title function_">getImageData</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, width, height).<span class="hljs-property">data</span>;<br><br>  <span class="hljs-keyword">const</span> gap = <span class="hljs-number">6</span>;<br>  <span class="hljs-keyword">const</span> particles = [];<br><br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> y = <span class="hljs-number">0</span>; y &lt; height; y += gap) {<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> x = <span class="hljs-number">0</span>; x &lt; width; x += gap) {<br>      <span class="hljs-keyword">const</span> position = (width * y + x) * <span class="hljs-number">4</span>; <span class="hljs-comment">// 获取点阵信息</span><br>      <span class="hljs-keyword">const</span> r = imageData[position];<br>      <span class="hljs-keyword">const</span> g = imageData[position + <span class="hljs-number">1</span>];<br>      <span class="hljs-keyword">const</span> b = imageData[position + <span class="hljs-number">2</span>];<br>      <span class="hljs-keyword">const</span> a = imageData[position + <span class="hljs-number">3</span>];<br><br>      <span class="hljs-comment">// 判断当前像素是否有文字</span><br>      <span class="hljs-keyword">if</span> (r + g + b + a &gt; <span class="hljs-number">0</span>) {<br>        <span class="hljs-comment">// 粒子实例化</span><br>        particles.<span class="hljs-title function_">push</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Particle</span>({ x, y }));<br>      }<br>    }<br>  }<br><br>  <span class="hljs-keyword">return</span> particles;<br>}<br></code></pre></td></tr></tbody></table></figure><h3 id="粒子类"><a href="#粒子类" class="headerlink" title="粒子类"></a>粒子类</h3><blockquote><p>随机生成点的位置 x、y，并根据参数<code>targetX</code>、<code>targetY</code>设置速度。</p></blockquote><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Particle</span> {<br>  <span class="hljs-title function_">constructor</span>(<span class="hljs-params">point</span>) {<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">targetX</span> = point.<span class="hljs-property">x</span>;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">targetY</span> = point.<span class="hljs-property">y</span>;<br><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">x</span> = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * canvas.<span class="hljs-property">width</span>);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">y</span> = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * canvas.<span class="hljs-property">height</span>);<br><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">radius</span> = <span class="hljs-number">3</span>;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">color</span> = <span class="hljs-string">`purple`</span>;<br>  }<br><br>  <span class="hljs-title function_">draw</span>(<span class="hljs-params"></span>) {<br>    ctx.<span class="hljs-title function_">beginPath</span>();<br>    ctx.<span class="hljs-property">fillStyle</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">color</span>;<br>    ctx.<span class="hljs-title function_">arc</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">x</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">y</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">radius</span>, <span class="hljs-number">0</span>, <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> * <span class="hljs-number">2</span>);<br>    ctx.<span class="hljs-title function_">fill</span>();<br><br>    ctx.<span class="hljs-title function_">closePath</span>();<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">update</span>();<br>  }<br><br>  <span class="hljs-title function_">update</span>(<span class="hljs-params"></span>) {<br>    <span class="hljs-keyword">const</span> mx = <span class="hljs-variable language_">this</span>.<span class="hljs-property">targetX</span> - <span class="hljs-variable language_">this</span>.<span class="hljs-property">x</span>;<br>    <span class="hljs-keyword">const</span> my = <span class="hljs-variable language_">this</span>.<span class="hljs-property">targetY</span> - <span class="hljs-variable language_">this</span>.<span class="hljs-property">y</span>;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">vx</span> = mx / options.<span class="hljs-property">time</span>;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">vy</span> = my / options.<span class="hljs-property">time</span>;<br><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">x</span> += <span class="hljs-variable language_">this</span>.<span class="hljs-property">vx</span>;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">y</span> += <span class="hljs-variable language_">this</span>.<span class="hljs-property">vy</span>;<br>  }<br>}<br></code></pre></td></tr></tbody></table></figure><h2 id="绘制粒子文字"><a href="#绘制粒子文字" class="headerlink" title="绘制粒子文字"></a>绘制粒子文字</h2><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// ...</span><br><span class="hljs-keyword">const</span> points = <span class="hljs-title function_">getPointsInfo</span>(options);<br><span class="hljs-title function_">draw</span>(points, options);<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">draw</span>(<span class="hljs-params">points, { width, height }</span>) {<br>  ctx.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, width, height);<br><br>  points.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">point</span>) =&gt;</span> {<br>    point.<span class="hljs-title function_">draw</span>();<br>  });<br><br>  <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">requestAnimationFrame</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) {<br>    <span class="hljs-title function_">draw</span>(points, options);<br>  });<br>}<br></code></pre></td></tr></tbody></table></figure><p><img src="https://www.clzczh.top/CLZ_img/images/202405300026395.gif"></p><h2 id="input-监听"><a href="#input-监听" class="headerlink" title="input 监听"></a>input 监听</h2><p>文字粒子数量调整，打乱已有粒子顺序。</p><blockquote><p>规则：</p><ol><li>遍历新点集，如果在旧点集中存在，则调用<code>change</code>方法更新旧点集的位置。如果不存在（即新点集比旧点集大），新增粒子。</li><li>遍历完新点集，如果新点集比旧点集小，则删除旧点集多的部分。</li><li>最后随机打乱点</li></ol></blockquote><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Particle</span> {<br>  <span class="hljs-comment">// ...</span><br>  <span class="hljs-title function_">change</span>(<span class="hljs-params">targetX, targetY</span>) {<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">targetX</span> = targetX;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">targetY</span> = targetY;<br>  }<br>}<br><br><span class="hljs-keyword">const</span> inputEle = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">"input"</span>);<br>inputEle.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">"keyup"</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> {<br>  <span class="hljs-keyword">if</span> (e.<span class="hljs-property">key</span> === <span class="hljs-string">"Enter"</span>) {<br>    textOptions.<span class="hljs-property">word</span> = inputEle.<span class="hljs-property">value</span>;<br><br>    <span class="hljs-keyword">const</span> newPoints = <span class="hljs-title function_">getPointsInfo</span>(options);<br>    <span class="hljs-title function_">changeFont</span>(points, newPoints);<br>  }<br>});<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">shuffle</span>(<span class="hljs-params">oldPoints</span>) {<br>  <span class="hljs-comment">// 随机打算顺序，让切换更自然</span><br>  <span class="hljs-keyword">let</span> len = oldPoints.<span class="hljs-property">length</span>;<br>  <span class="hljs-keyword">while</span> (len) {<br>    <span class="hljs-keyword">const</span> randomIndex = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * len--);<br>    <span class="hljs-keyword">const</span> randomPoint = oldPoints[randomIndex];<br><br>    <span class="hljs-keyword">const</span> { targetX, targetY } = randomPoint;<br><br>    randomPoint.<span class="hljs-property">targetX</span> = oldPoints[len].<span class="hljs-property">targetX</span>;<br>    randomPoint.<span class="hljs-property">targetY</span> = oldPoints[len].<span class="hljs-property">targetY</span>;<br><br>    oldPoints[len].<span class="hljs-property">targetX</span> = targetX;<br>    oldPoints[len].<span class="hljs-property">targetY</span> = targetY;<br>  }<br>}<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">changeFont</span>(<span class="hljs-params">oldPoints, newPoints</span>) {<br>  <span class="hljs-keyword">const</span> oldLen = oldPoints.<span class="hljs-property">length</span>;<br>  <span class="hljs-keyword">const</span> newLen = newPoints.<span class="hljs-property">length</span>;<br><br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; newPoints.<span class="hljs-property">length</span>; i++) {<br>    <span class="hljs-keyword">const</span> { targetX, targetY } = newPoints[i];<br><br>    <span class="hljs-comment">// 如果在旧的点集里存在，则调用change改变位置。否则，新增</span><br>    <span class="hljs-keyword">if</span> (oldPoints[i]) {<br>      oldPoints[i].<span class="hljs-title function_">change</span>(targetX, targetY);<br>    } <span class="hljs-keyword">else</span> {<br>      oldPoints[i] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Particle</span>({ <span class="hljs-attr">x</span>: targetX, <span class="hljs-attr">y</span>: targetY });<br>    }<br>  }<br><br>  <span class="hljs-comment">// 新点集比旧点集小</span><br>  <span class="hljs-keyword">if</span> (newLen &lt; oldLen) {<br>    oldPoints.<span class="hljs-title function_">splice</span>(newLen, oldLen);<br>  }<br><br>  <span class="hljs-title function_">shuffle</span>(oldPoints);<br>}<br></code></pre></td></tr></tbody></table></figure><p>效果：<br><img src="https://www.clzczh.top/CLZ_img/images/202405300053842.gif"></p><h2 id="添加鼠标互斥交互"><a href="#添加鼠标互斥交互" class="headerlink" title="添加鼠标互斥交互"></a>添加鼠标互斥交互</h2><blockquote><p>在<code>Particle</code>类的<code>update</code>方法中根据鼠标到粒子的距离，确定一个力度比例。（即距离越小，收到的力越大）。将力度转换为速度的减量，从而实现斥力的效果。</p></blockquote><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> mousePosition = {<br>  <span class="hljs-attr">mouseX</span>: <span class="hljs-literal">undefined</span>,<br>  <span class="hljs-attr">mouseY</span>: <span class="hljs-literal">undefined</span>,<br>};<br><br><span class="hljs-comment">/** 中心影响的半径 */</span><br><span class="hljs-keyword">const</span> <span class="hljs-title class_">Radius</span> = <span class="hljs-number">100</span>;<br><span class="hljs-comment">/** 排斥/吸引 力度 */</span><br><span class="hljs-keyword">const</span> <span class="hljs-title class_">Power</span> = <span class="hljs-number">0.8</span>;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Particle</span> {<br>  <span class="hljs-title function_">update</span>(<span class="hljs-params"></span>) {<br>    <span class="hljs-comment">// ...</span><br>    <span class="hljs-keyword">const</span> { mouseX, mouseY } = mousePosition;<br>    <span class="hljs-keyword">if</span> (mouseX &amp;&amp; mouseY) {<br>      <span class="hljs-comment">// 计算粒子与鼠标的距离</span><br>      <span class="hljs-keyword">let</span> dx = mouseX - <span class="hljs-variable language_">this</span>.<span class="hljs-property">x</span>;<br>      <span class="hljs-keyword">let</span> dy = mouseY - <span class="hljs-variable language_">this</span>.<span class="hljs-property">y</span>;<br>      <span class="hljs-keyword">let</span> distance = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sqrt</span>(dx ** <span class="hljs-number">2</span> + dy ** <span class="hljs-number">2</span>);<br><br>      <span class="hljs-comment">// 粒子相对鼠标距离的比例，来确定收到的力度比例</span><br>      <span class="hljs-keyword">let</span> disPercent = <span class="hljs-title class_">Radius</span> / distance;<br><br>      <span class="hljs-comment">// 设置阈值</span><br>      disPercent = disPercent &gt; <span class="hljs-number">7</span> ? <span class="hljs-number">7</span> : disPercent;<br><br>      <span class="hljs-keyword">const</span> angle = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">atan2</span>(dy, dx);<br>      <span class="hljs-keyword">const</span> cos = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">cos</span>(angle);<br>      <span class="hljs-keyword">const</span> sin = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>(angle);<br><br>      <span class="hljs-keyword">const</span> repX = cos * <span class="hljs-title class_">Power</span> * disPercent;<br>      <span class="hljs-keyword">const</span> repY = sin * <span class="hljs-title class_">Power</span> * disPercent;<br><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">vx</span> -= repX; <span class="hljs-comment">// 将力度转换为x、y方向上的速度。如果是斥力，则速度减去得到的值。否则，速度加上得到的值。</span><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">vy</span> -= repY;<br>    }<br><br>    <span class="hljs-comment">// ...</span><br>  }<br>}<br><br>canvas.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">"mousemove"</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> {<br>  <span class="hljs-keyword">const</span> { left, top } = canvas.<span class="hljs-title function_">getBoundingClientRect</span>();<br>  <span class="hljs-keyword">const</span> { clientX, clientY } = e;<br><br>  mousePosition.<span class="hljs-property">mouseX</span> = clientX - left;<br>  mousePosition.<span class="hljs-property">mouseY</span> = clientY - top;<br>});<br><br>canvas.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">"mouseleave"</span>, <span class="hljs-function">() =&gt;</span> {<br>  mousePosition.<span class="hljs-property">mouseX</span> = <span class="hljs-literal">undefined</span>;<br>  mousePosition.<span class="hljs-property">mouseY</span> = <span class="hljs-literal">undefined</span>;<br>});<br></code></pre></td></tr></tbody></table></figure><p>效果：<br><img src="https://www.clzczh.top/CLZ_img/images/202405300051820.gif"></p><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"en"</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"UTF-8"</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"viewport"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"width=device-width, initial-scale=1.0"</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>粒子文字<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">      <span class="hljs-selector-tag">html</span>,</span><br><span class="language-css">      <span class="hljs-selector-tag">body</span> {</span><br><span class="language-css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;</span><br><span class="language-css">        <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#000</span>;</span><br><span class="language-css">        <span class="hljs-attribute">overflow</span>: hidden;</span><br><span class="language-css">      }</span><br><span class="language-css"></span><br><span class="language-css">      <span class="hljs-selector-id">#container</span> {</span><br><span class="language-css">        <span class="hljs-attribute">position</span>: relative;</span><br><span class="language-css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;</span><br><span class="language-css">      }</span><br><span class="language-css"></span><br><span class="language-css">      <span class="hljs-selector-tag">input</span> {</span><br><span class="language-css">        <span class="hljs-attribute">position</span>: absolute;</span><br><span class="language-css">        <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">        <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;</span><br><span class="language-css">        <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(-<span class="hljs-number">50%</span>, -<span class="hljs-number">40px</span>);</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">400px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;</span><br><span class="language-css">        <span class="hljs-attribute">font-size</span>: <span class="hljs-number">24px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">text-align</span>: center;</span><br><span class="language-css">        <span class="hljs-attribute">background-color</span>: transparent;</span><br><span class="language-css">        <span class="hljs-attribute">border</span>: none;</span><br><span class="language-css">        <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#fff</span>;</span><br><span class="language-css">      }</span><br><span class="language-css"></span><br><span class="language-css">      <span class="hljs-selector-tag">input</span><span class="hljs-selector-pseudo">:focus-visible</span> {</span><br><span class="language-css">        <span class="hljs-attribute">outline</span>: none;</span><br><span class="language-css">      }</span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"container"</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"particle"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"./text-particle.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></tbody></table></figure><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> options = {<br>  <span class="hljs-attr">width</span>: <span class="hljs-number">400</span>,<br>  <span class="hljs-attr">height</span>: <span class="hljs-number">400</span>,<br>  <span class="hljs-attr">time</span>: <span class="hljs-number">20</span>,<br>};<br><br><span class="hljs-keyword">const</span> textOptions = {<br>  <span class="hljs-attr">word</span>: <span class="hljs-string">"赤蓝紫"</span>,<br>  <span class="hljs-attr">font</span>: <span class="hljs-string">"200px Arial"</span>,<br>};<br><br><span class="hljs-keyword">const</span> mousePosition = {<br>  <span class="hljs-attr">mouseX</span>: <span class="hljs-literal">undefined</span>,<br>  <span class="hljs-attr">mouseY</span>: <span class="hljs-literal">undefined</span>,<br>};<br><br><span class="hljs-comment">/** 中心影响的半径 */</span><br><span class="hljs-keyword">const</span> <span class="hljs-title class_">Radius</span> = <span class="hljs-number">100</span>;<br><span class="hljs-comment">/** 排斥/吸引 力度 */</span><br><span class="hljs-keyword">const</span> <span class="hljs-title class_">Power</span> = <span class="hljs-number">0.8</span>;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">initCanvas</span>(<span class="hljs-params"></span>) {<br>  <span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">"particle"</span>);<br>  <span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">"2d"</span>);<br><br>  options.<span class="hljs-property">width</span> = <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">clientWidth</span>;<br>  options.<span class="hljs-property">height</span> = <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">clientHeight</span>;<br><br>  canvas.<span class="hljs-property">width</span> = options.<span class="hljs-property">width</span>;<br>  canvas.<span class="hljs-property">height</span> = options.<span class="hljs-property">height</span>;<br><br>  <span class="hljs-keyword">return</span> { canvas, ctx };<br>}<br><span class="hljs-keyword">const</span> { canvas, ctx } = <span class="hljs-title function_">initCanvas</span>();<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Particle</span> {<br>  <span class="hljs-title function_">constructor</span>(<span class="hljs-params">point</span>) {<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">targetX</span> = point.<span class="hljs-property">x</span>;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">targetY</span> = point.<span class="hljs-property">y</span>;<br><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">x</span> = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * canvas.<span class="hljs-property">width</span>);<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">y</span> = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * canvas.<span class="hljs-property">height</span>);<br><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">radius</span> = <span class="hljs-number">3</span>;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">color</span> = <span class="hljs-string">`purple`</span>;<br>  }<br><br>  <span class="hljs-title function_">draw</span>(<span class="hljs-params"></span>) {<br>    ctx.<span class="hljs-title function_">beginPath</span>();<br>    ctx.<span class="hljs-property">fillStyle</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">color</span>;<br>    ctx.<span class="hljs-title function_">arc</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">x</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">y</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">radius</span>, <span class="hljs-number">0</span>, <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> * <span class="hljs-number">2</span>);<br>    ctx.<span class="hljs-title function_">fill</span>();<br><br>    ctx.<span class="hljs-title function_">closePath</span>();<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">update</span>();<br>  }<br><br>  <span class="hljs-title function_">update</span>(<span class="hljs-params"></span>) {<br>    <span class="hljs-keyword">const</span> mx = <span class="hljs-variable language_">this</span>.<span class="hljs-property">targetX</span> - <span class="hljs-variable language_">this</span>.<span class="hljs-property">x</span>;<br>    <span class="hljs-keyword">const</span> my = <span class="hljs-variable language_">this</span>.<span class="hljs-property">targetY</span> - <span class="hljs-variable language_">this</span>.<span class="hljs-property">y</span>;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">vx</span> = mx / options.<span class="hljs-property">time</span>;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">vy</span> = my / options.<span class="hljs-property">time</span>;<br><br>    <span class="hljs-keyword">const</span> { mouseX, mouseY } = mousePosition;<br>    <span class="hljs-keyword">if</span> (mouseX &amp;&amp; mouseY) {<br>      <span class="hljs-comment">// 计算粒子与鼠标的距离</span><br>      <span class="hljs-keyword">let</span> dx = mouseX - <span class="hljs-variable language_">this</span>.<span class="hljs-property">x</span>;<br>      <span class="hljs-keyword">let</span> dy = mouseY - <span class="hljs-variable language_">this</span>.<span class="hljs-property">y</span>;<br>      <span class="hljs-keyword">let</span> distance = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sqrt</span>(dx ** <span class="hljs-number">2</span> + dy ** <span class="hljs-number">2</span>);<br><br>      <span class="hljs-comment">// 粒子相对鼠标距离的比例，来确定收到的力度比例</span><br>      <span class="hljs-keyword">let</span> disPercent = <span class="hljs-title class_">Radius</span> / distance;<br><br>      <span class="hljs-comment">// 设置阈值</span><br>      disPercent = disPercent &gt; <span class="hljs-number">7</span> ? <span class="hljs-number">7</span> : disPercent;<br><br>      <span class="hljs-keyword">const</span> angle = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">atan2</span>(dy, dx);<br>      <span class="hljs-keyword">const</span> cos = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">cos</span>(angle);<br>      <span class="hljs-keyword">const</span> sin = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>(angle);<br><br>      <span class="hljs-keyword">const</span> repX = cos * <span class="hljs-title class_">Power</span> * disPercent;<br>      <span class="hljs-keyword">const</span> repY = sin * <span class="hljs-title class_">Power</span> * disPercent;<br><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">vx</span> -= repX; <span class="hljs-comment">// 将力度转换为x、y方向上的速度。如果是斥力，则速度减去得到的值。否则，速度加上得到的值。</span><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">vy</span> -= repY;<br>    }<br><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">x</span> += <span class="hljs-variable language_">this</span>.<span class="hljs-property">vx</span>;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">y</span> += <span class="hljs-variable language_">this</span>.<span class="hljs-property">vy</span>;<br>  }<br><br>  <span class="hljs-title function_">change</span>(<span class="hljs-params">targetX, targetY</span>) {<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">targetX</span> = targetX;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">targetY</span> = targetY;<br>  }<br>}<br><br><span class="hljs-keyword">const</span> points = <span class="hljs-title function_">getPointsInfo</span>(options);<br><span class="hljs-title function_">draw</span>(points, options);<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getPointsInfo</span>(<span class="hljs-params">{ width, height }</span>) {<br>  <span class="hljs-keyword">const</span> virtualCvs = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">"canvas"</span>);<br>  virtualCvs.<span class="hljs-property">width</span> = width;<br>  virtualCvs.<span class="hljs-property">height</span> = height;<br><br>  <span class="hljs-keyword">const</span> virtualCtx = virtualCvs.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">"2d"</span>);<br><br>  <span class="hljs-title function_">drawText</span>(virtualCtx, options, textOptions);<br>  <span class="hljs-keyword">return</span> <span class="hljs-title function_">getWordPxInfo</span>(virtualCtx, options);<br>}<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">drawText</span>(<span class="hljs-params">virtualCtx, { width, height }, { font, word }</span>) {<br>  virtualCtx.<span class="hljs-property">font</span> = font;<br>  <span class="hljs-keyword">const</span> measure = virtualCtx.<span class="hljs-title function_">measureText</span>(word); <span class="hljs-comment">// 获取文字的宽高</span><br><br>  virtualCtx.<span class="hljs-title function_">fillText</span>(word, (width - measure.<span class="hljs-property">width</span>) / <span class="hljs-number">2</span>, height / <span class="hljs-number">2</span>); <span class="hljs-comment">// (width - measure.width) / 2是为了让文字居中</span><br>}<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getWordPxInfo</span>(<span class="hljs-params">virtualCtx, { width, height, speed }</span>) {<br>  <span class="hljs-keyword">const</span> imageData = virtualCtx.<span class="hljs-title function_">getImageData</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, width, height).<span class="hljs-property">data</span>;<br><br>  <span class="hljs-keyword">const</span> gap = <span class="hljs-number">6</span>;<br>  <span class="hljs-keyword">const</span> particles = [];<br><br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> y = <span class="hljs-number">0</span>; y &lt; height; y += gap) {<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> x = <span class="hljs-number">0</span>; x &lt; width; x += gap) {<br>      <span class="hljs-keyword">const</span> position = (width * y + x) * <span class="hljs-number">4</span>; <span class="hljs-comment">// 获取点阵信息</span><br>      <span class="hljs-keyword">const</span> r = imageData[position];<br>      <span class="hljs-keyword">const</span> g = imageData[position + <span class="hljs-number">1</span>];<br>      <span class="hljs-keyword">const</span> b = imageData[position + <span class="hljs-number">2</span>];<br>      <span class="hljs-keyword">const</span> a = imageData[position + <span class="hljs-number">3</span>];<br><br>      <span class="hljs-comment">// 判断当前像素是否有文字</span><br>      <span class="hljs-keyword">if</span> (r + g + b + a &gt; <span class="hljs-number">0</span>) {<br>        <span class="hljs-comment">// 粒子实例化</span><br>        particles.<span class="hljs-title function_">push</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Particle</span>({ x, y }));<br>      }<br>    }<br>  }<br><br>  <span class="hljs-keyword">return</span> particles;<br>}<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">draw</span>(<span class="hljs-params">points, { width, height }</span>) {<br>  ctx.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, width, height);<br><br>  points.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">point</span>) =&gt;</span> {<br>    point.<span class="hljs-title function_">draw</span>();<br>  });<br><br>  <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">requestAnimationFrame</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) {<br>    <span class="hljs-title function_">draw</span>(points, options);<br>  });<br>}<br><br><span class="hljs-keyword">const</span> inputEle = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">"input"</span>);<br>inputEle.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">"keyup"</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> {<br>  <span class="hljs-keyword">if</span> (e.<span class="hljs-property">key</span> === <span class="hljs-string">"Enter"</span>) {<br>    textOptions.<span class="hljs-property">word</span> = inputEle.<span class="hljs-property">value</span>;<br><br>    <span class="hljs-keyword">const</span> newPoints = <span class="hljs-title function_">getPointsInfo</span>(options);<br>    <span class="hljs-title function_">changeFont</span>(points, newPoints);<br>  }<br>});<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">shuffle</span>(<span class="hljs-params">oldPoints</span>) {<br>  <span class="hljs-comment">// 随机打算顺序，让切换更自然</span><br>  <span class="hljs-keyword">let</span> len = oldPoints.<span class="hljs-property">length</span>;<br>  <span class="hljs-keyword">while</span> (len) {<br>    <span class="hljs-keyword">const</span> randomIndex = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * len--);<br>    <span class="hljs-keyword">const</span> randomPoint = oldPoints[randomIndex];<br><br>    <span class="hljs-keyword">const</span> { targetX, targetY } = randomPoint;<br><br>    randomPoint.<span class="hljs-property">targetX</span> = oldPoints[len].<span class="hljs-property">targetX</span>;<br>    randomPoint.<span class="hljs-property">targetY</span> = oldPoints[len].<span class="hljs-property">targetY</span>;<br><br>    oldPoints[len].<span class="hljs-property">targetX</span> = targetX;<br>    oldPoints[len].<span class="hljs-property">targetY</span> = targetY;<br>  }<br>}<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">changeFont</span>(<span class="hljs-params">oldPoints, newPoints</span>) {<br>  <span class="hljs-keyword">const</span> oldLen = oldPoints.<span class="hljs-property">length</span>;<br>  <span class="hljs-keyword">const</span> newLen = newPoints.<span class="hljs-property">length</span>;<br><br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; newPoints.<span class="hljs-property">length</span>; i++) {<br>    <span class="hljs-keyword">const</span> { targetX, targetY } = newPoints[i];<br><br>    <span class="hljs-comment">// 如果在旧的点集里存在，则调用change改变位置。否则，新增</span><br>    <span class="hljs-keyword">if</span> (oldPoints[i]) {<br>      oldPoints[i].<span class="hljs-title function_">change</span>(targetX, targetY);<br>    } <span class="hljs-keyword">else</span> {<br>      oldPoints[i] = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Particle</span>({ <span class="hljs-attr">x</span>: targetX, <span class="hljs-attr">y</span>: targetY });<br>    }<br>  }<br><br>  <span class="hljs-comment">// 新点集比旧点击小</span><br>  <span class="hljs-keyword">if</span> (newLen &lt; oldLen) {<br>    oldPoints.<span class="hljs-title function_">splice</span>(newLen, oldLen);<br>  }<br><br>  <span class="hljs-title function_">shuffle</span>(oldPoints);<br>}<br><br>canvas.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">"mousemove"</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> {<br>  <span class="hljs-keyword">const</span> { left, top } = canvas.<span class="hljs-title function_">getBoundingClientRect</span>();<br>  <span class="hljs-keyword">const</span> { clientX, clientY } = e;<br><br>  mousePosition.<span class="hljs-property">mouseX</span> = clientX - left;<br>  mousePosition.<span class="hljs-property">mouseY</span> = clientY - top;<br>});<br><br>canvas.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">"mouseleave"</span>, <span class="hljs-function">() =&gt;</span> {<br>  mousePosition.<span class="hljs-property">mouseX</span> = <span class="hljs-literal">undefined</span>;<br>  mousePosition.<span class="hljs-property">mouseY</span> = <span class="hljs-literal">undefined</span>;<br>});<br></code></pre></td></tr></tbody></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.kennethcachia.com/shape-shifter/">https://www.kennethcachia.com/shape-shifter/</a><br><a href="https://juejin.cn/post/7052152858518487053">https://juejin.cn/post/7052152858518487053</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;文字粒子动画效果&quot;&gt;&lt;a href=&quot;#文字粒子动画效果&quot; class=&quot;headerlink&quot; title=&quot;文字粒子动画效果&quot;&gt;&lt;/a&gt;文字粒子动画效果&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="前端" scheme="https://www.clzczh.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="animate" scheme="https://www.clzczh.top/tags/animate/"/>
    
  </entry>
  
  <entry>
    <title>使用 tiptap 实现简易富文本编辑器</title>
    <link href="https://www.clzczh.top/2024/05/06/tiptap/"/>
    <id>https://www.clzczh.top/2024/05/06/tiptap/</id>
    <published>2024-05-06T23:38:00.000Z</published>
    <updated>2025-04-16T03:00:50.158Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用-tiptap-实现简易富文本编辑器"><a href="#使用-tiptap-实现简易富文本编辑器" class="headerlink" title="使用 tiptap 实现简易富文本编辑器"></a>使用 tiptap 实现简易富文本编辑器</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>在工作中遇到实现富文本编辑器的功能，最后是使用了 tiptap 来实现，记录一下。</p></blockquote><h2 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h2><p>直接看官网的<code>快速开始</code>教程即可，安装<code>@tiptap/react</code>、<code>@tiptap/pm</code>、<code>@tiptap/starter-kit</code>这三剑客。</p><p>使用方法也很简单，使用<code>useEditor</code> Hook 得到 Editor 对象，然后赋值给<code>EditorContent</code>的 editor 属性即可</p><p>EditorX.tsx</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">EditorContent</span>, useEditor } <span class="hljs-keyword">from</span> <span class="hljs-string">"@tiptap/react"</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">StarterKit</span> <span class="hljs-keyword">from</span> <span class="hljs-string">"@tiptap/starter-kit"</span>;<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">"./index.css"</span>;<br><br><span class="hljs-keyword">const</span> extensions = [<span class="hljs-title class_">StarterKit</span>];<br><br><span class="hljs-keyword">type</span> <span class="hljs-title class_">EditorXProps</span> = {<br>  <span class="hljs-attr">defaultValue</span>?: <span class="hljs-built_in">string</span>;<br>  <span class="hljs-attr">onChange</span>?: <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">val</span>?: <span class="hljs-built_in">string</span></span>) =&gt;</span> <span class="hljs-built_in">void</span>;<br>};<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">EditorX</span> = (<span class="hljs-params"><span class="hljs-attr">props</span>: <span class="hljs-title class_">EditorXProps</span></span>) =&gt; {<br>  <span class="hljs-keyword">const</span> { <span class="hljs-attr">defaultValue</span>: content, onChange } = props;<br><br>  <span class="hljs-keyword">const</span> editor = <span class="hljs-title function_">useEditor</span>({<br>    <span class="hljs-attr">extensions</span>: [...extensions],<br>    content,<br>    <span class="hljs-title function_">onUpdate</span>(<span class="hljs-params">{ editor }</span>) {<br>      <span class="hljs-keyword">if</span> (!editor.<span class="hljs-title function_">getText</span>()) {<br>        onChange?.(<span class="hljs-literal">undefined</span>);<br>      } <span class="hljs-keyword">else</span> {<br>        onChange?.(editor.<span class="hljs-title function_">getText</span>());<br>      }<br>    },<br>  });<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">EditorContent</span> <span class="hljs-attr">editor</span>=<span class="hljs-string">{editor}</span> /&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/&gt;</span></span><br>  );<br>};<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">EditorX</span>;<br></code></pre></td></tr></tbody></table></figure><p>index.css</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.tiptap</span><span class="hljs-selector-class">.ProseMirror</span> {<br>  <span class="hljs-attribute">min-height</span>: <span class="hljs-number">62px</span>;<br>  <span class="hljs-attribute">outline</span>: none;<br>}<br><br><span class="hljs-selector-class">.tiptap</span> <span class="hljs-selector-tag">p</span><span class="hljs-selector-class">.is-editor-empty</span><span class="hljs-selector-pseudo">:first-child</span><span class="hljs-selector-pseudo">::before</span> {<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#adb5bd</span>;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-built_in">attr</span>(data-placeholder);<br>  <span class="hljs-attribute">float</span>: left;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">pointer-events</span>: none;<br>}<br></code></pre></td></tr></tbody></table></figure><p>app.tsx</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> { useState } <span class="hljs-keyword">from</span> <span class="hljs-string">"react"</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">EditorX</span> <span class="hljs-keyword">from</span> <span class="hljs-string">"./components/EditorX"</span>;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">App</span>(<span class="hljs-params"></span>) {<br>  <span class="hljs-keyword">const</span> [outerValue, setOuterValue] = <span class="hljs-title function_">useState</span>(<span class="hljs-string">"clz"</span>);<br><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">handleChange</span> = (<span class="hljs-params"><span class="hljs-attr">value</span>?: <span class="hljs-built_in">string</span></span>) =&gt; {<br>    <span class="hljs-keyword">if</span> (value) {<br>      <span class="hljs-title function_">setOuterValue</span>(value);<br>    }<br>  };<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">      {outerValue}</span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">EditorX</span> <span class="hljs-attr">defaultValue</span>=<span class="hljs-string">"clz"</span> <span class="hljs-attr">onChange</span>=<span class="hljs-string">{handleChange}</span> /&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/&gt;</span></span><br>  );<br>}<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">App</span>;<br></code></pre></td></tr></tbody></table></figure><p><img src="https://www.clzczh.top/CLZ_img/images/202405032257204.gif"></p><h2 id="使用插件-tiptap-extension-placeholder"><a href="#使用插件-tiptap-extension-placeholder" class="headerlink" title="使用插件@tiptap/extension-placeholder"></a>使用插件<code>@tiptap/extension-placeholder</code></h2><p>tiptap 编辑器并不是 input 这种输入框，而是通过普通的 div 元素，只是通过<code>contenteditable</code>这个属性来让 dom 元素可以编辑来实现的。所以自然不能直接使用 <code>placeholder</code>。tiptap 使用<code>placeholder</code>需要安装插件。</p><p>插件使用：</p><ol><li><p>引入</p><blockquote><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Placeholder</span> <span class="hljs-keyword">from</span> <span class="hljs-string">"@tiptap/extension-placeholder"</span>;<br></code></pre></td></tr></tbody></table></figure></blockquote></li><li><p>extensions 添加插件</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">const</span> editor = <span class="hljs-title function_">useEditor</span>({<br>  <span class="hljs-attr">extensions</span>: [<br>    ...extensions,<br>    <span class="hljs-title class_">Placeholder</span>.<span class="hljs-title function_">configure</span>({<br>      <span class="hljs-attr">placeholder</span>: <span class="hljs-string">"赤蓝紫到此一游"</span>,<br>    }),<br>  ],<br>  <span class="hljs-comment">// ...</span><br>});<br></code></pre></td></tr></tbody></table></figure></li></ol><p><img src="https://www.clzczh.top/CLZ_img/images/202405032308654.gif"></p><h2 id="添加操作菜单"><a href="#添加操作菜单" class="headerlink" title="添加操作菜单"></a>添加操作菜单</h2><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">const</span> <span class="hljs-title function_">EditorX</span> = (<span class="hljs-params"></span>) =&gt; {<br>  <span class="hljs-comment">// ...</span><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">handleBold</span> = (<span class="hljs-params"></span>) =&gt; {<br>    editor?.<span class="hljs-property">commands</span>.<span class="hljs-title function_">toggleBold</span>();<br>  };<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">EditorContent</span> <span class="hljs-attr">editor</span>=<span class="hljs-string">{editor}</span> /&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">      {editor &amp;&amp; (</span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">BubbleMenu</span> <span class="hljs-attr">editor</span>=<span class="hljs-string">{editor}</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"menu-bold"</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{handleBold}</span>&gt;</span></span><br><span class="language-xml">            B</span><br><span class="language-xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">BubbleMenu</span>&gt;</span></span><br><span class="language-xml">      )}</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/&gt;</span></span><br>  );<br><br>  <span class="hljs-comment">// ...</span><br>};<br></code></pre></td></tr></tbody></table></figure><p>样式</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.menu-bold</span> {<br>  <span class="hljs-attribute">display</span>: block;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">12px</span>;<br>  <span class="hljs-attribute">font-weight</span>: bold;<br>  <span class="hljs-attribute">cursor</span>: pointer;<br>}<br><br><span class="hljs-selector-class">.menu-bold</span><span class="hljs-selector-pseudo">:hover</span> {<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#eee</span>;<br>}<br></code></pre></td></tr></tbody></table></figure><blockquote><p>通过<code>BubbleMenu</code>展示操作菜单，并利用<code>editor?.commands</code>提供的 api 进行 tiptap 内置的一些操作，如上面的加粗。<br><img src="https://www.clzczh.top/CLZ_img/images/202405032325196.gif"></p></blockquote><h2 id="粘贴图片"><a href="#粘贴图片" class="headerlink" title="粘贴图片"></a>粘贴图片</h2><p><code>useEditor</code>参数对象可以接收<code>editorProps</code>属性，而<code>editorProps</code>属性里面有一个<code>handlePaste</code>方法，该方法的第二个方法就可以获取粘贴的文件信息，然后再利用<code>FileReader</code>就可以把文件以<code>base64</code>码的形式读取。</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">const</span> <span class="hljs-title function_">handlePaste</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"><span class="hljs-attr">view</span>: <span class="hljs-title class_">EditorView</span>, <span class="hljs-attr">event</span>: <span class="hljs-title class_">ClipboardEvent</span></span>) =&gt; {<br>  <span class="hljs-keyword">const</span> files = event.<span class="hljs-property">clipboardData</span>?.<span class="hljs-property">files</span>;<br>  <span class="hljs-keyword">const</span> file = files?.<span class="hljs-title function_">item</span>(<span class="hljs-number">0</span>);<br><br>  <span class="hljs-keyword">if</span> (!file || !file.<span class="hljs-property">type</span>.<span class="hljs-title function_">startsWith</span>(<span class="hljs-string">"image/"</span>)) {<br>    <span class="hljs-keyword">return</span>;<br>  }<br><br>  <span class="hljs-keyword">const</span> reader = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileReader</span>();<br>  reader.<span class="hljs-title function_">readAsDataURL</span>(file);<br><br>  reader.<span class="hljs-property">onload</span> = <span class="hljs-function">() =&gt;</span> {<br>    <span class="hljs-keyword">if</span> (reader.<span class="hljs-property">result</span>) {<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(reader.<span class="hljs-property">result</span>);<br>    }<br>  };<br>};<br><br><span class="hljs-keyword">const</span> editor = <span class="hljs-title function_">useEditor</span>({<br>  <span class="hljs-attr">extensions</span>: [<br>    ...extensions,<br>    <span class="hljs-title class_">Placeholder</span>.<span class="hljs-title function_">configure</span>({<br>      <span class="hljs-attr">placeholder</span>: <span class="hljs-string">"赤蓝紫到此一游"</span>,<br>    }),<br>    <span class="hljs-title class_">Image</span>.<span class="hljs-title function_">configure</span>({<br>      <span class="hljs-attr">inline</span>: <span class="hljs-literal">true</span>,<br>    }),<br>  ],<br>  content,<br>  <span class="hljs-title function_">onUpdate</span>(<span class="hljs-params">{ editor }</span>) {<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(editor);<br><br>    <span class="hljs-keyword">if</span> (!editor.<span class="hljs-title function_">getText</span>()) {<br>      onChange?.(<span class="hljs-literal">undefined</span>);<br>    } <span class="hljs-keyword">else</span> {<br>      onChange?.(editor.<span class="hljs-title function_">getText</span>());<br>    }<br>  },<br>  <span class="hljs-attr">editorProps</span>: {<br>    <span class="hljs-title function_">handlePaste</span>(<span class="hljs-params">view, event</span>) {<br>      <span class="hljs-title function_">handlePaste</span>(view, event);<br>    },<br>  },<br>});<br></code></pre></td></tr></tbody></table></figure><p><img src="https://www.clzczh.top/CLZ_img/images/202405062330746.gif"></p><p>然后通过添加<code>@tiptap/extension-image</code>插件把图片添加到编辑器上即可。</p><blockquote><p>$\color{red}{需要注意的是，需要配置<code>inline</code>为<code>true</code>，否则会出现图片粘贴上去，立马就被移出DOM树}$</p></blockquote><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs tsx">reader.<span class="hljs-property">onload</span> = <span class="hljs-function">() =&gt;</span> {<br>  <span class="hljs-keyword">if</span> (reader.<span class="hljs-property">result</span>) {<br>    editorRef.<span class="hljs-property">current</span><br>      ?.<span class="hljs-title function_">chain</span>()<br>      .<span class="hljs-title function_">focus</span>()<br>      .<span class="hljs-title function_">setImage</span>({<br>        <span class="hljs-attr">src</span>: reader.<span class="hljs-property">result</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">string</span>,<br>      })<br>      .<span class="hljs-title function_">run</span>();<br>  }<br>};<br></code></pre></td></tr></tbody></table></figure><p><img src="https://www.clzczh.top/CLZ_img/images/202405062336265.gif"></p><h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><p>EditorX.tsx</p><figure class="highlight tsx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> { useRef } <span class="hljs-keyword">from</span> <span class="hljs-string">"react"</span>;<br><span class="hljs-keyword">import</span> { <span class="hljs-title class_">BubbleMenu</span>, <span class="hljs-title class_">Editor</span>, <span class="hljs-title class_">EditorContent</span>, useEditor } <span class="hljs-keyword">from</span> <span class="hljs-string">"@tiptap/react"</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">StarterKit</span> <span class="hljs-keyword">from</span> <span class="hljs-string">"@tiptap/starter-kit"</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Placeholder</span> <span class="hljs-keyword">from</span> <span class="hljs-string">"@tiptap/extension-placeholder"</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Image</span> <span class="hljs-keyword">from</span> <span class="hljs-string">"@tiptap/extension-image"</span>;<br><br><span class="hljs-keyword">import</span> { <span class="hljs-title class_">EditorView</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">"@tiptap/pm/view"</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">"./index.css"</span>;<br><br><span class="hljs-keyword">const</span> extensions = [<br>  <span class="hljs-title class_">StarterKit</span>,<br>  <span class="hljs-title class_">Placeholder</span>.<span class="hljs-title function_">configure</span>({<br>    <span class="hljs-attr">placeholder</span>: <span class="hljs-string">"赤蓝紫到此一游"</span>,<br>  }),<br>  <span class="hljs-title class_">Image</span>.<span class="hljs-title function_">configure</span>({<br>    <span class="hljs-attr">inline</span>: <span class="hljs-literal">true</span>,<br>  }),<br>];<br><br><span class="hljs-keyword">type</span> <span class="hljs-title class_">EditorXProps</span> = {<br>  <span class="hljs-attr">defaultValue</span>?: <span class="hljs-built_in">string</span>;<br>  <span class="hljs-attr">onChange</span>?: <span class="hljs-function">(<span class="hljs-params"><span class="hljs-attr">val</span>?: <span class="hljs-built_in">string</span></span>) =&gt;</span> <span class="hljs-built_in">void</span>;<br>};<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">EditorX</span> = (<span class="hljs-params"><span class="hljs-attr">props</span>: <span class="hljs-title class_">EditorXProps</span></span>) =&gt; {<br>  <span class="hljs-keyword">const</span> { <span class="hljs-attr">defaultValue</span>: content, onChange } = props;<br><br>  <span class="hljs-keyword">const</span> editorRef = useRef&lt;<span class="hljs-title class_">Editor</span> | <span class="hljs-literal">null</span>&gt;(<span class="hljs-literal">null</span>);<br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">handlePaste</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"><span class="hljs-attr">view</span>: <span class="hljs-title class_">EditorView</span>, <span class="hljs-attr">event</span>: <span class="hljs-title class_">ClipboardEvent</span></span>) =&gt; {<br>    <span class="hljs-keyword">const</span> files = event.<span class="hljs-property">clipboardData</span>?.<span class="hljs-property">files</span>;<br>    <span class="hljs-keyword">const</span> file = files?.<span class="hljs-title function_">item</span>(<span class="hljs-number">0</span>);<br><br>    <span class="hljs-keyword">if</span> (!file || !file.<span class="hljs-property">type</span>.<span class="hljs-title function_">startsWith</span>(<span class="hljs-string">"image/"</span>)) {<br>      <span class="hljs-keyword">return</span>;<br>    }<br><br>    <span class="hljs-keyword">const</span> reader = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileReader</span>();<br>    reader.<span class="hljs-title function_">readAsDataURL</span>(file);<br><br>    reader.<span class="hljs-property">onload</span> = <span class="hljs-function">() =&gt;</span> {<br>      <span class="hljs-keyword">if</span> (reader.<span class="hljs-property">result</span>) {<br>        editorRef.<span class="hljs-property">current</span><br>          ?.<span class="hljs-title function_">chain</span>()<br>          .<span class="hljs-title function_">focus</span>()<br>          .<span class="hljs-title function_">setImage</span>({<br>            <span class="hljs-attr">src</span>: reader.<span class="hljs-property">result</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">string</span>,<br>          })<br>          .<span class="hljs-title function_">run</span>();<br>      }<br>    };<br>  };<br><br>  <span class="hljs-keyword">const</span> editor = <span class="hljs-title function_">useEditor</span>({<br>    <span class="hljs-attr">extensions</span>: extensions,<br>    content,<br>    <span class="hljs-title function_">onUpdate</span>(<span class="hljs-params">{ editor }</span>) {<br>      <span class="hljs-keyword">if</span> (!editor.<span class="hljs-title function_">getText</span>()) {<br>        onChange?.(<span class="hljs-literal">undefined</span>);<br>      } <span class="hljs-keyword">else</span> {<br>        onChange?.(editor.<span class="hljs-title function_">getText</span>());<br>      }<br>    },<br>    <span class="hljs-attr">editorProps</span>: {<br>      <span class="hljs-title function_">handlePaste</span>(<span class="hljs-params">view, event</span>) {<br>        <span class="hljs-title function_">handlePaste</span>(view, event);<br>      },<br>    },<br>  });<br>  editorRef.<span class="hljs-property">current</span> = editor;<br><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">handleBold</span> = (<span class="hljs-params"></span>) =&gt; {<br>    editor?.<span class="hljs-property">commands</span>.<span class="hljs-title function_">toggleBold</span>();<br>  };<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">EditorContent</span> <span class="hljs-attr">editor</span>=<span class="hljs-string">{editor}</span> /&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml">      {editor &amp;&amp; (</span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">BubbleMenu</span> <span class="hljs-attr">editor</span>=<span class="hljs-string">{editor}</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">className</span>=<span class="hljs-string">"menu-bold"</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{handleBold}</span>&gt;</span></span><br><span class="language-xml">            B</span><br><span class="language-xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">BubbleMenu</span>&gt;</span></span><br><span class="language-xml">      )}</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/&gt;</span></span><br>  );<br>};<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">EditorX</span>;<br></code></pre></td></tr></tbody></table></figure><p>index.css</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.tiptap</span><span class="hljs-selector-class">.ProseMirror</span> {<br>  <span class="hljs-attribute">min-height</span>: <span class="hljs-number">62px</span>;<br>  <span class="hljs-attribute">outline</span>: none;<br>}<br><br><span class="hljs-selector-class">.tiptap</span> <span class="hljs-selector-tag">p</span><span class="hljs-selector-class">.is-editor-empty</span><span class="hljs-selector-pseudo">:first-child</span><span class="hljs-selector-pseudo">::before</span> {<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#adb5bd</span>;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-built_in">attr</span>(data-placeholder);<br>  <span class="hljs-attribute">float</span>: left;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">pointer-events</span>: none;<br>}<br><br><span class="hljs-selector-class">.menu-bold</span> {<br>  <span class="hljs-attribute">display</span>: block;<br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">12px</span>;<br>  <span class="hljs-attribute">font-weight</span>: bold;<br>  <span class="hljs-attribute">cursor</span>: pointer;<br>}<br><br><span class="hljs-selector-class">.menu-bold</span><span class="hljs-selector-pseudo">:hover</span> {<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#eee</span>;<br>}<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;使用-tiptap-实现简易富文本编辑器&quot;&gt;&lt;a href=&quot;#使用-tiptap-实现简易富文本编辑器&quot; class=&quot;headerlink&quot; title=&quot;使用 tiptap 实现简易富文本编辑器&quot;&gt;&lt;/a&gt;使用 tiptap 实现简易富文本编辑器&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="前端" scheme="https://www.clzczh.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="tiptap" scheme="https://www.clzczh.top/tags/tiptap/"/>
    
    <category term="富文本" scheme="https://www.clzczh.top/tags/%E5%AF%8C%E6%96%87%E6%9C%AC/"/>
    
  </entry>
  
</feed>
